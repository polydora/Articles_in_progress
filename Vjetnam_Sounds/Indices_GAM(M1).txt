setwd("C:\\Users\\viver\\Desktop\\Data_acoustic_indices")
library(mgcv)
library(ggplot2); 
library(gratia)
library(dplyr)
library(reshape2)
indices <- read.csv2("Data_acoustic_indices.csv")
indices2 <- indices %>% select(time24, month, ACI_Mean, BI_Mean_6.5, BI_Mean_12, ADI_Mean, AEI_Mean)

indices2$ACI_Mean_P <- indices2$ACI_Mean/max(indices2$ACI_Mean)
indices2$BI_Mean_6.5_P <- indices2$BI_Mean_6.5/max(indices2$BI_Mean_6.5) 
indices2$BI_Mean_12_P <- indices2$BI_Mean_12/max(indices2$BI_Mean_12)
indices2$ADI_Mean_P <- indices2$ADI_Mean/max(indices2$ADI_Mean)
indices2$AEI_Mean_P <- indices2$AEI_Mean/max(indices2$AEI_Mean)

indices3 <- 
  indices2 %>% 
  select(time24, month, ACI_Mean_P, BI_Mean_6.5_P, BI_Mean_12_P, ADI_Mean_P, AEI_Mean_P) %>% 
  melt(., id.vars = c("time24", "month"), variable.name = "Index", value.name = "Value")

indices3$Index <- factor(indices3$Index)
# Модель с разными смузерами по часам и месяцам для каждого индекса
M1 <- gam(Value ~ s(time24, by = Index,  k = 24, bs = 'cc') + Index + s(month, by = Index, k = 12, bs = "cc"), method = 'REML',  knots = list(time24 = c(0, 24), month = c(1,12)), family = "betar", data = indices3) 

# Модель с разными смузерами по месяцам для каждого индекса, но с общим смузером по часам
M2 <- gam(Value ~ s(time24,   k = 24, bs = 'cc') + Index + s(month, by = Index, k = 12, bs = "cc"), method = 'REML',  knots = list(time24 = c(0, 24), month = c(1,12)), family = "betar", data = indices3)

# Модель с разными смузерами для каждого индекса по часам, но общим смузером по месяцам 
M3 <- gam(Value ~ s(time24, by = Index,  k = 24, bs = 'cc') + Index + s(month,  k = 12, bs = "cc"), method = 'REML',  knots = list(time24 = c(0, 24), month = c(1,12)), family = "betar", data = indices3)

# Модель с общими  смузерами и по месяцам и часам 
M4 <- gam(Value ~ s(time24,  k = 24, bs = 'cc') + Index + s(month,  k = 12, bs = "cc"), method = 'REML',  knots = list(time24 = c(0, 24), month = c(1,12)), family = "betar", data = indices3)

library(AICcmodavg)
AIC(M1, M2, M3, M4)

appraise(M1)

draw(M1, scales = 'fixed')