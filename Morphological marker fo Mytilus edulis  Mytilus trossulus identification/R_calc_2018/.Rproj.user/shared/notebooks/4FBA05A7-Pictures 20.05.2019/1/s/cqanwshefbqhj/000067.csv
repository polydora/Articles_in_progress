"0","# "
"0","# Mod_correctness_test <- glmer(Sp_observed ~ str_predicted*Subset + (1|pop), data = myt3_test_all, family = binomial(link = ""logit""))"
"0","# "
"0","# # overdisp(Mod_correctness_test)"
"0","# "
"0","# # drop1(Mod_correctness_test, test = ""Chi"")"
"0","# "
"0","# "
"0","# "
"0","# newdata <- myt3_test_all %>% group_by(Subset) %>% do(data.frame(str_predicted = seq(min(.$str_predicted), max(.$str_predicted), length.out = 100)))"
"0","# "
"0","# # Предсказанные значеня в шкале вероятностей"
"0","# newdata$fit <- predict(Mod_correctness_test, newdata = newdata, type = ""response"", re.form = NA) "
"0","# "
"0","# # Предсказанные значеня в шкале логитов"
"0","# newdata$fit_eta <- predict(Mod_correctness_test, newdata = newdata, re.form = NA) "
"0","# "
"0","# # Вычисление доверительного инеравала"
"0","# "
"0","# # formula((Mod_fT_congr_fin)) "
"0","# "
"0","# X <- model.matrix(  ~ str_predicted*Subset, data = newdata) #Модельная матрица для визуализации"
"0","# "
"0","# "
"0","# # Ошибки в шкале логитов"
"0","# newdata$se_eta <- sqrt(diag(X %*% vcov(Mod_correctness_test) %*% t(X)))"
"0","# "
"0","# logit_back <- function(x) exp(x)/(1 + exp(x)) # обратная логит-трансформация"
"0","# "
"0","# # Границы доверительных интервалов в масштабах вероятностей"
"0","# newdata$lwr <- logit_back(newdata$fit_eta - 2 * newdata$se_eta)"
"0","# newdata$upr <- logit_back(newdata$fit_eta + 2 * newdata$se_eta)"
"0","# "
"0","# # newdata$lwr <- probit_back(newdata$fit_eta - 2 * newdata$se_eta)"
"0","# # newdata$upr <- probit_back(newdata$fit_eta + 2 * newdata$se_eta)"
"0","# "
"0","# freq_MT_test <- myt3_test_all %>% group_by(Subset, pop, morph, str_predicted) %>% summarise(freq_MT = mean(Sp_observed))"
"0","# "
"0","# ggplot(newdata, aes(x = str_predicted, y = fit)) + "
"0","#   geom_ribbon(aes(ymin = lwr, ymax = upr, group = Subset), alpha = 0.2) + "
"0","#   geom_line(size=1) + "
"0","#   geom_point(data = freq_MT_test, aes(x = str_predicted,  y = freq_MT, color = morph), size = 4 ) +"
"0","#   facet_wrap( ~ Subset)  + "
"0","#   scale_color_manual(values = c(""blue"", ""red""))+"
"0","#   geom_abline()+"
"0","#   theme_bw() + "
"0","#   xlim(0,1)  +"
"0","#   labs(x = ""Predicted probability to be MT"", y = ""Observed probability to be MT"") + theme(legend.position = ""bottom"")"
"0","# "
"0","# "
"0","# "
