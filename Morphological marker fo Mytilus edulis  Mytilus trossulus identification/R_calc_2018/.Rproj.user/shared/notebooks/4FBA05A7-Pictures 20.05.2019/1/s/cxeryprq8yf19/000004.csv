"0","# Функция для вычисления условных вероятностей"
"0","probs_calc <- function(variable = ""Subset"", place = ""White"") {"
"0","  n <- which(names(myt2_reduced) == variable)"
"0","  d <- myt2_reduced[myt2_reduced[,n] == place, ]"
"0","  dd <- melt(table(d$Sp, d$morph))"
"0","  freq_dd <- dcast(data = dd, formula = Var2 ~ Var1)"
"0","  P_T_MT <- round(with(data = freq_dd, M.trossulus[2] /(M.trossulus[2] + M.trossulus[1])), 2)"
"0","  P_T_ME <- round(with(data = freq_dd, M.edulis[2] /(M.edulis[2] + M.edulis[1])), 2)"
"0","  # P_ME <- round(with(data = freq_dd, sum(M.edulis) /(sum(freq_dd[,-1]))), 2)"
"0","  P_E_ME <- round(with(data = freq_dd, M.edulis[1] /(M.edulis[1] + M.edulis[2])), 2)"
"0","  P_E_MT <- round(with(data = freq_dd, M.trossulus[1] /(M.trossulus[1] + M.trossulus[2])), 2)"
"0","  # P_MT <- round(with(data = freq_dd, sum(M.trossulus) /(sum(freq_dd[,-1]))), 2)"
"0","  probs <- data.frame(P_MT = seq(0, 1, 0.01), P_MT_T = NA, P_ME_E = NA)"
"0","  probs$P_MT_T <- with(probs, (P_T_MT*P_MT)/(P_T_MT*P_MT + P_T_ME*(1-P_MT)))"
"0","  probs$P_ME_E <- with(probs, (P_E_ME*(1-P_MT))/(P_E_ME*(1-P_MT) + P_E_MT*P_MT)  )"
"0","  probs[,4] <- place"
"0","  names(probs)[4] <- variable"
"0","  probs"
"0","}"
"0","probs_all <- rbind(probs_calc(place = ""White""), probs_calc(place = ""Barents_fresh""), probs_calc(place = ""Barents_normal"") )"
"0","# "
"0","# probs_all$sea <- ifelse(probs_all$Location == ""white_normal"" | probs_all$Location == ""white_fresh"", ""white"", ""barents"") "
"0","# "
"0","# probs_all$sal_place <- ifelse(probs_all$Location == ""barents_normal"" | probs_all$Location == ""white_normal"", ""normal"", ""fresh"") "
"0","########################### Вычисление таблицы со всеми показателями для регионов"
"0","probs_calc_3 <- function(variable = ""Subset"", place = ""White"", P_MT = 0.5) {"
"0","  n <- which(names(myt2_reduced) == variable)"
"0","  d <- myt2_reduced[myt2_reduced[,n] == place, ]"
"0","  dd <- melt(table(d$Sp, d$morph))"
"0","  freq_dd <- dcast(data = dd, formula = Var2 ~ Var1)"
"0","  "
"0","  P_T_MT <- round(with(data = freq_dd, M.trossulus[2] /(M.trossulus[2] + M.trossulus[1])), 2)"
"0","  P_T_ME <- round(with(data = freq_dd, M.edulis[2] /(M.edulis[2] + M.edulis[1])), 2)"
"0","  # P_ME <- round(with(data = freq_dd, sum(M.edulis) /(sum(freq_dd[,-1]))), 2)"
"0","  "
"0","  P_E_ME <- round(with(data = freq_dd, M.edulis[1] /(M.edulis[1] + M.edulis[2])), 2)"
"0","  P_E_MT <- round(with(data = freq_dd, M.trossulus[1] /(M.trossulus[1] + M.trossulus[2])), 2)"
"0","  # P_MT <- round(with(data = freq_dd, sum(M.trossulus) /(sum(freq_dd[,-1]))), 2)"
"0","  "
"0","  "
"0","  P_MT_T <- (P_T_MT*P_MT)/(P_T_MT*P_MT + P_T_ME*(1-P_MT))"
"0","  P_ME_E <- (P_E_ME*(1-P_MT))/(P_E_ME*(1-P_MT) + P_E_MT*P_MT)"
"0","  "
"0","  c(P_MT_T, P_ME_E)"
"0","}"
"0","freq_calc2 <- function(variable = ""Subset"", place = ""Barents_fresh""){"
"0","  n <- which(names(myt2_reduced) == variable)"
"0","  d <- myt2_reduced[myt2_reduced[,n] == place, ]"
"0","  dd <- melt(table(d$Sp, d$morph))"
"0","  freq_dd <- dcast(data = dd, formula = Var2 ~ Var1)"
"0","  #Вероятность встретить M,trossulus среди Т морфотипа оценка условной веротяности P_MT|T"
"0","  P_MT_T <- freq_dd$M.trossulus[2]/(freq_dd$M.trossulus[2] + freq_dd$M.edulis[2])"
"0","  "
"0","  #Вероятность встретить M.edulis среди E морфотипа"
"0","  P_ME_E <- freq_dd$M.edulis[1]/(freq_dd$M.edulis[1] + freq_dd$M.trossulus[1])"
"0","  "
"0","  #Вероятность встретить M.trossulus среди E морфотипа"
"0","  P_MT_E <- freq_dd$M.trossulus[1]/(freq_dd$M.edulis[1] + freq_dd$M.trossulus[1])"
"0","  #Вероятность встретить M.edulis среди T морфотипа"
"0","  P_ME_T <- freq_dd$M.edulis[2]/(freq_dd$M.edulis[2] + freq_dd$M.trossulus[2])"
"0","  #Вероятность встретить T морфотп среди M.trossulus морфотипа"
"0","  P_T_MT <- freq_dd$M.trossulus[2]/(freq_dd$M.trossulus[2] + freq_dd$M.trossulus[1])"
"0","  #Вероятность встретить E морфотп среди M.trossulus морфотипа"
"0","  P_E_MT <- freq_dd$M.trossulus[1]/(freq_dd$M.trossulus[2] + freq_dd$M.trossulus[1])"
"0","  #Вероятность встретить T морфотп среди M.edulis морфотипа"
"0","  P_T_ME <- freq_dd$M.edulis[2]/(freq_dd$M.edulis[2] + freq_dd$M.edulis[1])"
"0","  "
"0","  #Вероятность встретить E морфотп среди M.edlis морфотипа"
"0","  P_E_ME <- freq_dd$M.edulis[1]/(freq_dd$M.edulis[2] + freq_dd$M.edulis[1])"
"0","  #Вероятность встретить M.trossulus любого морфотипа"
"0","  P_MT   <- sum(freq_dd$M.trossulus)/(sum(freq_dd$M.trossulus) + sum(freq_dd$M.edulis))"
"0","  #Вероятность встретить M.edulis любого морфотипа"
"0","  P_ME   <- sum(freq_dd$M.edulis)/(sum(freq_dd$M.trossulus) + sum(freq_dd$M.edulis))"
"0","  #Вероятность встретить M.trossulus T морфотипа"
"0","  P_MT_of_T   <- (freq_dd$M.trossulus[2])/(sum(freq_dd$M.trossulus) + sum(freq_dd$M.edulis))"
"0","  "
"0","  #Вероятность встретить M.trossulus E морфотипа"
"0","  P_MT_of_E   <- (freq_dd$M.trossulus[1])/(sum(freq_dd$M.trossulus) + sum(freq_dd$M.edulis))"
"0","  #Вероятность встретить M.edulis T морфотипа"
"0","  P_ME_of_T   <- (freq_dd$M.edulis[2])/(sum(freq_dd$M.trossulus) + sum(freq_dd$M.edulis))"
"0","  "
"0","  #Вероятность встретить M.edulis E морфотипа"
"0","  P_ME_of_E   <- (freq_dd$M.edulis[1])/(sum(freq_dd$M.trossulus) + sum(freq_dd$M.edulis))"
"0","  #Вероятность встретить  E морфотип"
"0","  P_E   <- sum(freq_dd[1, -1])/sum(freq_dd[,-1])"
"0","  "
"0","  #Вероятность встретить  T морфотип"
"0","  P_T   <- sum(freq_dd[2, -1])/sum(freq_dd[,-1])"
"0","  "
"0","    "
"0","  props <- c(P_MT_T, P_ME_E, P_MT_E, P_ME_T, P_T_MT, P_E_MT, P_T_ME,  P_E_ME, P_MT, P_ME, P_MT_of_T, P_MT_of_E, P_ME_of_T, P_ME_of_E, P_E, P_T)"
"0","  names(props) <- c(""P_MT_T"", ""P_ME_E"", ""P_MT_E"", ""P_ME_T"", ""P_T_MT"", ""P_E_MT"", ""P_T_ME"",  ""P_E_ME"", ""P_MT"", ""P_ME"", ""P_MT_of_T"", ""P_MT_of_E"", ""P_ME_of_T"", ""P_ME_of_E"", ""P_E"", ""P_T"")"
"0","  "
"0","  props"
"0","}"
"0","All_freq <- data.frame(Barents_normal = freq_calc2(place = ""Barents_normal""), "
"0","                       Barents_fresh = freq_calc2(place = ""Barents_fresh""),"
"0","                       White = freq_calc2(place = ""White""))"
"0","tAll_freq <- as.data.frame(t(All_freq))"
"0","tAll_freq$Location <- rownames(tAll_freq)"
"0","###########################"
"0","#### Вводится коррекция в соответствии с тем, что P_MT_T = congr_T/P_T"
"0","newdata$Location <- newdata$Subset"
"0","newdata_and_freq <- merge(newdata, tAll_freq, by = ""Location"")"
"0","newdata_and_freq$fit_corrected <- ifelse(newdata_and_freq$morph == ""T_m"",newdata_and_freq$fit / newdata_and_freq$P_T, newdata_and_freq$fit / (1 - newdata_and_freq$P_T) )"
"0","Pl_fit_corrected <- ggplot(newdata_and_freq, aes(x = freq_MT, y = fit_corrected)) + geom_line(aes(color = morph), size=1) + facet_grid(sea ~ sal_place) + scale_color_manual(values = c(""blue"", ""red"")) + theme_bw() + xlim(0,1)  + labs(y = ""Probability of correct identification"", x = ""Proportion of M.trossulus"", color = ""Morphotype"") + theme(legend.position = ""bottom"")"
"0"," "
"0"," "
"0"," "
"0","Pl_fit_init_data_bayes <- Pl_fit_init_data + geom_line(data = probs_all, aes(x = P_MT,  y = P_MT_T), color = ""red"", linetype = 2) + geom_line(data = probs_all, aes(x = P_MT,  y = P_ME_E), color = ""blue"", linetype = 2)"
"0","Pl_fit_init_data_bayes"
