pops_max_mix_BALT <- c("kast87", "Vhg05")
pops_max_mix_SCOT <- max_mix(df = myt2_all, Subset = "SCOT")
pops_max_mix_NORW <- as.character(unique(myt2_all [myt2_all$Subset == "NORW", "pop"]))
#########################################################
# # В этом коде для поиска максимально различных или максимально смешанных выборок используются данные по чстотам T-morphotype
# pops_max_dif_WBL <- max_dif_T(df = myt2_all, Subset = "WSBL")
# pops_max_dif_BH <- max_dif_T(df = myt2_all, Subset = "BH")
# pops_max_dif_GOM <- max_dif_T(df = myt2_all, Subset = "GOM")
# pops_max_dif_BALT <- max_dif_T(df = myt2_all, Subset = "BALT")
# pops_max_dif_SCOT <- max_dif_T(df = myt2_all, Subset = "SCOT")
# pops_max_dif_NORW <- max_dif_T(df = myt2_all, Subset = "NORW")
#
#
# pops_max_mix_WBL <- max_mix_T(df = myt2_all, Subset = "WBL")
# pops_max_mix_BH <- max_mix_T(df = myt2_all, Subset = "BH")
# pops_max_mix_GOM <- max_mix_T(df = myt2_all, Subset = "GOM")
# pops_max_mix_BALT <- max_mix_T(df = myt2_all, Subset = "BALT")
# pops_max_mix_SCOT <- max_mix_T(df = myt2_all, Subset = "SCOT")
# pops_max_mix_NORW <- max_mix_T(df = myt2_all, Subset = "NORW")
# ##########################################################
# Бублики для наиболее смешанных популяций
donat_max_mix_WBL <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_WBL, ])
donat_max_mix_BH <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_BH, ])
donat_max_mix_GOM <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_GOM, ])
donat_max_mix_BALT <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_BALT, ])
# donat_max_mix_SCOT <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_SCOT, ])
donat_max_mix_NORW <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_NORW, ])
donat_max_mix_SCOT <- donat(myt2_all[myt2_all$Subset == "SCOT", ]) #При малом количесвте выборок бублик считаем по всем сборам
# donat_max_mix_NORW <- donat(df = myt2_all[myt2_all$Subset == "NORW", ]) #При малом количесвте выборок бублик считаем по всем сборам
# Бублики для наиболее различных по стуртуре популяций
donat_max_dif_WBL <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_WBL, ])
donat_max_dif_BH <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_BH, ])
donat_max_dif_GOM <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_GOM, ])
donat_max_dif_BALT <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_BALT, ])
# donat_max_dif_SCOT <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_SCOT, ])
donat_max_dif_NORW <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_NORW, ])
donat_max_dif_SCOT <- donat(df = myt2_all[myt2_all$Subset == "SCOT", ]) #При малом количесвте выборок бублик считаем по всем сборам
# donat_max_dif_NORW <- donat(df = myt2_all[myt2_all$Subset == "NORW", ]) #При малом количесвте выборок бублик считаем по всем сборам
#Предсказания калькулятора 2 на основе наиболее смешанных популяций
calc2_WBL <- calc2(donat_max_mix_WBL[1], donat_max_mix_WBL[2])
calc2_BH <- calc2(donat_max_mix_BH[1], donat_max_mix_BH[2])
calc2_GOM <- calc2(donat_max_mix_GOM[1], donat_max_mix_GOM[2])
calc2_BALT <- calc2(donat_max_mix_BALT[1], donat_max_mix_BALT[2])
calc2_SCOT <- calc2(donat_max_mix_SCOT[1], donat_max_mix_SCOT[2])
calc2_NORW <- calc2(donat_max_mix_NORW[1], donat_max_mix_NORW[2])
calc2_WBL$Subset <- "WSBL"
calc2_BH$Subset <- "BH"
calc2_GOM$Subset <- "GOM"
calc2_BALT$Subset <- "BALT"
calc2_SCOT$Subset <- "SCOT"
calc2_NORW$Subset <- "NORW"
calc2_predictions <- rbind(calc2_WBL, calc2_BH, calc2_GOM, calc2_BALT, calc2_SCOT, calc2_NORW)
calc2_predictions$Subset <- factor(calc2_predictions$Subset, levels = levels(myt2_all$Subset))
#Предсказания калькулятора 1 на основе наиболее различных популяций
calc1_WBL <- calc1(donat_max_dif_WBL[1], donat_max_dif_WBL[2])
calc1_BH <- calc1(donat_max_dif_BH[1], donat_max_dif_BH[2])
calc1_GOM <- calc1(donat_max_dif_GOM[1], donat_max_dif_GOM[2])
calc1_BALT <- calc1(donat_max_dif_BALT[1], donat_max_dif_BALT[2])
calc1_SCOT <- calc1(donat_max_dif_SCOT[1], donat_max_dif_SCOT[2])
calc1_NORW <- calc1(donat_max_dif_NORW[1], donat_max_dif_NORW[2])
calc1_WBL$Subset <- "WSBL"
calc1_BH$Subset <- "BH"
calc1_GOM$Subset <- "GOM"
calc1_BALT$Subset <- "BALT"
calc1_SCOT$Subset <- "SCOT"
calc1_NORW$Subset <- "NORW"
calc1_predictions <- rbind(calc1_WBL, calc1_BH, calc1_GOM, calc1_BALT, calc1_SCOT, calc1_NORW)
calc1_predictions$Subset <- factor(calc1_predictions$Subset, levels = levels(myt2_all$Subset))
Pl_mod6_with_initial_data_teor_calc2 <- Pl_mod6_with_initial_data +
geom_line(data = calc2_predictions, aes(x = freq_MT, y = P_MT_T), color = "red") +
geom_line(data = calc2_predictions, aes(x = freq_MT, y = P_ME_E), color = "blue")
Pl_mod6_with_initial_data_teor_calc2
Pl_mod6_with_initial_data_teor_calc2 <- Pl_mod6_with_initial_data
Pl_mod7_with_initial_data_teor_calc1 <- Pl_mod7_with_initial_data
library(cowplot)
Pl <- plot_grid(Pl_mod7_with_initial_data_teor_calc1 + theme(axis.text.y = element_text(size = 6)),
Pl_mod8_with_initial_data+ theme(axis.text.y = element_text(size = 6)),
Pl_mod6_with_initial_data_teor_calc2+ theme(axis.text.y = element_text(size = 6)),
ncol =3, labels = c("A", "B", "C" ))
Pl
Pl_mod6_with_initial_data
Pl
myt3_and_Atlantic <- myt2_all[myt2_all$Subset %in% c("GOM", "BALT", "NORW"), ]
myt3_and_Atlantic <- myt2_all[myt2_all$Subset %in% c("GOM", "BALT", "NORW"), ]
pr_value_myt3_and_Atlantic <- myt3_and_Atlantic %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_T = sum(ind == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_E = sum(ind == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
pr_value_myt3_and_Atlantic$PMT_T <- with(pr_value_myt3_and_Atlantic, N_T_MT / N_T)
pr_value_myt3_and_Atlantic$PMT_E <- with(pr_value_myt3_and_Atlantic, N_E_MT / N_T)
pr_value_myt3_and_Atlantic$PME_E <- with(pr_value_myt3_and_Atlantic, N_E_ME / N_E)
pr_value_myt3_and_Atlantic$PME_T <- with(pr_value_myt3_and_Atlantic, N_T_ME / N_E)
Pl_mod6_with_initial_data <- Pl_mod6 + geom_segment(data = pr_value_myt3_and_Atlantic, aes(x = freq_MT, y = PME_E, xend = freq_MT, yend = PMT_T), color="darkgrey") +
geom_hline(aes(yintercept=0.5), color="black") +
geom_point(data = pr_value_myt3_and_Atlantic, aes(y = PME_E), fill = "white", shape = 22) +
geom_point(data = pr_value_myt3_and_Atlantic, aes(y = PMT_T), fill = "black", shape = 22) +
labs(y =  "P(edu|E)\nP(tros|T)", x = "Ptros", fill = "")+
ylim(0,1) +
xlim(0,1)
Pl_mod6_with_initial_data
new_data7 <- myt2_reduced %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(Prop_T) ) %>% group_by(Subset) %>%  do(data.frame(Prop_T = seq(min(.$Prop_T), max(.$Prop_T), length.out = 10)))
predicted7 <- predict(Model_7_final, newdata = new_data7,  type="response", se.fit = T)
new_data7$fit <- predicted7$fit
new_data7$SE <- predicted7$se.fit
Pl_mod7 <- ggplot(new_data7, aes(x = Prop_T, y = fit)) +
geom_line(linetype = 1, color = "red", size = 1) +
facet_wrap(~Subset, ncol = 1, strip.position="right") +
geom_ribbon(aes(ymin = fit - 1.96*SE, ymax = fit + 1.96*SE), alpha = 0.1) +
xlim(0, 1) +
ylim(0, 1) +
geom_rug(data = myt2_reduced, inherit.aes = FALSE,  aes(x = Prop_T), size = 0.1) +
geom_abline()
init_data_Model_7 <- myt3_and_Atlantic %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(morph == "T_m"),  freq_MT = mean(Sp == "M.trossulus"), N = n())
init_data_Model_7$Subset <- factor(init_data_Model_7$Subset, levels = c("WSBL", "BH", "GOM", "BALT", "NORW"))
Pl_mod7_with_initial_data <- Pl_mod7 + geom_point(data = init_data_Model_7, aes( y = freq_MT), shape = 21, size = 2, fill = "gray" ) + scale_fill_continuous(low = "white", high = "black") + labs(y = "Ptros \n", x = "PT") + theme(strip.text = element_blank())
new_data8 <- myt2_reduced %>% group_by(Subset,  Sp) %>% do(data.frame(freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data8$eta <- predict(Model_8_final, newdata = new_data8,  re.form = NA)
X <- model.matrix( ~ freq_MT * Subset * Sp  , data = new_data8)
new_data8$SE_eta <- sqrt(diag(X %*% vcov(Model_8_final) %*% t(X)))
new_data8$fit <- logit_back(new_data8$eta)
new_data8$lwr <- logit_back(new_data8$eta -  1.96 *new_data8$SE_eta)
new_data8$upr <- logit_back(new_data8$eta +  1.96 *new_data8$SE_eta)
Pl_mod8 <-  ggplot(new_data8, aes(x = freq_MT, y = fit, group = Sp)) +
geom_line(linetype = 1,  size = 1, aes(color = Sp)) +
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.1) +
facet_wrap(~Subset, ncol = 1)  +
xlim(0, 1) + ylim(0, 1) +
scale_color_manual(values=c("blue", "red")) +
guides(color = "none") +
geom_rug(data = myt2_reduced, inherit.aes = FALSE,  aes(x = freq_MT), size = 0.1) +
theme(strip.text = element_blank())
pops_over_M <- myt2_reduced %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_MT = sum(Sp2 == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_ME = sum(Sp2 == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
pops_over_M$P_T_MT <- with(pops_over_M, N_T_MT / N_MT)
pops_over_M$P_E_MT <- with(pops_over_M, N_E_MT / N_MT)
pops_over_M$P_E_ME <- with(pops_over_M, N_E_ME / N_ME)
pops_over_M$P_T_ME <- with(pops_over_M, N_T_ME / N_ME)
test_Model_8 <- myt3_and_Atlantic%>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_MT = sum(Sp2 == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_ME = sum(Sp2 == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
test_Model_8$P_T_MT <- with(test_Model_8, N_T_MT / N_MT)
test_Model_8$P_E_MT <- with(test_Model_8, N_E_MT / N_MT)
test_Model_8$P_E_ME <- with(test_Model_8, N_E_ME / N_ME)
test_Model_8$P_T_ME <- with(test_Model_8, N_T_ME / N_ME)
Pl_mod8_with_initial_data <- Pl_mod8 +
labs(y =  "P(T|edu)\nP(T|tros) ",
x = "Ptros", fill = "") +
geom_segment(data = test_Model_8, aes(x = freq_MT, y = (1-P_E_ME), xend = freq_MT, yend = P_T_MT, group = 1), color = "darkgray")+
geom_point(data = test_Model_8, aes(y = (1-P_E_ME),  group =1), fill = "white", shape = 22)+
geom_point(data = test_Model_8, aes(y = P_T_MT,  group =1), fill = "black", shape = 22)  +
ylim(0,1) +
xlim(0,1) +
geom_hline(aes(yintercept=0.5), color="black")
pops_max_dif_WBL <- c("belok2", "berzakol", "luv_korg",  "nm", "padan", "salnij", "umba_06", "umba_bridge","umba_kamni", "umba_pioner", "vor1", "vor2", "vor5", "kanal", "oenij", "zmis")
pops_max_dif_BH <- c("banka",  "dz_banka","tu_old")
## Calculator plot for all geographical areas
## Калькулятор основан на калибровочных выборках, выбранных в соответствии с "правильной" стратегией.
# В этом коде для поиска максимально различных или максимально смешанных выборок используются истинные данные по генотипам
# pops_max_dif_WBL <- max_dif(df = myt2_all, Subset = "WSBL")
# pops_max_dif_BH <- max_dif(df = myt2_all, Subset = "BH")
# pops_max_dif_GOM <- max_dif(df = myt2_all, Subset = "GOM")
# pops_max_dif_BALT <- max_dif(df = myt2_all, Subset = "BALT")
# pops_max_dif_SCOT <- max_dif(df = myt2_all, Subset = "SCOT")
# pops_max_dif_NORW <- max_dif(df = myt2_all, Subset = "NORW")
#
#
# pops_max_mix_WBL <- max_mix(df = myt2_all, Subset = "WSBL")
# pops_max_mix_BH <- max_mix(df = myt2_all, Subset = "BH")
# pops_max_mix_GOM <- max_mix(df = myt2_all, Subset = "GOM")
# pops_max_mix_BALT <- max_mix(df = myt2_all, Subset = "BALT")
# pops_max_mix_SCOT <- max_mix(df = myt2_all, Subset = "SCOT")
# pops_max_mix_NORW <- max_mix(df = myt2_all, Subset = "NORW")
#
# В этом коде для поиска максимально различных или максимально смешанных выборок используются истинные данные по генотипам
# НО Отбор популяций идет вручную
# max_dif Ptros<0.1 and Ptros>0.8
# max_mix 0.45 < Ptros < 0.65
pops_max_dif_WBL <- c("belok2", "berzakol", "luv_korg",  "nm", "padan", "salnij", "umba_06", "umba_bridge","umba_kamni", "umba_pioner", "vor1", "vor2", "vor5", "kanal", "oenij", "zmis")
pops_max_dif_BH <- c("banka",  "dz_banka","tu_old")
pops_max_dif_GOM <- c("BI", "CBE", "JPC", "KIM", "MDICOA", "PH", "VH")
pops_max_dif_BALT <- c("kast05", "Solvesborg", "Ystad05")
pops_max_dif_SCOT <- max_dif(df = myt2_all, Subset = "SCOT")
pops_max_dif_NORW <- c("Esp04", "Bergen_MV")
pops_max_mix_WBL <- c("abram", "niva_sl", "sevsk", "umba", "umba_pikut")
pops_max_mix_BH <-  c("kuvsh", "seredina", "seredina_sub", "ustie")
pops_max_mix_GOM <- c("CBSL")
pops_max_mix_BALT <- c("kast87", "Vhg05")
pops_max_mix_SCOT <- max_mix(df = myt2_all, Subset = "SCOT")
pops_max_mix_NORW <- as.character(unique(myt2_all [myt2_all$Subset == "NORW", "pop"]))
#########################################################
# # В этом коде для поиска максимально различных или максимально смешанных выборок используются данные по чстотам T-morphotype
# pops_max_dif_WBL <- max_dif_T(df = myt2_all, Subset = "WSBL")
# pops_max_dif_BH <- max_dif_T(df = myt2_all, Subset = "BH")
# pops_max_dif_GOM <- max_dif_T(df = myt2_all, Subset = "GOM")
# pops_max_dif_BALT <- max_dif_T(df = myt2_all, Subset = "BALT")
# pops_max_dif_SCOT <- max_dif_T(df = myt2_all, Subset = "SCOT")
# pops_max_dif_NORW <- max_dif_T(df = myt2_all, Subset = "NORW")
#
#
# pops_max_mix_WBL <- max_mix_T(df = myt2_all, Subset = "WBL")
# pops_max_mix_BH <- max_mix_T(df = myt2_all, Subset = "BH")
# pops_max_mix_GOM <- max_mix_T(df = myt2_all, Subset = "GOM")
# pops_max_mix_BALT <- max_mix_T(df = myt2_all, Subset = "BALT")
# pops_max_mix_SCOT <- max_mix_T(df = myt2_all, Subset = "SCOT")
# pops_max_mix_NORW <- max_mix_T(df = myt2_all, Subset = "NORW")
# ##########################################################
# Бублики для наиболее смешанных популяций
donat_max_mix_WBL <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_WBL, ])
donat_max_mix_BH <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_BH, ])
donat_max_mix_GOM <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_GOM, ])
donat_max_mix_BALT <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_BALT, ])
# donat_max_mix_SCOT <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_SCOT, ])
donat_max_mix_NORW <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_NORW, ])
donat_max_mix_SCOT <- donat(myt2_all[myt2_all$Subset == "SCOT", ]) #При малом количесвте выборок бублик считаем по всем сборам
# donat_max_mix_NORW <- donat(df = myt2_all[myt2_all$Subset == "NORW", ]) #При малом количесвте выборок бублик считаем по всем сборам
# Бублики для наиболее различных по стуртуре популяций
donat_max_dif_WBL <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_WBL, ])
donat_max_dif_BH <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_BH, ])
donat_max_dif_GOM <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_GOM, ])
donat_max_dif_BALT <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_BALT, ])
# donat_max_dif_SCOT <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_SCOT, ])
donat_max_dif_NORW <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_NORW, ])
donat_max_dif_SCOT <- donat(df = myt2_all[myt2_all$Subset == "SCOT", ]) #При малом количесвте выборок бублик считаем по всем сборам
# donat_max_dif_NORW <- donat(df = myt2_all[myt2_all$Subset == "NORW", ]) #При малом количесвте выборок бублик считаем по всем сборам
#Предсказания калькулятора 2 на основе наиболее смешанных популяций
calc2_WBL <- calc2(donat_max_mix_WBL[1], donat_max_mix_WBL[2])
calc2_BH <- calc2(donat_max_mix_BH[1], donat_max_mix_BH[2])
calc2_GOM <- calc2(donat_max_mix_GOM[1], donat_max_mix_GOM[2])
calc2_BALT <- calc2(donat_max_mix_BALT[1], donat_max_mix_BALT[2])
calc2_SCOT <- calc2(donat_max_mix_SCOT[1], donat_max_mix_SCOT[2])
calc2_NORW <- calc2(donat_max_mix_NORW[1], donat_max_mix_NORW[2])
calc2_WBL$Subset <- "WSBL"
calc2_BH$Subset <- "BH"
calc2_GOM$Subset <- "GOM"
calc2_BALT$Subset <- "BALT"
calc2_SCOT$Subset <- "SCOT"
calc2_NORW$Subset <- "NORW"
calc2_predictions <- rbind(calc2_WBL, calc2_BH, calc2_GOM, calc2_BALT, calc2_SCOT, calc2_NORW)
calc2_predictions$Subset <- factor(calc2_predictions$Subset, levels = levels(myt2_all$Subset))
#Предсказания калькулятора 1 на основе наиболее различных популяций
calc1_WBL <- calc1(donat_max_dif_WBL[1], donat_max_dif_WBL[2])
calc1_BH <- calc1(donat_max_dif_BH[1], donat_max_dif_BH[2])
calc1_GOM <- calc1(donat_max_dif_GOM[1], donat_max_dif_GOM[2])
calc1_BALT <- calc1(donat_max_dif_BALT[1], donat_max_dif_BALT[2])
calc1_SCOT <- calc1(donat_max_dif_SCOT[1], donat_max_dif_SCOT[2])
calc1_NORW <- calc1(donat_max_dif_NORW[1], donat_max_dif_NORW[2])
calc1_WBL$Subset <- "WSBL"
calc1_BH$Subset <- "BH"
calc1_GOM$Subset <- "GOM"
calc1_BALT$Subset <- "BALT"
calc1_SCOT$Subset <- "SCOT"
calc1_NORW$Subset <- "NORW"
calc1_predictions <- rbind(calc1_WBL, calc1_BH, calc1_GOM, calc1_BALT, calc1_SCOT, calc1_NORW)
calc1_predictions$Subset <- factor(calc1_predictions$Subset, levels = levels(myt2_all$Subset))
Pl_mod6_with_initial_data_teor_calc2 <- Pl_mod6_with_initial_data
Pl_mod7_with_initial_data_teor_calc1 <- Pl_mod7_with_initial_data
Pl <- plot_grid(Pl_mod7_with_initial_data_teor_calc1 + theme(axis.text.y = element_text(size = 6)),
Pl_mod8_with_initial_data+ theme(axis.text.y = element_text(size = 6)),
Pl_mod6_with_initial_data_teor_calc2+ theme(axis.text.y = element_text(size = 6)),
ncol =3, labels = c("A", "B", "C" ))
Pl
Pl_mod8_with_initial_data <- Pl_mod8 +
labs(y =  "P(T|edu)\nP(T|tros) ",
x = "Ptros", fill = "") +
geom_segment(data = test_Model_8, aes(x = freq_MT, y = (1-P_E_ME), xend = freq_MT, yend = P_T_MT, group = 1), color = "darkgray")+
geom_point(data = test_Model_8, aes(y = (1-P_E_ME),  group =1), fill = "white", shape = 21)+
geom_point(data = test_Model_8, aes(y = P_T_MT,  group =1), fill = "black", shape = 21)  +
ylim(0,1) +
xlim(0,1) +
geom_hline(aes(yintercept=0.5), color="black")
Pl_mod8_with_initial_data
# Model 6#########################
myt2_all$Subset <- factor(myt2_all$Subset, levels = c("WSBL", "BH", "GOM", "BALT",  "NORW"))
new_data6 <- myt2_reduced %>% group_by(Subset, morph) %>% do(data.frame(freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
# Предсказанные значеня в шкале вероятностей
new_data6$fit <- predict(Model_6_final, newdata = new_data6, type = "response", re.form = NA)
# Предсказанные значеня в шкале логитов
new_data6$fit_eta <- predict(Model_6_final, newdata = new_data6, re.form = NA)
# Вычисление доверительного инеравала
# formula(Model_6_final)
X <- model.matrix(  ~ morph * freq_MT * Subset, data = new_data6) #Модельная матрица для визуализации
# Ошибки в шкале логитов
new_data6$se_eta <- sqrt(diag(X %*% vcov(Model_6_final) %*% t(X)))
new_data6$lwr <- logit_back(new_data6$fit_eta - 1.96 * new_data6$se_eta)
new_data6$upr <- logit_back(new_data6$fit_eta + 1.96 * new_data6$se_eta)
Pl_mod6 <- ggplot(new_data6, aes(x = freq_MT)) +
geom_ribbon(aes(ymin = lwr, ymax = upr, group = morph), alpha = 0.1)  +
geom_line(aes(y = fit, color = morph), size=1, linetype = 1) +
geom_rug(data = myt2_reduced, inherit.aes = FALSE,  aes(x = freq_MT), size = 0.1) +
scale_color_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("blue", "red"))  +
xlim(0,1)  +
facet_wrap( ~ Subset, ncol = 1, strip.position="right") +
guides(color = "none")
pr_value_M <- myt2_all %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_T = sum(ind == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_E = sum(ind == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
pr_value_M$PMT_T <- with(pr_value_M, N_T_MT / N_T)
pr_value_M$PMT_E <- with(pr_value_M, N_E_MT / N_T)
pr_value_M$PME_E <- with(pr_value_M, N_E_ME / N_E)
pr_value_M$PME_T <- with(pr_value_M, N_T_ME / N_E)
# myt3_and_Atlantic <- rbind(myt3_all, myt2_all[myt2_all$Subset %in% c("GOM", "BALT", "SCOT", "NORW"), ])
#
#
# myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "barents" & myt3_and_Atlantic$sal_place == "fresh"] <- "WBL"
# myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "barents" & myt3_and_Atlantic$sal_place == "normal"] <- "BH"
# myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "white" & myt3_and_Atlantic$sal_place == "normal"] <- "WBL"
# myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "white" & myt3_and_Atlantic$sal_place == "fresh"] <- "WBL"
#
# myt3_and_Atlantic$Subset <- factor(myt3_and_Atlantic$Subset, levels = c("WBL", "BH", "GOM",  "BALT", "NORW", "SCOT" ))
myt3_and_Atlantic <- myt2_all[myt2_all$Subset %in% c("GOM", "BALT", "NORW"), ]
pr_value_myt3_and_Atlantic <- myt3_and_Atlantic %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_T = sum(ind == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_E = sum(ind == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
pr_value_myt3_and_Atlantic$PMT_T <- with(pr_value_myt3_and_Atlantic, N_T_MT / N_T)
pr_value_myt3_and_Atlantic$PMT_E <- with(pr_value_myt3_and_Atlantic, N_E_MT / N_T)
pr_value_myt3_and_Atlantic$PME_E <- with(pr_value_myt3_and_Atlantic, N_E_ME / N_E)
pr_value_myt3_and_Atlantic$PME_T <- with(pr_value_myt3_and_Atlantic, N_T_ME / N_E)
#
Pl_mod6_with_initial_data <- Pl_mod6 + geom_segment(data = pr_value_myt3_and_Atlantic, aes(x = freq_MT, y = PME_E, xend = freq_MT, yend = PMT_T), color="darkgrey") +
geom_hline(aes(yintercept=0.5), color="black") +
geom_point(data = pr_value_myt3_and_Atlantic, aes(y = PME_E), fill = "white", shape = 22) +
geom_point(data = pr_value_myt3_and_Atlantic, aes(y = PMT_T), fill = "black", shape = 22) +
labs(y =  "P(edu|E)\nP(tros|T)", x = "Ptros", fill = "")+
ylim(0,1) +
xlim(0,1)
# Pl_mod6 + geom_segment(data = pr_value_myt3_and_Atlantic, aes(x = freq_MT, y = PME_E, xend = freq_MT, yend = PMT_T), color="darkgrey") +
#   geom_hline(aes(yintercept=0.5), color="black") +
#   geom_text(data = pr_value_myt3_and_Atlantic, aes(y = PME_E, label = pop ), fill = "white", shape = 22) +
#   geom_text(data = pr_value_myt3_and_Atlantic, aes(y = PMT_T, label = pop), fill = "black", shape = 22) +
#   labs(y =  "Probability of correct species \n identification by morphotypes", x = "Proportion of M. trossulus", fill = "")+
#   ylim(0,1) +
#   xlim(0,1) +
#   theme_bw()
# Model 7#########################
new_data7 <- myt2_reduced %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(Prop_T) ) %>% group_by(Subset) %>%  do(data.frame(Prop_T = seq(min(.$Prop_T), max(.$Prop_T), length.out = 10)))
predicted7 <- predict(Model_7_final, newdata = new_data7,  type="response", se.fit = T)
new_data7$fit <- predicted7$fit
new_data7$SE <- predicted7$se.fit
Pl_mod7 <- ggplot(new_data7, aes(x = Prop_T, y = fit)) +
geom_line(linetype = 1, color = "red", size = 1) +
facet_wrap(~Subset, ncol = 1, strip.position="right") +
geom_ribbon(aes(ymin = fit - 1.96*SE, ymax = fit + 1.96*SE), alpha = 0.1) +
xlim(0, 1) +
ylim(0, 1) +
geom_rug(data = myt2_reduced, inherit.aes = FALSE,  aes(x = Prop_T), size = 0.1) +
geom_abline()
# unique(new_data7$Subset)
init_data_Model_7 <- myt3_and_Atlantic %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(morph == "T_m"),  freq_MT = mean(Sp == "M.trossulus"), N = n())
init_data_Model_7$Subset <- factor(init_data_Model_7$Subset, levels = c("WSBL", "BH", "GOM", "BALT", "NORW"))
# init_data_Model_7 <- init_data_Model_7[init_data_Model_7$pop %in% c("Limh88", "CBCP"),  ]
Pl_mod7_with_initial_data <- Pl_mod7 + geom_point(data = init_data_Model_7, aes( y = freq_MT), shape = 21, size = 2, fill = "gray" ) + scale_fill_continuous(low = "white", high = "black") + labs(y = "Ptros \n", x = "PT") + theme(strip.text = element_blank())
# Model 8#########################
new_data8 <- myt2_reduced %>% group_by(Subset,  Sp) %>% do(data.frame(freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data8$eta <- predict(Model_8_final, newdata = new_data8,  re.form = NA)
X <- model.matrix( ~ freq_MT * Subset * Sp  , data = new_data8)
new_data8$SE_eta <- sqrt(diag(X %*% vcov(Model_8_final) %*% t(X)))
new_data8$fit <- logit_back(new_data8$eta)
new_data8$lwr <- logit_back(new_data8$eta -  1.96 *new_data8$SE_eta)
new_data8$upr <- logit_back(new_data8$eta +  1.96 *new_data8$SE_eta)
Pl_mod8 <-  ggplot(new_data8, aes(x = freq_MT, y = fit, group = Sp)) +
geom_line(linetype = 1,  size = 1, aes(color = Sp)) +
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.1) +
facet_wrap(~Subset, ncol = 1)  +
xlim(0, 1) + ylim(0, 1) +
scale_color_manual(values=c("blue", "red")) +
guides(color = "none") +
geom_rug(data = myt2_reduced, inherit.aes = FALSE,  aes(x = freq_MT), size = 0.1) +
theme(strip.text = element_blank())
pops_over_M <- myt2_reduced %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_MT = sum(Sp2 == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_ME = sum(Sp2 == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
pops_over_M$P_T_MT <- with(pops_over_M, N_T_MT / N_MT)
pops_over_M$P_E_MT <- with(pops_over_M, N_E_MT / N_MT)
pops_over_M$P_E_ME <- with(pops_over_M, N_E_ME / N_ME)
pops_over_M$P_T_ME <- with(pops_over_M, N_T_ME / N_ME)
test_Model_8 <- myt3_and_Atlantic%>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_MT = sum(Sp2 == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_ME = sum(Sp2 == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
test_Model_8$P_T_MT <- with(test_Model_8, N_T_MT / N_MT)
test_Model_8$P_E_MT <- with(test_Model_8, N_E_MT / N_MT)
test_Model_8$P_E_ME <- with(test_Model_8, N_E_ME / N_ME)
test_Model_8$P_T_ME <- with(test_Model_8, N_T_ME / N_ME)
Pl_mod8_with_initial_data <- Pl_mod8 +
labs(y =  "P(T|edu)\nP(T|tros) ",
x = "Ptros", fill = "") +
geom_segment(data = test_Model_8, aes(x = freq_MT, y = (1-P_E_ME), xend = freq_MT, yend = P_T_MT, group = 1), color = "darkgray")+
geom_point(data = test_Model_8, aes(y = (1-P_E_ME),  group =1), fill = "white", shape = 21)+
geom_point(data = test_Model_8, aes(y = P_T_MT,  group =1), fill = "black", shape = 21)  +
ylim(0,1) +
xlim(0,1) +
geom_hline(aes(yintercept=0.5), color="black")
Pl_mod6_with_initial_data_teor_calc2 <- Pl_mod6_with_initial_data
Pl_mod7_with_initial_data_teor_calc1 <- Pl_mod7_with_initial_data
Pl <- plot_grid(Pl_mod7_with_initial_data_teor_calc1 + theme(axis.text.y = element_text(size = 6)),
Pl_mod8_with_initial_data+ theme(axis.text.y = element_text(size = 6)),
Pl_mod6_with_initial_data_teor_calc2+ theme(axis.text.y = element_text(size = 6)),
ncol =3, labels = c("A", "B", "C" ))
Pl
# Model 6#########################
myt2_all$Subset <- factor(myt2_all$Subset, levels = c("WSBL", "BH", "GOM", "BALT",  "NORW"))
new_data6 <- myt2_reduced %>% group_by(Subset, morph) %>% do(data.frame(freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
# Предсказанные значеня в шкале вероятностей
new_data6$fit <- predict(Model_6_final, newdata = new_data6, type = "response", re.form = NA)
# Предсказанные значеня в шкале логитов
new_data6$fit_eta <- predict(Model_6_final, newdata = new_data6, re.form = NA)
# Вычисление доверительного инеравала
# formula(Model_6_final)
X <- model.matrix(  ~ morph * freq_MT * Subset, data = new_data6) #Модельная матрица для визуализации
# Ошибки в шкале логитов
new_data6$se_eta <- sqrt(diag(X %*% vcov(Model_6_final) %*% t(X)))
new_data6$lwr <- logit_back(new_data6$fit_eta - 1.96 * new_data6$se_eta)
new_data6$upr <- logit_back(new_data6$fit_eta + 1.96 * new_data6$se_eta)
Pl_mod6 <- ggplot(new_data6, aes(x = freq_MT)) +
geom_ribbon(aes(ymin = lwr, ymax = upr, group = morph), alpha = 0.1)  +
geom_line(aes(y = fit, color = morph), size=1, linetype = 1) +
geom_rug(data = myt2_reduced, inherit.aes = FALSE,  aes(x = freq_MT), size = 0.1) +
scale_color_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("blue", "red"))  +
xlim(0,1)  +
facet_wrap( ~ Subset, ncol = 1, strip.position="right") +
guides(color = "none")
pr_value_M <- myt2_all %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_T = sum(ind == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_E = sum(ind == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
pr_value_M$PMT_T <- with(pr_value_M, N_T_MT / N_T)
pr_value_M$PMT_E <- with(pr_value_M, N_E_MT / N_T)
pr_value_M$PME_E <- with(pr_value_M, N_E_ME / N_E)
pr_value_M$PME_T <- with(pr_value_M, N_T_ME / N_E)
# myt3_and_Atlantic <- rbind(myt3_all, myt2_all[myt2_all$Subset %in% c("GOM", "BALT", "SCOT", "NORW"), ])
#
#
# myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "barents" & myt3_and_Atlantic$sal_place == "fresh"] <- "WBL"
# myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "barents" & myt3_and_Atlantic$sal_place == "normal"] <- "BH"
# myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "white" & myt3_and_Atlantic$sal_place == "normal"] <- "WBL"
# myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "white" & myt3_and_Atlantic$sal_place == "fresh"] <- "WBL"
#
# myt3_and_Atlantic$Subset <- factor(myt3_and_Atlantic$Subset, levels = c("WBL", "BH", "GOM",  "BALT", "NORW", "SCOT" ))
myt3_and_Atlantic <- myt2_all[myt2_all$Subset %in% c("GOM", "BALT", "NORW"), ]
pr_value_myt3_and_Atlantic <- myt3_and_Atlantic %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_T = sum(ind == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_E = sum(ind == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
pr_value_myt3_and_Atlantic$PMT_T <- with(pr_value_myt3_and_Atlantic, N_T_MT / N_T)
pr_value_myt3_and_Atlantic$PMT_E <- with(pr_value_myt3_and_Atlantic, N_E_MT / N_T)
pr_value_myt3_and_Atlantic$PME_E <- with(pr_value_myt3_and_Atlantic, N_E_ME / N_E)
pr_value_myt3_and_Atlantic$PME_T <- with(pr_value_myt3_and_Atlantic, N_T_ME / N_E)
#
Pl_mod6_with_initial_data <- Pl_mod6 + geom_segment(data = pr_value_myt3_and_Atlantic, aes(x = freq_MT, y = PME_E, xend = freq_MT, yend = PMT_T), color="darkgrey") +
geom_hline(aes(yintercept=0.5), color="black") +
geom_point(data = pr_value_myt3_and_Atlantic, aes(y = PME_E), fill = "white", shape = 21) +
geom_point(data = pr_value_myt3_and_Atlantic, aes(y = PMT_T), fill = "black", shape = 21) +
labs(y =  "P(edu|E)\nP(tros|T)", x = "Ptros", fill = "")+
ylim(0,1) +
xlim(0,1)
# Pl_mod6 + geom_segment(data = pr_value_myt3_and_Atlantic, aes(x = freq_MT, y = PME_E, xend = freq_MT, yend = PMT_T), color="darkgrey") +
#   geom_hline(aes(yintercept=0.5), color="black") +
#   geom_text(data = pr_value_myt3_and_Atlantic, aes(y = PME_E, label = pop ), fill = "white", shape = 22) +
#   geom_text(data = pr_value_myt3_and_Atlantic, aes(y = PMT_T, label = pop), fill = "black", shape = 22) +
#   labs(y =  "Probability of correct species \n identification by morphotypes", x = "Proportion of M. trossulus", fill = "")+
#   ylim(0,1) +
#   xlim(0,1) +
#   theme_bw()
# Model 7#########################
new_data7 <- myt2_reduced %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(Prop_T) ) %>% group_by(Subset) %>%  do(data.frame(Prop_T = seq(min(.$Prop_T), max(.$Prop_T), length.out = 10)))
predicted7 <- predict(Model_7_final, newdata = new_data7,  type="response", se.fit = T)
new_data7$fit <- predicted7$fit
new_data7$SE <- predicted7$se.fit
Pl_mod7 <- ggplot(new_data7, aes(x = Prop_T, y = fit)) +
geom_line(linetype = 1, color = "red", size = 1) +
facet_wrap(~Subset, ncol = 1, strip.position="right") +
geom_ribbon(aes(ymin = fit - 1.96*SE, ymax = fit + 1.96*SE), alpha = 0.1) +
xlim(0, 1) +
ylim(0, 1) +
geom_rug(data = myt2_reduced, inherit.aes = FALSE,  aes(x = Prop_T), size = 0.1) +
geom_abline()
# unique(new_data7$Subset)
init_data_Model_7 <- myt3_and_Atlantic %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(morph == "T_m"),  freq_MT = mean(Sp == "M.trossulus"), N = n())
init_data_Model_7$Subset <- factor(init_data_Model_7$Subset, levels = c("WSBL", "BH", "GOM", "BALT", "NORW"))
# init_data_Model_7 <- init_data_Model_7[init_data_Model_7$pop %in% c("Limh88", "CBCP"),  ]
Pl_mod7_with_initial_data <- Pl_mod7 + geom_point(data = init_data_Model_7, aes( y = freq_MT), shape = 21, size = 2, fill = "gray" ) + scale_fill_continuous(low = "white", high = "black") + labs(y = "Ptros \n", x = "PT") + theme(strip.text = element_blank())
# Model 8#########################
new_data8 <- myt2_reduced %>% group_by(Subset,  Sp) %>% do(data.frame(freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data8$eta <- predict(Model_8_final, newdata = new_data8,  re.form = NA)
X <- model.matrix( ~ freq_MT * Subset * Sp  , data = new_data8)
new_data8$SE_eta <- sqrt(diag(X %*% vcov(Model_8_final) %*% t(X)))
new_data8$fit <- logit_back(new_data8$eta)
new_data8$lwr <- logit_back(new_data8$eta -  1.96 *new_data8$SE_eta)
new_data8$upr <- logit_back(new_data8$eta +  1.96 *new_data8$SE_eta)
Pl_mod8 <-  ggplot(new_data8, aes(x = freq_MT, y = fit, group = Sp)) +
geom_line(linetype = 1,  size = 1, aes(color = Sp)) +
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.1) +
facet_wrap(~Subset, ncol = 1)  +
xlim(0, 1) + ylim(0, 1) +
scale_color_manual(values=c("blue", "red")) +
guides(color = "none") +
geom_rug(data = myt2_reduced, inherit.aes = FALSE,  aes(x = freq_MT), size = 0.1) +
theme(strip.text = element_blank())
pops_over_M <- myt2_reduced %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_MT = sum(Sp2 == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_ME = sum(Sp2 == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
pops_over_M$P_T_MT <- with(pops_over_M, N_T_MT / N_MT)
pops_over_M$P_E_MT <- with(pops_over_M, N_E_MT / N_MT)
pops_over_M$P_E_ME <- with(pops_over_M, N_E_ME / N_ME)
pops_over_M$P_T_ME <- with(pops_over_M, N_T_ME / N_ME)
test_Model_8 <- myt3_and_Atlantic%>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_MT = sum(Sp2 == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_ME = sum(Sp2 == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
test_Model_8$P_T_MT <- with(test_Model_8, N_T_MT / N_MT)
test_Model_8$P_E_MT <- with(test_Model_8, N_E_MT / N_MT)
test_Model_8$P_E_ME <- with(test_Model_8, N_E_ME / N_ME)
test_Model_8$P_T_ME <- with(test_Model_8, N_T_ME / N_ME)
Pl_mod8_with_initial_data <- Pl_mod8 +
labs(y =  "P(T|edu)\nP(T|tros) ",
x = "Ptros", fill = "") +
geom_segment(data = test_Model_8, aes(x = freq_MT, y = (1-P_E_ME), xend = freq_MT, yend = P_T_MT, group = 1), color = "darkgray")+
geom_point(data = test_Model_8, aes(y = (1-P_E_ME),  group =1), fill = "white", shape = 21)+
geom_point(data = test_Model_8, aes(y = P_T_MT,  group =1), fill = "black", shape = 21)  +
ylim(0,1) +
xlim(0,1) +
geom_hline(aes(yintercept=0.5), color="black")
Pl_mod6_with_initial_data_teor_calc2 <- Pl_mod6_with_initial_data
Pl_mod7_with_initial_data_teor_calc1 <- Pl_mod7_with_initial_data
library(cowplot)
Pl <- plot_grid(Pl_mod7_with_initial_data_teor_calc1 + theme(axis.text.y = element_text(size = 6)),
Pl_mod8_with_initial_data+ theme(axis.text.y = element_text(size = 6)),
Pl_mod6_with_initial_data_teor_calc2+ theme(axis.text.y = element_text(size = 6)),
ncol =3, labels = c("A", "B", "C" ))
Pl
Pl <- plot_grid(Pl_mod7_with_initial_data_teor_calc1 + theme(axis.text.y = element_text(size = 6)),
Pl_mod8_with_initial_data+ theme(axis.text.y = element_text(size = 6)),
Pl_mod6_with_initial_data_teor_calc2+ theme(axis.text.y = element_text(size = 6)),
ncol =3, labels = c("A.", "Б.", "В." ))
Pl
ggsave("Plot_all_contact_zones_Jul.tiff", plot = Pl, dpi = 600 )
