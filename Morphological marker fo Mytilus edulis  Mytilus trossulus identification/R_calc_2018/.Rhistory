kable(all_models_print, col.names = c("Terms", "Estimate", "SE", "z-statistic", "p-value"), caption = "Table ++. Parameters of regression models fitted")
# Chunk 10
# Model1 ##############################
new_data <- myt2 %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT) ) %>% group_by(Subset) %>%  do(data.frame(freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 10)))
predicted <- predict(Model_1_final, newdata = new_data,  type="response", se.fit = T)
new_data$fit <- predicted$fit
new_data$SE <- predicted$se.fit
Pl_mod1 <- ggplot(new_data, aes(x = freq_MT, y = fit)) + geom_line(linetype = 2, color = "red", size = 1) + facet_wrap(~Subset) + geom_ribbon(aes(ymin = fit - 1.96*SE, ymax = fit + 1.96*SE), alpha = 0.1) + xlim(0, 1) + ylim(0, 1) +  geom_rug(data = myt2, inherit.aes = FALSE,  aes(x = freq_MT), size = 0.1)
# иллюстрация с точками
link_over_M <- myt2 %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(Sp2), freq_Tmorph = mean(ind), N_MT = sum(Sp2 == 1),  N_ME = sum(Sp2 == 0))
Pl_mod1_with_initial_data_no_test <- Pl_mod1 +
geom_point(data = link_over_M, aes(y = freq_Tmorph, size = (N_MT+N_ME), fill = (freq_MT)), shape = 21) +
scale_fill_continuous(high = "black", low = "white" ) +
geom_abline() +
labs(x =  "Proportion of M. trossulus", y = "Proportion of T-morphotype \n") +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank())
test_Model_1 <- myt3 %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(Sp2), freq_Tmorph = mean(ind), N_MT = sum(Sp2 == 1),  N_ME = sum(Sp2 == 0))
Pl_mod1_with_initial_data <- Pl_mod1_with_initial_data_no_test + geom_point(data = test_Model_1, aes(x = freq_MT, y =freq_Tmorph, size = N_MT+N_ME), fill = "red", shape = 23 )
# Model_2 ##############################
new_data2 <- myt2 %>% group_by(Subset,  Sp) %>% do(data.frame(freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data2$eta <- predict(Model_2_final, newdata = new_data2,  re.form = NA)
X <- model.matrix(~freq_MT * Subset * Sp , data = new_data2)
new_data2$SE_eta <- sqrt(diag(X %*% vcov(Model_2_final) %*% t(X)))
new_data2$fit <- logit_back(new_data2$eta)
new_data2$lwr <- logit_back(new_data2$eta -  1.96 *new_data2$SE_eta)
new_data2$upr <- logit_back(new_data2$eta +  1.96 *new_data2$SE_eta)
Pl_mod2 <-  ggplot(new_data2, aes(x = freq_MT, y = fit, group = Sp)) + geom_line(linetype = 2,  size = 1, aes(color = Sp)) + geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.1) + facet_wrap(~Subset)  + xlim(0, 1) + ylim(0, 1) + scale_color_manual(values=c("blue", "red")) + guides(color = "none") +  geom_rug(data = myt2, inherit.aes = FALSE,  aes(x = freq_MT), size = 0.1)
pops_over_M <- myt2 %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_MT = sum(Sp2 == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_ME = sum(Sp2 == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
pops_over_M$P_T_MT <- with(pops_over_M, N_T_MT / N_MT)
pops_over_M$P_E_MT <- with(pops_over_M, N_E_MT / N_MT)
pops_over_M$P_E_ME <- with(pops_over_M, N_E_ME / N_ME)
pops_over_M$P_T_ME <- with(pops_over_M, N_T_ME / N_ME)
Pl_mod2_with_initial_data_no_test <- Pl_mod2 +   geom_segment(data = pops_over_M, aes(x = freq_MT, y = (1-P_E_ME), xend = freq_MT, yend = P_T_MT, group = 1), color = "darkgray")+
geom_hline(aes(yintercept=0.5), color="black") +
geom_point(data = pops_over_M, aes(y = (1-P_E_ME), size= N_ME, group =1), fill = "white", shape = 21)+
geom_point(data = pops_over_M, aes(y = P_T_MT, size=N_MT, group =1), fill = "black", shape = 21)  + xlim(0,1)+
labs(y =  "Proportion of T-morphotype \n among  M. trossulus  and  M. edulis", x = "Proportion of M. trossulus", fill = "") +
ylim(0,1) + xlim(0,1) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank())
test_Model_2 <- myt3%>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_MT = sum(Sp2 == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_ME = sum(Sp2 == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
test_Model_2$P_T_MT <- with(test_Model_2, N_T_MT / N_MT)
test_Model_2$P_E_MT <- with(test_Model_2, N_E_MT / N_MT)
test_Model_2$P_E_ME <- with(test_Model_2, N_E_ME / N_ME)
test_Model_2$P_T_ME <- with(test_Model_2, N_T_ME / N_ME)
Pl_mod2_with_initial_data <- Pl_mod2_with_initial_data_no_test +  geom_point(data = test_Model_2, aes(y = (1-P_E_ME), size= N_ME, group =1), fill = "red", shape = 24)+
geom_point(data = test_Model_2, aes(y = P_T_MT, size=N_MT, group =1), fill = "blue", shape = 24)  + xlim(0,1)
# Model_3 ##############################
new_data3 <- myt2 %>% group_by(Subset,  Sp) %>% do(data.frame(freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data3$eta <- predict(Model_3_final, newdata = new_data2,  re.form = NA)
X <- model.matrix(~freq_MT* Subset , data = new_data3)
new_data3$SE_eta <- sqrt(diag(X %*% vcov(Model_3_final) %*% t(X)))
new_data3$fit <- logit_back(new_data3$eta)
new_data3$lwr <- logit_back(new_data3$eta -  1.96 *new_data3$SE_eta)
new_data3$upr <- logit_back(new_data3$eta +  1.96 *new_data3$SE_eta)
Pl_mod3 <-  ggplot(new_data3, aes(x = freq_MT, y = fit)) + geom_line(linetype = 2,  size = 1) + geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.1) + facet_wrap(~Subset)  + xlim(0, 1) + ylim(0, 1) + scale_color_manual(values=c("blue", "red")) + guides(color = "none") +  geom_rug(data = myt2, inherit.aes = FALSE,  aes(x = freq_MT), size = 0.1)
accuracy <- myt2 %>% group_by(Subset, pop) %>% summarize(freq_MT = mean(freq_MT), Accur = mean(congr), N = n())
Pl_mod3_with_initial_data_no_test <- Pl_mod3 + geom_point(data = accuracy, aes(x = freq_MT, y = Accur, fill = freq_MT, size = N),  shape = 21) + scale_fill_continuous(high = "black", low = "white" ) + labs(x = "Proportion of M.trossulus", y = "Proportion of correct \nidentification")  + theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank()) + geom_hline(yintercept = 0.5)
test_Model_3 <- myt3 %>% group_by(Subset, pop) %>% summarize(freq_MT = mean(freq_MT), Accur = mean(congr), N = n())
Pl_mod3_with_initial_data <- Pl_mod3_with_initial_data_no_test + geom_point(data = test_Model_3, aes(x = freq_MT, y = Accur, size = N),  shape = 24, fill = "red")
# Model_4 ##############################
new_data4 <- myt2 %>% group_by(Subset, morph) %>% do(data.frame(freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
=======
# Model_5_final_cand_5 <- update(Model_5_final, . ~ . - Subset - morph:Subset - freq_MT:Subset)
#
# AIC_print2 <- as.data.frame(AIC(Model_5_final_cand_1, Model_5_final_cand_2, Model_5_final_cand_3, Model_5_final_cand_4, Model_5_final_cand_5))
# kable(AIC_print)
myt2_all$Subset <- factor(myt2_all$Subset, levels = c("WBL", "BH", "GOM", "BALT", "SCOT", "NORW"))
new_data6 <- myt2_reduced %>% group_by(Subset, morph) %>% do(data.frame(freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
# Предсказанные значеня в шкале вероятностей
new_data6$fit <- predict(Model_6_final, newdata = new_data6, type = "response", re.form = NA)
# Предсказанные значеня в шкале логитов
new_data6$fit_eta <- predict(Model_6_final, newdata = new_data6, re.form = NA)
# Вычисление доверительного инеравала
# formula(Model_6_final)
X <- model.matrix(  ~ morph * freq_MT * Subset, data = new_data6) #Модельная матрица для визуализации
# Ошибки в шкале логитов
new_data6$se_eta <- sqrt(diag(X %*% vcov(Model_6_final) %*% t(X)))
new_data6$lwr <- logit_back(new_data6$fit_eta - 1.96 * new_data6$se_eta)
new_data6$upr <- logit_back(new_data6$fit_eta + 1.96 * new_data6$se_eta)
Pl_mod6 <- ggplot(new_data6, aes(x = freq_MT)) +
geom_ribbon(aes(ymin = lwr, ymax = upr, group = morph), alpha = 0.1)  +
geom_line(aes(y = fit, color = morph), size=1, linetype = 2) +
geom_rug(data = myt2_reduced, inherit.aes = FALSE,  aes(x = freq_MT), size = 0.1) +
scale_color_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("blue", "red"))  +
xlim(0,1)  +
facet_wrap( ~ Subset, ncol = 1) +
guides(color = "none")
Pl_mod6
pr_value_M <- myt2_all %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_T = sum(ind == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_E = sum(ind == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
pr_value_M$PMT_T <- with(pr_value_M, N_T_MT / N_T)
pr_value_M$PMT_E <- with(pr_value_M, N_E_MT / N_T)
pr_value_M$PME_E <- with(pr_value_M, N_E_ME / N_E)
myt3_and_Atlantic <- rbind(myt3_all, myt2_all[myt2_all$Subset %in% c("GOM", "BALT", "SCOT", "NORW"), ])
levels(myt3_and_Atlantic$Subset)
myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "barents" & myt3_and_Atlantic$sal_place == "fresh"] <- "WBL"
myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "barents" & myt3_and_Atlantic$sal_place == "normal"] <- "BH"
myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "white" & myt3_and_Atlantic$sal_place == "normal"] <- "WBL"
myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "white" & myt3_and_Atlantic$sal_place == "fresh"] <- "WBL"
myt3_and_Atlantic$Subset <- factor(myt3_and_Atlantic$Subset, levels = c("WBL", "BH", "GOM",  "BALT", "NORW", "SCOT" ))
levels(myt3_and_Atlantic$Subset)
pr_value_myt3_and_Atlantic <- myt3_and_Atlantic %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_T = sum(ind == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_E = sum(ind == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
pr_value_myt3_and_Atlantic$PMT_T <- with(pr_value_myt3_and_Atlantic, N_T_MT / N_T)
pr_value_myt3_and_Atlantic$PMT_E <- with(pr_value_myt3_and_Atlantic, N_E_MT / N_T)
pr_value_myt3_and_Atlantic$PME_E <- with(pr_value_myt3_and_Atlantic, N_E_ME / N_E)
pr_value_myt3_and_Atlantic$PME_T <- with(pr_value_myt3_and_Atlantic, N_T_ME / N_E)
levels(pr_value_myt3_and_Atlantic$Subset)
Pl_mod6_with_initial_data <- Pl_mod6 + geom_segment(data = pr_value_myt3_and_Atlantic, aes(x = freq_MT, y = PME_E, xend = freq_MT, yend = PMT_T), color="darkgrey") +
geom_hline(aes(yintercept=0.5), color="black") +
geom_point(data = pr_value_myt3_and_Atlantic, aes(y = PME_E), fill = "white", shape = 22) +
geom_point(data = pr_value_myt3_and_Atlantic, aes(y = PMT_T), fill = "black", shape = 22) +
labs(y =  "Probability of correct species \n identification by morphotypes", x = "Proportion of M. trossulus", fill = "")+
ylim(0,1) +
xlim(0,1) +
theme_bw()
Pl_mod6_with_initial_data
new_data7 <- myt2_reduced %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(Prop_T) ) %>% group_by(Subset) %>%  do(data.frame(Prop_T = seq(min(.$Prop_T), max(.$Prop_T), length.out = 10)))
new_data7 <- myt3_and_Atlantic %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(Prop_T) ) %>% group_by(Subset) %>%  do(data.frame(Prop_T = seq(min(.$Prop_T), max(.$Prop_T), length.out = 10)))
predicted7 <- predict(Model_7_final, newdata = new_data7,  type="response", se.fit = T)
new_data7 <- myt2_reduced %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(Prop_T) ) %>% group_by(Subset) %>%  do(data.frame(Prop_T = seq(min(.$Prop_T), max(.$Prop_T), length.out = 10)))
predicted7 <- predict(Model_7_final, newdata = new_data7,  type="response", se.fit = T)
new_data7$fit <- predicted7$fit
new_data7$SE <- predicted7$se.fit
Pl_mod7 <- ggplot(new_data7, aes(x = Prop_T, y = fit)) +
geom_line(linetype = 2, color = "red", size = 1) +
facet_wrap(~Subset, ncol = 1) +
geom_ribbon(aes(ymin = fit - 1.96*SE, ymax = fit + 1.96*SE), alpha = 0.1) +
xlim(0, 1) +
ylim(0, 1) +
geom_rug(data = myt2_all, inherit.aes = FALSE,  aes(x = Prop_T), size = 0.1) +
geom_abline()
Pl_mod7
Pl_mod7
new_data7 <- myt2_reduced %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(Prop_T) ) %>% group_by(Subset) %>%  do(data.frame(Prop_T = seq(min(.$Prop_T), max(.$Prop_T), length.out = 10)))
levels(new_data7$Subset)
new_data7 <- myt2_reduced %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(Prop_T) ) %>% group_by(Subset) %>%  do(data.frame(Prop_T = seq(min(.$Prop_T), max(.$Prop_T), length.out = 10)))
predicted7 <- predict(Model_7_final, newdata = new_data7,  type="response", se.fit = T)
new_data7$fit <- predicted7$fit
new_data7$SE <- predicted7$se.fit
Pl_mod7 <- ggplot(new_data7, aes(x = Prop_T, y = fit)) +
geom_line(linetype = 2, color = "red", size = 1) +
facet_wrap(~Subset, ncol = 1) +
geom_ribbon(aes(ymin = fit - 1.96*SE, ymax = fit + 1.96*SE), alpha = 0.1) +
xlim(0, 1) +
ylim(0, 1) +
geom_rug(data = myt2_reduced, inherit.aes = FALSE,  aes(x = Prop_T), size = 0.1) +
geom_abline()
Pl_mod7
Pl_mod7
init_data_Model_7 <- myt3_and_Atlantic %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(morph == "T_m"),  freq_MT = mean(Sp == "M.trossulus"), N = n())
init_data_Model_7$Subset <- factor(init_data_Model_7$Subset, levels = c("WBL", "BH", "GOM", "BALT", "NORW", "SCOT"))
Pl_mod7_with_initial_data <- Pl_mod7 + geom_point(data = init_data_Model_7, aes( y = freq_MT), shape = 22, size = 2 ) + scale_fill_continuous(low = "white", high = "black") + labs(x = "Proportion of mussels with T-morphotype", y = "Proportion of M.trossulus \n") + theme_bw()
Pl_mod7_with_initial_data
Pl_mod6_with_initial_data
Pl_mod6_with_initial_data
# Model 6#########################
myt2_all$Subset <- factor(myt2_all$Subset, levels = c("WBL", "BH", "GOM", "BALT", "SCOT", "NORW"))
new_data6 <- myt2_reduced %>% group_by(Subset, morph) %>% do(data.frame(freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
>>>>>>> 6c4dc1cc54b967ff7dbd253399519a3af5ac0563
# Предсказанные значеня в шкале вероятностей
new_data4$fit <- predict(Model_4_final, newdata = new_data4, type = "response", re.form = NA)
# Предсказанные значеня в шкале логитов
new_data4$fit_eta <- predict(Model_4_final, newdata = new_data4, re.form = NA)
# Вычисление доверительного инеравала
X <- model.matrix(  ~ morph + freq_MT + Subset + morph:freq_MT +
morph:Subset + freq_MT:Subset, data = new_data4) #Модельная матрица для визуализации
# Ошибки в шкале логитов
new_data4$se_eta <- sqrt(diag(X %*% vcov(Model_4_final) %*% t(X)))
new_data4$lwr <- logit_back(new_data4$fit_eta - 1.96 * new_data4$se_eta)
new_data4$upr <- logit_back(new_data4$fit_eta + 1.96 * new_data4$se_eta)
Pl_mod4 <- ggplot(new_data4, aes(x = freq_MT)) +
geom_ribbon(aes(ymin = lwr, ymax = upr, group = morph), alpha = 0.1)  +
geom_line(aes(y = fit, color = morph), size=1, linetype = 2) +
geom_rug(data = myt2, inherit.aes = FALSE,  aes(x = freq_MT), size = 0.1) +
scale_color_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("blue", "red"))  +
xlim(0,1)  +
facet_wrap( ~ Subset)
pr_value_M <- myt2 %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_T = sum(ind == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_E = sum(ind == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
pr_value_M$PMT_T <- with(pr_value_M, N_T_MT / N_T)
pr_value_M$PMT_E <- with(pr_value_M, N_E_MT / N_T)
pr_value_M$PME_E <- with(pr_value_M, N_E_ME / N_E)
pr_value_M$PME_T <- with(pr_value_M, N_T_ME / N_E)
<<<<<<< HEAD
Pl_mod4_with_initial_data_no_test <- Pl_mod4 + geom_segment(data = pr_value_M, aes(x = freq_MT, y = PME_E, xend = freq_MT, yend = PMT_T), color="darkgrey") +
geom_hline(data = pr_value_M, aes(yintercept=0.5), color="black") +
geom_point(data = pr_value_M, aes(y = PME_E, size= N_E), fill = "white", shape = 21) +
geom_point(data = pr_value_M, aes(y = PMT_T, size=N_T), fill = "black", shape = 21) +
labs(y =  "Proportions of correct species \n identification by morphotypes", x = "Proportion of M. trossulus", fill = "")+
ylim(0,1) +
xlim(0,1)
# +
#   theme(strip.background = element_blank(), strip.text = element_blank())
test_Model_4 <- myt3 %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_T = sum(ind == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_E = sum(ind == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
test_Model_4$PMT_T <- with(test_Model_4, N_T_MT / N_T)
test_Model_4$PMT_E <- with(test_Model_4, N_E_MT / N_T)
test_Model_4$PME_E <- with(test_Model_4, N_E_ME / N_E)
test_Model_4$PME_T <- with(test_Model_4, N_T_ME / N_E)
Pl_mod4_with_initial_data <- Pl_mod4_with_initial_data_no_test + geom_point(data = test_Model_4, aes(y = PME_E, size= N_E), fill = "red", shape = 24) +
geom_point(data = test_Model_4, aes(y = PMT_T, size=N_T), fill = "blue", shape = 24)
# Model_5 ##############################
new_data5 <- myt2 %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(Prop_T) ) %>% group_by(Subset) %>%  do(data.frame(Prop_T = seq(min(.$Prop_T), max(.$Prop_T), length.out = 10)))
predicted5 <- predict(Model_5_final, newdata = new_data5,  type="response", se.fit = T)
new_data5$fit <- predicted5$fit
new_data5$SE <- predicted5$se.fit
Pl_mod5 <- ggplot(new_data5, aes(x = Prop_T, y = fit)) + geom_line(linetype = 2, color = "red", size = 1) + facet_wrap(~Subset) + geom_ribbon(aes(ymin = fit - 1.96*SE, ymax = fit + 1.96*SE), alpha = 0.1) + xlim(0, 1) + ylim(0, 1) +  geom_rug(data = myt2, inherit.aes = FALSE,  aes(x = Prop_T), size = 0.1) + geom_abline()
init_data_Model_5 <- myt2 %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(morph == "T_m"),  freq_MT = mean(Sp == "M.trossulus"), N = n())
Pl_mod5_with_initial_data_no_test <- Pl_mod5 + geom_point(data = init_data_Model_5, aes( y = freq_MT, size = N, fill = freq_MT), shape = 21 ) + scale_fill_continuous(low = "white", high = "black") + labs(x = "Proportion of mussels with T-morphotype", y = "Proportion of M.trossulus \n")
test_Model_5 <- myt3 %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(morph == "T_m"),  freq_MT = mean(Sp == "M.trossulus"), N = n())
Pl_mod5_with_initial_data <- Pl_mod5_with_initial_data_no_test + geom_point(data = test_Model_5, aes( y = freq_MT, size = N, fill = freq_MT), shape = 24, fill = "red" )
# Chunk 11
# grid.arrange(Pl_mod1_with_initial_data ,
#              Pl_mod2_with_initial_data + theme(strip.text = element_blank()),
#              Pl_mod4_with_initial_data+ theme(strip.text = element_blank()) ,
#              ncol = 1)
# Pl_mod3_with_initial_data + theme(strip.text = element_blank()),
grid.arrange(Pl_mod1_with_initial_data_no_test ,
Pl_mod2_with_initial_data_no_test + theme(strip.text = element_blank()),
Pl_mod4_with_initial_data_no_test + theme(strip.text = element_blank()) ,
ncol = 1)
# residuals(Model_2_final)
Model_2_final_diagn <- fortify(Model_2_final)
# residuals(Model_2_final)
Model_2_final_diagn <- fortify(Model_2_final)
resid_siz <- merge(myt2, Model_2_final_diagn)
resid_siz <- resid_siz[!is.na(resid_siz$siz), ]
resid_cor <- resid_siz %>% group_by(Subset, pop) %>% summarise(cor = cor.test(.scresid, size, method = "pearson")$estimate, p = cor.test(.scresid, size, method = "pearson")$p.value)
resid_cor <- resid_siz %>% group_by(Subset, pop) %>% summarise(cor = cor.test(.scresid, size, method = "pearson")$estimate, p = cor.test(.scresid, size, method = "pearson")$p.value)
resid_cor
resid_cor$p_adj <- p.adjust(resid_cor$p, method = "hochberg")
resid_cor
View(resid_cor)
# residuals(Model_4_final)
Model_4_final_diagn <- fortify(Model_4_final)
resid_siz2 <- merge(myt2, Model_4_final_diagn)
resid_siz2 <- resid_siz2[!is.na(resid_siz2$siz), ]
cor.test(resid_siz2$.scresid, resid_siz2$size )
cor.test(resid_siz$.scresid, resid_siz$size )
# residuals(Model_4_final)
Model_4_final_diagn <- fortify(Model_4_final)
resid_siz2 <- merge(myt2, Model_4_final_diagn)
resid_siz2 <- resid_siz2[!is.na(resid_siz2$siz), ]
resid_cor2 <- resid_siz2 %>% group_by(Subset, pop) %>% summarise(cor = cor.test(.scresid, size, method = "pearson")$estimate, p = cor.test(.scresid, size, method = "pearson")$p.value)
resid_cor2
resid_cor2_trossulus <- resid_siz2 %>% group_by(Subset, pop)%>% filter(Sp == "M.trossulus") %>% summarise(cor = cor.test(.scresid, size, method = "pearson")$estimate, p = cor.test(.scresid, size, method = "pearson")$p.value)
resid_siz2
size_models_trossulus <- myt2 %>% group_by(pop) %>% do(model = glm(ind ~  size, family = "binomial", data = .))
size_models_trossulus_res <- size_models %>% tidy(model)
size_models_tros <- myt2 %>% group_by(pop) %>% do(model = glm(ind ~  size, family = "binomial", data = .))
size_models_tros_res <- size_models_tros %>% tidy(model)
size_models_tros <- myt2 %>% filter(Sp == "M.trossulus") %>% group_by(pop) %>% do(model = glm(ind ~  size, family = "binomial", data = .))
size_models_tros
size_models_tros_res <- size_models_tros %>% tidy(model)
# size_models_tros
dd <- myt2 %>% filter(Sp == "M.trossulus") %>% group_by(pop) %>% do(model = glm(ind ~  size, family = "binomial", data = .))
size_models_tros_res <- dd %>% tidy(model)
View(dd)
View(dd[[2]][[1]])
View(dd)
size_models_tros <- myt2 %>% filter(Sp == "M.trossulus") %>% group_by(pop) %>% do(model = glm(ind ~  size, family = "binomial", data = .))
size_models_tros_res <- size_models_tros %>% tidy(model)
size_models_tros <- myt2  %>% group_by(pop)%>% filter(Sp == "M.trossulus") %>% do(model = glm(ind ~  size, family = "binomial", data = .))
size_models_tros_res <- size_models_tros %>% tidy(model)
size_models_tros <- myt2  %>% group_by(pop)%>% filter(Sp == "M.trossulus") %>% do(model = glm(ind ~  size, family = "binomial", data = .)) %>% tidy(model)
size_models_tros <- myt2  %>% group_by(pop)%>% filter(Sp == "M.trossulus") %>% do(model = glm(ind ~  size, family = "binomial", data = .))
size_models_tros$pop <- factor(size_models_tros$pop)
size_models_tros_res <- size_models_tros %>% tidy(model)
size_models_tros_res
size_models_res_tros_slope <- size_models_tros_res[size_models_tros_res$term != "(Intercept)", ]
size_models_res_tros_slope
size_models_res_slope$p_adj <- p.adjust(size_models_res_slope$p.value, method = "hochberg")
size_models_res_tros_slope <- size_models_tros_res[size_models_tros_res$term != "(Intercept)", ]
size_models_res_tros_slope$p_adj <- p.adjust(size_models_res_tros_slope$p.value, method = "hochberg")
size_models_res_tros_slope_signif <-size_models_res_tros_slope[size_models_res_tros_slope$p_adj <0.05, ]
size_models_res_tros_slope_signif
size_models_res_tros_slope
View(size_models_tros)
View(size_models_res_tros_slope)
library(knitr)
# library(flextable)
opts_chunk$set(echo = FALSE, cache = FALSE, fig.align ="center", warning = FALSE, message = FALSE)
# set pander table-layout options
library(pander)
panderOptions('table.alignment.default', function(df)
ifelse(sapply(df, is.numeric), 'right', 'left'))
panderOptions('table.split.table', Inf)
panderOptions('big.mark', ",")
panderOptions('keep.trailing.zeros', TRUE)
length(unique(myt2$pop))
size_models_edu <- myt2  %>% group_by(pop)%>% filter(Sp == "M.edulis") %>% do(model = glm(ind ~  size, family = "binomial", data = .))
size_models_edu$pop <- factor(size_models_edu$pop)
size_models_edu_res <- size_models_edu %>% tidy(model)
size_models_res_edu_slope <- size_models_edu_res[size_models_edu_res$term != "(Intercept)", ]
size_models_res_edu_slope$p_adj <- p.adjust(size_models_res_edu_slope$p.value, method = "hochberg")
size_models_res_edu_slope
View(size_models_res_edu_slope)
read.table("clipboard", sep = "/t", header = T)
read.table("clipboard", sep = "\t", header = T)
rp < read.table("clipboard", sep = "\t", header = T)
rp <- read.table("clipboard", sep = "\t", header = T)
rp$date <- as.POSIXct(as.Date(rp$date, format = "%d-%m-%Y"))
rp
rp <- read.table("clipboard", sep = "\t", header = T)
rp$date <- as.POSIXct(as.Date(rp$date, format = "%d/%m/%Y"))
rp
as.Date(rp$date, format = "%d/%m/%Y")
paste(rp$date, " ",rp$time)
rp <- read.table("clipboard", sep = "\t", header = T)
paste(rp$date, " ",rp$time)
rp$date <- as.POSIXct(as.Date(paste(rp$date, " ",rp$time), format = "%d/%m/%Y h:m"))
rp
rp <- read.table("clipboard", sep = "\t", header = T)
rp
paste(rp$date, " ",rp$time)
rp$date <- as.POSIXct(as.Date(paste(rp$date, " ",rp$time, sep = ""), format = "%d/%m/%Y h:m"))
rp
rp <- read.table("clipboard", sep = "\t", header = T)
paste(rp$date, " ",rp$time, sep = "")
rp$date <- as.POSIXct(as.Date(paste(rp$date, "_",rp$time, sep = ""), format = "%d/%m/%Y_%h:%m"))
rp
rp <- read.table("clipboard", sep = "\t", header = T)
rp$date <- as.POSIXct(as.Date(paste(rp$date, "_",rp$time, sep = ""), format = "%d/%m/%Y_%h"))
rp
rp <- read.table("clipboard", sep = "\t", header = T)
rp
paste(rp$date, "_",rp$time, sep = "")
rp$date <- as.POSIXct(as.Date(paste(rp$date, "_",rp$time, sep = ""), format = "%d/%m/%Y_%H:%M"))
rp
rp <- read.table("clipboard", sep = "\t", header = T)
rp
paste(rp$date, "_",rp$time, sep = "")
as.Date(paste(rp$date, "_",rp$time, sep = ""), format = "%d/%m/%Y_%H:%M")
paste(rp$date, "_",rp$time, sep = "")
as.Date(paste(rp$date, "/",rp$time, sep = ""), format = "%d/%m/%Y/%H:%M")
rp$time
rp <- read.table("clipboard", sep = "\t", header = T)
rp
as.Date(paste(rp$date, "/",rp$time, sep = ""), format = "%d/%e/%Y/%H:%M")
paste(rp$date, "/",rp$time, sep = "")
as.Date(paste(rp$date, "/",rp$time, sep = ""), format = "%d/%e/%Y/%H")
rp$date_time <- paste(rp$date, " ",rp$time, sep = "")
rp
as.Date(rp$date_time, format = "%d/%e/%Y %H:%M")
as.Date.POSIXct(rp$date_time, format = "%d/%e/%Y %H:%M")
as.Date.character(rp$date_time, format = "%d/%e/%Y %H:%M")
as.Date.character(rp$date_time, format = "%d/%e/%Y %H:%M")
rp$date_time
rp$date <- as.Date.character(rp$date_time, format = "%d/%e/%Y %H:%M")
rp
write.table(pr, "clipboard", sep = "\t")
write.table(rp, "clipboard", sep = "\t")
write.table(rp, "clipboard", sep = "\t")
rp
write.table(rp, "clipboard", sep = "\t")
rp <- read.table("clipboard", sep = "\t", header = T)
rp
rp$Date2 <- as.Date(rp$date, format = "%d/%e/%Y")
rp$Date2
write.table(rp, "clipboard", sep = "\t")
rp$Date2
rp$Date2 <- as.Date(rp$date, format = "%e/%m/%Y")
rp$Date2
write.table(rp, "clipboard", sep = "\t")
3179/80954
1016/15113
429/10075
84/3004
61/2876
5/2369
40/1663
84/3004
4/854
7/696
290000/5000000
650000/3000000
22000/51000000
650000/3000000
290000/5000000
=======
myt3_and_Atlantic <- rbind(myt3_all, myt2_all[myt2_all$Subset %in% c("GOM", "BALT", "SCOT", "NORW"), ])
myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "barents" & myt3_and_Atlantic$sal_place == "fresh"] <- "WBL"
myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "barents" & myt3_and_Atlantic$sal_place == "normal"] <- "BH"
myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "white" & myt3_and_Atlantic$sal_place == "normal"] <- "WBL"
myt3_and_Atlantic$Subset[myt3_and_Atlantic$sea == "white" & myt3_and_Atlantic$sal_place == "fresh"] <- "WBL"
myt3_and_Atlantic$Subset <- factor(myt3_and_Atlantic$Subset, levels = c("WBL", "BH", "GOM",  "BALT", "NORW", "SCOT" ))
pr_value_myt3_and_Atlantic <- myt3_and_Atlantic %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_T = sum(ind == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_E = sum(ind == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
pr_value_myt3_and_Atlantic$PMT_T <- with(pr_value_myt3_and_Atlantic, N_T_MT / N_T)
pr_value_myt3_and_Atlantic$PMT_E <- with(pr_value_myt3_and_Atlantic, N_E_MT / N_T)
pr_value_myt3_and_Atlantic$PME_E <- with(pr_value_myt3_and_Atlantic, N_E_ME / N_E)
pr_value_myt3_and_Atlantic$PME_T <- with(pr_value_myt3_and_Atlantic, N_T_ME / N_E)
Pl_mod6_with_initial_data <- Pl_mod6 + geom_segment(data = pr_value_myt3_and_Atlantic, aes(x = freq_MT, y = PME_E, xend = freq_MT, yend = PMT_T), color="darkgrey") +
geom_hline(aes(yintercept=0.5), color="black") +
geom_point(data = pr_value_myt3_and_Atlantic, aes(y = PME_E), fill = "white", shape = 22) +
geom_point(data = pr_value_myt3_and_Atlantic, aes(y = PMT_T), fill = "black", shape = 22) +
labs(y =  "Probability of correct species \n identification by morphotypes", x = "Proportion of M. trossulus", fill = "")+
ylim(0,1) +
xlim(0,1) +
theme_bw()
# Model 7#########################
new_data7 <- myt2_reduced %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(Prop_T) ) %>% group_by(Subset) %>%  do(data.frame(Prop_T = seq(min(.$Prop_T), max(.$Prop_T), length.out = 10)))
predicted7 <- predict(Model_7_final, newdata = new_data7,  type="response", se.fit = T)
new_data7$fit <- predicted7$fit
new_data7$SE <- predicted7$se.fit
Pl_mod7 <- ggplot(new_data7, aes(x = Prop_T, y = fit)) +
geom_line(linetype = 2, color = "red", size = 1) +
facet_wrap(~Subset, ncol = 1) +
geom_ribbon(aes(ymin = fit - 1.96*SE, ymax = fit + 1.96*SE), alpha = 0.1) +
xlim(0, 1) +
ylim(0, 1) +
geom_rug(data = myt2_reduced, inherit.aes = FALSE,  aes(x = Prop_T), size = 0.1) +
geom_abline()
# unique(new_data7$Subset)
init_data_Model_7 <- myt3_and_Atlantic %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(morph == "T_m"),  freq_MT = mean(Sp == "M.trossulus"), N = n())
init_data_Model_7$Subset <- factor(init_data_Model_7$Subset, levels = c("WBL", "BH", "GOM", "BALT", "NORW", "SCOT"))
# init_data_Model_7 <- init_data_Model_7[init_data_Model_7$pop %in% c("Limh88", "CBCP"),  ]
Pl_mod7_with_initial_data <- Pl_mod7 + geom_point(data = init_data_Model_7, aes( y = freq_MT), shape = 22, size = 2 ) + scale_fill_continuous(low = "white", high = "black") + labs(x = "Proportion of mussels with T-morphotype", y = "Proportion of M.trossulus \n") + theme_bw()
# Model 8#########################
new_data8 <- myt2_reduced %>% group_by(Subset,  Sp) %>% do(data.frame(freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data8$eta <- predict(Model_8_final, newdata = new_data8,  re.form = NA)
X <- model.matrix(~freq_MT * Subset * Sp , data = new_data8)
new_data8$SE_eta <- sqrt(diag(X %*% vcov(Model_8_final) %*% t(X)))
new_data8$fit <- logit_back(new_data8$eta)
new_data8$lwr <- logit_back(new_data8$eta -  1.96 *new_data8$SE_eta)
new_data8$upr <- logit_back(new_data8$eta +  1.96 *new_data8$SE_eta)
Pl_mod8 <-  ggplot(new_data8, aes(x = freq_MT, y = fit, group = Sp)) + geom_line(linetype = 2,  size = 1, aes(color = Sp)) + geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.1) + facet_wrap(~Subset, ncol = 1)  + xlim(0, 1) + ylim(0, 1) + scale_color_manual(values=c("blue", "red")) + guides(color = "none") +  geom_rug(data = myt2_reduced, inherit.aes = FALSE,  aes(x = freq_MT), size = 0.1)
pops_over_M <- myt2_reduced %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_MT = sum(Sp2 == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_ME = sum(Sp2 == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
pops_over_M$P_T_MT <- with(pops_over_M, N_T_MT / N_MT)
pops_over_M$P_E_MT <- with(pops_over_M, N_E_MT / N_MT)
pops_over_M$P_E_ME <- with(pops_over_M, N_E_ME / N_ME)
pops_over_M$P_T_ME <- with(pops_over_M, N_T_ME / N_ME)
test_Model_8 <- myt3_and_Atlantic%>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_MT = sum(Sp2 == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_ME = sum(Sp2 == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
test_Model_8$P_T_MT <- with(test_Model_8, N_T_MT / N_MT)
test_Model_8$P_E_MT <- with(test_Model_8, N_E_MT / N_MT)
test_Model_8$P_E_ME <- with(test_Model_8, N_E_ME / N_ME)
test_Model_8$P_T_ME <- with(test_Model_8, N_T_ME / N_ME)
Pl_mod8_with_initial_data <- Pl_mod8 +
labs(y =  "Proportion of T-morphotype \n among  M. trossulus  and  M. edulis",
x = "Proportion of M. trossulus", fill = "") +
geom_segment(data = test_Model_8, aes(x = freq_MT, y = (1-P_E_ME), xend = freq_MT, yend = P_T_MT, group = 1), color = "darkgray")+
geom_point(data = test_Model_8, aes(y = (1-P_E_ME),  group =1), fill = "white", shape = 22)+
geom_point(data = test_Model_8, aes(y = P_T_MT,  group =1), fill = "black", shape = 22)  +
ylim(0,1) +
xlim(0,1) +
geom_hline(aes(yintercept=0.5), color="black")
## Calculator plot for all geographical areas
pops_max_dif_WBL <- max_dif(df = myt2_all, Subset = "WBL")
pops_max_dif_BH <- max_dif(df = myt2_all, Subset = "BH")
pops_max_dif_GOM <- max_dif(df = myt2_all, Subset = "GOM")
pops_max_dif_BALT <- max_dif(df = myt2_all, Subset = "BALT")
pops_max_dif_SCOT <- max_dif(df = myt2_all, Subset = "SCOT")
pops_max_dif_NORW <- max_dif(df = myt2_all, Subset = "NORW")
pops_max_mix_WBL <- max_mix(df = myt2_all, Subset = "WBL")
pops_max_mix_BH <- max_mix(df = myt2_all, Subset = "BH")
pops_max_mix_GOM <- max_mix(df = myt2_all, Subset = "GOM")
pops_max_mix_BALT <- max_mix(df = myt2_all, Subset = "BALT")
pops_max_mix_SCOT <- max_mix(df = myt2_all, Subset = "SCOT")
pops_max_mix_NORW <- max_mix(df = myt2_all, Subset = "NORW")
# Бублики для наиболее смешанных популяций
donat_max_mix_WBL <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_WBL, ])
donat_max_mix_BH <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_BH, ])
donat_max_mix_GOM <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_GOM, ])
donat_max_mix_BALT <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_BALT, ])
# donat_max_mix_SCOT <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_SCOT, ])
# donat_max_mix_NORW <- donat(df = myt2_all[myt2_all$pop %in% pops_max_mix_NORW, ])
donat_max_mix_SCOT <- donat(myt2_all[myt2_all$Subset == "SCOT", ]) #При малом количесвте выборок бублик считаем по всем сборам
donat_max_mix_NORW <- donat(df = myt2_all[myt2_all$Subset == "NORW", ]) #При малом количесвте выборок бублик считаем по всем сборам
# Бублики для наиболее различных по стуртуре популяций
donat_max_dif_WBL <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_WBL, ])
donat_max_dif_BH <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_BH, ])
donat_max_dif_GOM <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_GOM, ])
donat_max_dif_BALT <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_BALT, ])
# donat_max_dif_SCOT <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_SCOT, ])
# donat_max_dif_NORW <- donat(df = myt2_all[myt2_all$pop %in% pops_max_dif_NORW, ])
donat_max_dif_SCOT <- donat(df = myt2_all[myt2_all$Subset == "SCOT", ]) #При малом количесвте выборок бублик считаем по всем сборам
donat_max_dif_NORW <- donat(df = myt2_all[myt2_all$Subset == "NORW", ]) #При малом количесвте выборок бублик считаем по всем сборам
#Предсказания калькулятора 2 на основе наиболее смешанных популяций
calc2_WBL <- calc2(donat_max_mix_WBL[1], donat_max_mix_WBL[2])
calc2_BH <- calc2(donat_max_mix_BH[1], donat_max_mix_BH[2])
calc2_GOM <- calc2(donat_max_mix_GOM[1], donat_max_mix_GOM[2])
calc2_BALT <- calc2(donat_max_mix_BALT[1], donat_max_mix_BALT[2])
calc2_SCOT <- calc2(donat_max_mix_SCOT[1], donat_max_mix_SCOT[2])
calc2_NORW <- calc2(donat_max_mix_NORW[1], donat_max_mix_NORW[2])
calc2_WBL$Subset <- "WBL"
calc2_BH$Subset <- "BH"
calc2_GOM$Subset <- "GOM"
calc2_BALT$Subset <- "BALT"
calc2_SCOT$Subset <- "SCOT"
calc2_NORW$Subset <- "NORW"
calc2_predictions <- rbind(calc2_WBL, calc2_BH, calc2_GOM, calc2_BALT, calc2_SCOT, calc2_NORW)
calc2_predictions$Subset <- factor(calc2_predictions$Subset, levels = levels(myt2_all$Subset))
Pl_mod6_with_initial_data_teor_calc2 <- Pl_mod6_with_initial_data +
geom_line(data = calc2_predictions, aes(x = freq_MT, y = P_MT_T), color = "red") +
geom_line(data = calc2_predictions, aes(x = freq_MT, y = P_ME_E), color = "blue")
#Предсказания калькулятора 1 на основе наиболее различных популяций
calc1_WBL <- calc1(donat_max_dif_WBL[1], donat_max_dif_WBL[2])
calc1_BH <- calc1(donat_max_dif_BH[1], donat_max_dif_BH[2])
calc1_GOM <- calc1(donat_max_dif_GOM[1], donat_max_dif_GOM[2])
calc1_BALT <- calc1(donat_max_dif_BALT[1], donat_max_dif_BALT[2])
calc1_SCOT <- calc1(donat_max_dif_SCOT[1], donat_max_dif_SCOT[2])
calc1_NORW <- calc1(donat_max_dif_NORW[1], donat_max_dif_NORW[2])
calc1_WBL$Subset <- "WBL"
calc1_BH$Subset <- "BH"
calc1_GOM$Subset <- "GOM"
calc1_BALT$Subset <- "BALT"
calc1_SCOT$Subset <- "SCOT"
calc1_NORW$Subset <- "NORW"
calc1_predictions <- rbind(calc1_WBL, calc1_BH, calc1_GOM, calc1_BALT, calc1_SCOT, calc1_NORW)
calc1_predictions$Subset <- factor(calc1_predictions$Subset, levels = levels(myt2_all$Subset))
Pl_mod7_with_initial_data_teor_calc1 <- Pl_mod7_with_initial_data  +
geom_line(data = calc1_predictions, aes(x = P_T, y = Ptros), color = "darkgray", size = 1)
grid.arrange(Pl_mod7_with_initial_data_teor_calc1, Pl_mod8_with_initial_data,  Pl_mod6_with_initial_data_teor_calc2, ncol =3)
>>>>>>> 6c4dc1cc54b967ff7dbd253399519a3af5ac0563
