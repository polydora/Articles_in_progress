myt3 <- myt2[myt2$dataset == "testing", ]
myt2 <- myt2[myt2$dataset == "training", ]
myt3 %>% group_by(Subset) %>% summarise(n_pop = length(unique(pop)))
ggplot(myt, aes(x = freq_MT, y = str)) + geom_point()
names(myt2)
ggplot(myt, aes(x = freq_MT, y = str)) + geom_point()
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_point()
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_density2d()
names(myt3)
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_density2d() + facet_wrap(~place)
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_density2d() + facet_wrap(~sal_place)
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_density2d() + facet_wrap(~facet)
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_density2d() + facet_wrap(~facet) + geom_point()
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_density2d() + facet_wrap(~facet) + geom_point(position = position_jitter())
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_density2d() + facet_wrap(~facet)
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_density2d() + facet_wrap(~facet) + geom_point(aes(size = ind))
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_density2d() + facet_wrap(~facet)
names(myt2)
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet), data = myt2, family = "binomial")
library(mgcv)
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet), data = myt2, family = "binomial")
summary(mod_gam)
plot(mod_gam)
mod_gam
summary(mod_gam)
levels(myt2$facet)
new_data <- expand.grid(str = seq(0, 1, length.out = 100), freq_MT = seq(0, 1, length.out = 100), facet = c("BF", "BN", "W" ))
new_data$Predict <- predict.gam(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(color = Predict))
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(color = Predict)) + facet_wrap(~facet)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(color = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red")
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(color = Predict)) + facet_wrap(~facet) + scale_color_gradient(low = "yellow", high = "red")
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet) + scale_color_gradient(low = "yellow", high = "red")
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red")
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 10)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 100)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 50)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, position = position_jitter(width = 0.1))
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, position = position_jitter(width = 0.01))
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet, k = 10), data = myt2, family = "binomial")
myt <- read.table("data_salinity3.csv", header = T, sep = ";")
myt <- myt[myt$dataset != "overseas", ]
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp <- factor(myt$Sp)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2 <- myt[!is.na(myt$ind), ]
# Вводим обозначения для морфотипов
myt2$morph <- ifelse(myt2$ind == 1, "T_m", "E_m")
myt2$morph <- factor(myt2$morph)
myt2$Sp2 <- ifelse(myt2$Sp == "M.trossulus", 1, 0)
#Correct identification
myt2$congr <- ifelse((myt2$ind == 1 & myt2$Sp == "M.trossulus") | (myt2$ind == 0 & myt2$Sp == "M.edulis"), 1, 0   )
freq_MT <- summaryBy( str ~ pop, data = myt2)
names(freq_MT) <- c("pop", "freq_MT")
myt2 <- merge(myt2, freq_MT)
myt2$Subset[myt2$sea == "barents" & myt2$sal_place == "fresh"] <- "Barents_fresh"
myt2$Subset[myt2$sea == "barents" & myt2$sal_place == "normal"] <- "Barents_normal"
myt2$Subset[myt2$sea == "white" & myt2$sal_place == "normal"] <- "White"
myt2$Subset[myt2$sea == "white" & myt2$sal_place == "fresh"] <- "White"
#Оставляем только данные, на основе, которых строится модель
myt3 <- myt2[myt2$dataset == "testing", ]
myt2 <- myt2[myt2$dataset == "training", ]
myt3 %>% group_by(Subset) %>% summarise(n_pop = length(unique(pop)))
names(myt2)
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_density2d() + facet_wrap(~facet)
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet, k = 10), data = myt2, family = "binomial")
summary(mod_gam)
new_data <- expand.grid(str = seq(0, 1, length.out = 100), freq_MT = seq(0, 1, length.out = 100), facet = c("BF", "BN", "W" ))
new_data$Predict <- predict.gam(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, position = position_jitter(width = 0.01), )
library(lme4)
library(ggplot2)
library(reshape2)
library(sjstats)
library(dplyr)
library(car)
library(doBy)
library(pROC)
library(betareg)
library(lmtest)
library(broom)
library(mgcv)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, position = position_jitter(width = 0.01), )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21)
new_data <- myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data
new_data$Predict <- predict.gam(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet)
new_data
new_data <- myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data
View(new_data)
new_data <- myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 10), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 10)))
new_data
expand.grid(str = seq(0, 1, length.out = 100), freq_MT = seq(0, 1, length.out = 100), facet = c("BF", "BN", "W" ))
expand.grid(str = seq(0, 1, length.out = 10), freq_MT = seq(0, 1, length.out = 10), facet = c("BF", "BN", "W" ))
new_data
new_data <-expand.grid(str = seq(0, 1, length.out = 10), freq_MT = seq(0, 1, length.out = 10), facet = c("BF", "BN", "W" ))
new_data$Predict <- predict.gam(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet)
new_data <-  myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 10), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 10)))
new_data
View(new_data)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet)
new_data
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_point(aes(fill = Predict)) + facet_wrap(~facet)
new_data$Predict <- predict.gam(mod_gam, newdata = new_data,type = "response" )
new_data <-  myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 10), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 10)))
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_point(aes(fill = Predict)) + facet_wrap(~facet)
new_data$Predict <- predict.gam(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_point(aes(fill = Predict)) + facet_wrap(~facet)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_tile(aes(fill = Predict)) + facet_wrap(~facet)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict)) + facet_wrap(~facet)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21)
new_data <-  myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data$Predict <- predict.gam(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.001), shape = 21)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
mod_logist <- glm(ind ~ str*freq_MT*facet, data = myt2, family = "binomial")
summary(mod_logist)
new_data <-  myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data$Predict_gam <- predict.gam(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
new_data$Predict_logist <- predict(mod_logist, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_logist)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_logist)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_logist)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_logist)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 15)
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet), data = myt2, family = "binomial")
summary(mod_gam)
mod_logist <- glm(ind ~ str*freq_MT*facet, data = myt2, family = "binomial")
summary(mod_logist)
new_data <-  myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
new_data$Predict_logist <- predict(mod_logist, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet, k = 20), data = myt2, family = "binomial")
summary(mod_gam)
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet, k = 10), data = myt2, family = "binomial")
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet, k = 2), data = myt2, family = "binomial")
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet, k = 4), data = myt2, family = "binomial")
summary(mod_gam)
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet), data = myt2, family = "binomial")
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet,  bs = "cs"), data = myt2, family = "binomial")
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet, k =-1,   bs = "cs"), data = myt2, family = "binomial")
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet, bs = "ts"), data = myt2, family = "binomial")
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet, bs = "tp"), data = myt2, family = "binomial")
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet, k = -1, bs = "tp"), data = myt2, family = "binomial")
summary(mod_gam)
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_logist)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 15)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_logist)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 15) + theme_bw()
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_logist)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 15) + theme_bw()
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_logist)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red")
myt <- read.table("data_salinity3.csv", header = T, sep = ";")
myt <- myt[myt$dataset != "overseas", ]
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp <- factor(myt$Sp)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2 <- myt[!is.na(myt$ind), ]
# Вводим обозначения для морфотипов
myt2$morph <- ifelse(myt2$ind == 1, "T_m", "E_m")
myt2$morph <- factor(myt2$morph)
myt2$Sp2 <- ifelse(myt2$Sp == "M.trossulus", 1, 0)
#Correct identification
myt2$congr <- ifelse((myt2$ind == 1 & myt2$Sp == "M.trossulus") | (myt2$ind == 0 & myt2$Sp == "M.edulis"), 1, 0   )
freq_MT <- summaryBy( str ~ pop, data = myt2)
names(freq_MT) <- c("pop", "freq_MT")
myt2 <- merge(myt2, freq_MT)
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_density2d() + facet_wrap(~facet)
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet, k = -1, bs = "tp"), data = myt2, family = "binomial")
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet), data = myt2, family = "binomial")
summary(mod_gam)
mod_logist <- glm(ind ~ str*freq_MT*facet, data = myt2, family = "binomial")
summary(mod_logist)
new_data <-  myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
new_data$Predict_logist <- predict(mod_logist, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_logist)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red")
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_logist)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 15) + theme_bw()
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_logist)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2) + theme_bw()
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_logist)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "logit" )
new_data$Predict_logist <- predict(mod_logist, newdata = new_data,type = "logit" )
new_data$Predict_logist <- predict(mod_logist, newdata = new_data,type = "link" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_logist)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
new_data$Predict_logist <- predict(mod_logist, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_logist)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet) + facet, data = myt2, family = "binomial")
summary(mod_gam)
new_data <-  myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
new_data$Predict_logist <- predict(mod_logist, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet, k = 10) + facet, data = myt2, family = "binomial")
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
new_data$Predict_logist <- predict(mod_logist, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet) + facet, data = myt2, family = "binomial")
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
new_data$Predict_logist <- predict(mod_logist, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_logist)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, warning = FALSE, message = FALSE)
library(knitr)
library(lme4)
library(ggplot2)
library(reshape2)
library(sjstats)
library(dplyr)
library(car)
library(doBy)
library(pROC)
library(betareg)
library(lmtest)
library(broom)
library(mgcv)
myt <- read.table("data_salinity3.csv", header = T, sep = ";")
myt <- myt[myt$dataset != "overseas", ]
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp <- factor(myt$Sp)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2 <- myt[!is.na(myt$ind), ]
# Вводим обозначения для морфотипов
myt2$morph <- ifelse(myt2$ind == 1, "T_m", "E_m")
myt2$morph <- factor(myt2$morph)
# Бинарное обозначение видов
myt2$Sp2 <- ifelse(myt2$Sp == "M.trossulus", 1, 0)
#Correct identification
myt2$congr <- ifelse((myt2$ind == 1 & myt2$Sp == "M.trossulus") | (myt2$ind == 0 & myt2$Sp == "M.edulis"), 1, 0   )
# Частота M.trossulus в популяции, вычисленная как срденее значение structure
freq_MT <- summaryBy( str ~ pop, data = myt2)
names(freq_MT) <- c("pop", "freq_MT")
myt2 <- merge(myt2, freq_MT)
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_density2d() + facet_wrap(~facet)
theme_set(theme_bw())
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_point() + facet_wrap(~facet)
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_point(aes(fill = ind)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red")
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_point(aes(fill = ind), shape = 21) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red")
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_point(aes(fill = ind), shape = 21) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + guides(fill = "none")
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_point(aes(fill = ind), shape = 21) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + guides(fill = "none") + labs(x = "Prevalence (proportion of M.trossulus)")
ggplot(myt2, aes(x = freq_MT, y = str)) + geom_point(aes(fill = ind), shape = 21) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + guides(fill = "none") + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure")
Pl_base <- ggplot(myt2, aes(x = freq_MT, y = str))  + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + guides(fill = "none") + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure")
Pl_base + geom_point(aes(fill = ind), shape = 21)
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01))
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01)) + geom_density2d()
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01)) + geom_density2d(n = 10)
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01)) + geom_density2d(n = 50)
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01)) + geom_density2d(n = 1000)
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01)) + geom_density2d(n = 30)
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01)) + geom_density2d(n = 50)
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01)) + geom_density2d(n = 20)
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
knitr::opts_chunk$set(echo = FALSE, cache = TRUE, warning = FALSE, message = FALSE)
library(knitr)
summary(mod_gam)
new_data <-  myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw()
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure")
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20)  + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
spell_check_files("Structure_prevalence_morphotype.Rmd")
library("spelling", lib.loc="C:/Program Files/R/R-3.5.3/library")
spell_check_files("Structure_prevalence_morphotype.Rmd")
knitr::opts_chunk$set(echo = FALSE, cache = TRUE, warning = FALSE, message = FALSE)
library(knitr)
kable(summary(mod_gam))
ggplot(myt2, aes(x = freq_MT, y = str))  + facet_wrap(~facet)  + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure") + geom_point(aes(fill = congr), shape = 21, positon = position_jitter(width = 0.01)) + scale_fill_gradient(low = "white", high = "blue") + guides(fill = "none")
knitr::opts_chunk$set(echo = FALSE, cache = TRUE, warning = FALSE, message = FALSE)
library(knitr)
library(lme4)
library(ggplot2)
library(reshape2)
library(sjstats)
library(dplyr)
library(car)
library(doBy)
library(pROC)
library(betareg)
library(lmtest)
library(broom)
library(mgcv)
myt <- read.table("data_salinity3.csv", header = T, sep = ";")
myt <- myt[myt$dataset != "overseas", ]
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp <- factor(myt$Sp)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2 <- myt[!is.na(myt$ind), ]
# Вводим обозначения для морфотипов
myt2$morph <- ifelse(myt2$ind == 1, "T_m", "E_m")
myt2$morph <- factor(myt2$morph)
# Бинарное обозначение видов
myt2$Sp2 <- ifelse(myt2$Sp == "M.trossulus", 1, 0)
#Correct identification
myt2$congr <- ifelse((myt2$ind == 1 & myt2$Sp == "M.trossulus") | (myt2$ind == 0 & myt2$Sp == "M.edulis"), 1, 0   )
# Частота M.trossulus в популяции, вычисленная как срденее значение structure
freq_MT <- summaryBy( str ~ pop, data = myt2)
names(freq_MT) <- c("pop", "freq_MT")
myt2 <- merge(myt2, freq_MT)
theme_set(theme_bw())
Pl_base <- ggplot(myt2, aes(x = freq_MT, y = str))  + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + guides(fill = "none") + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure")
Pl_base + geom_point(aes(fill = ind), shape = 21)
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01))
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01)) + geom_density2d(n = 20)
mod_gam <- gam(ind ~ s(str, freq_MT, by = facet) + facet, data = myt2, family = "binomial")
summary(mod_gam)
new_data <-  myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~facet) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20)  + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
ggplot(myt2, aes(x = freq_MT, y = str))  + facet_wrap(~facet)  + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure") + geom_point(aes(fill = congr), shape = 21, positon = position_jitter(width = 0.01)) + scale_fill_gradient(low = "white", high = "blue") + guides(fill = "none")
ggplot(myt2, aes(x = freq_MT, y = str))  + facet_wrap(~facet)  + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure") + geom_point(aes(fill = congr), shape = 21, positon = position_jitter(width = 0.1)) + scale_fill_gradient(low = "white", high = "blue") + guides(fill = "none")
mod_gam2 <- gam(congr ~ s(str, freq_MT, by = facet) + facet, data = myt2, family = "binomial")
summary(mod_gam)
summary(mod_gam2)
new_data <-  myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data$Predict_gam2 <- predict(mod_gam2, newdata = new_data,type = "response" )
ggplot(new_data2, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam2)) + facet_wrap(~facet) + scale_fill_gradient(low = "white", high = "blue") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
new_data2 <-  myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data$Predict_gam2 <- predict(mod_gam2, newdata = new_data2,type = "response" )
ggplot(new_data2, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam2)) + facet_wrap(~facet) + scale_fill_gradient(low = "white", high = "blue") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
new_data2$Predict_gam2 <- predict(mod_gam2, newdata = new_data2,type = "response" )
ggplot(new_data2, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam2)) + facet_wrap(~facet) + scale_fill_gradient(low = "white", high = "blue") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
mod_gam2 <- gam(congr ~ s(str, freq_MT, by = facet, k = 10) + facet, data = myt2, family = "binomial")
new_data2 <-  myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data2$Predict_gam2 <- predict(mod_gam2, newdata = new_data2,type = "response" )
ggplot(new_data2, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam2)) + facet_wrap(~facet) + scale_fill_gradient(low = "white", high = "blue") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = congr), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
mod_gam2 <- gam(congr ~ s(str, freq_MT, by = facet) + facet, data = myt2, family = "binomial")
new_data2 <-  myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data2$Predict_gam2 <- predict(mod_gam2, newdata = new_data2,type = "response" )
ggplot(new_data2, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam2)) + facet_wrap(~facet) + scale_fill_gradient(low = "white", high = "blue") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = congr), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
ggplot(new_data2, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam2)) + facet_wrap(~facet) + scale_fill_gradient(low = "white", high = "blue") + geom_density2d(data = myt2[myt2$congr == 1, ], n = 20) + geom_point(data = myt2, aes(fill = congr), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
ggplot(new_data2, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam2)) + facet_wrap(~facet) + scale_fill_gradient(low = "white", high = "blue") + geom_density2d(data = myt2[myt2$congr == 1, ], n = 20, color = "yellow") + geom_point(data = myt2, aes(fill = congr), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
ggplot(new_data2, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam2)) + facet_wrap(~facet) + scale_fill_gradient(low = "white", high = "blue") + geom_density2d(data = myt2[myt2$congr == 1, ], n = 10, color = "yellow") + geom_point(data = myt2, aes(fill = congr), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
ggplot(new_data2, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam2)) + facet_wrap(~facet) + scale_fill_gradient(low = "white", high = "blue") + geom_density2d(data = myt2[myt2$congr == 1, ], n = 10, color = "yellow") + geom_point(data = myt2, aes(fill = congr), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n правильного \nопределения")
ggplot(new_data2, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam2)) + facet_wrap(~facet) + scale_fill_gradient(low = "white", high = "blue") + geom_point(data = myt2, aes(fill = congr), position = position_jitter(width = 0.01), shape = 21) + geom_density2d(data = myt2[myt2$congr == 1, ], n = 10, color = "yellow") + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n правильного \nопределения")
ggplot(myt2, aes(x = freq_MT, y = str))  + facet_wrap(~facet)  + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure") + geom_point(aes(fill = congr), shape = 21, positon = position_jitter(width = 0.1)) + scale_fill_gradient(low = "white", high = "blue") + guides(fill = "none")+ geom_density2d(data = myt2[myt2$congr == 1, ], n = 10, color = "yellow")
library(lme4)
library(ggplot2)
library(reshape2)
library(sjstats)
library(dplyr)
library(car)
library(doBy)
library(pROC)
library(betareg)
library(lmtest)
library(broom)
library(mgcv)
myt <- read.table("data_salinity3.csv", header = T, sep = ";")
myt <- myt[myt$dataset != "overseas", ]
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp <- factor(myt$Sp)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2 <- myt[!is.na(myt$ind), ]
# Вводим обозначения для морфотипов
myt2$morph <- ifelse(myt2$ind == 1, "T_m", "E_m")
myt2$morph <- factor(myt2$morph)
# Бинарное обозначение видов
myt2$Sp2 <- ifelse(myt2$Sp == "M.trossulus", 1, 0)
#Correct identification
myt2$congr <- ifelse((myt2$ind == 1 & myt2$Sp == "M.trossulus") | (myt2$ind == 0 & myt2$Sp == "M.edulis"), 1, 0   )
# Частота M.trossulus в популяции, вычисленная как срденее значение structure
freq_MT <- summaryBy( str ~ pop, data = myt2)
names(freq_MT) <- c("pop", "freq_MT")
myt2 <- merge(myt2, freq_MT)
theme_set(theme_bw())
ggplot(myt2, aes(x = freq_MT, y = str))  + facet_wrap(~facet)  + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure") + geom_point(aes(fill = congr), shape = 21, positon = position_jitter(width = 0.1)) + scale_fill_gradient(low = "white", high = "blue") + guides(fill = "none")+ geom_density2d(data = myt2[myt2$congr == 1, ], n = 10, color = "yellow")
ggplot(myt2, aes(x = freq_MT, y = str))  + facet_wrap(~facet)  + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure") + geom_point(aes(fill = congr), shape = 21, positon = position_jitter(width = 0.1)) + scale_fill_gradient(low = "white", high = "blue") + guides(fill = "none")+ geom_density2d(data = myt2[myt2$congr == 1, ], n = 10, color = "yellow") + theme_grey()
ggplot(myt2, aes(x = freq_MT, y = str))  + facet_wrap(~facet)  + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure") + geom_point(aes(fill = congr), shape = 21, position = position_jitter(width = 0.1)) + scale_fill_gradient(low = "white", high = "blue") + guides(fill = "none")+ geom_density2d(data = myt2[myt2$congr == 1, ], n = 10, color = "yellow") + theme_grey()
ggplot(myt2, aes(x = freq_MT, y = str))  + facet_wrap(~facet)  + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure") + geom_point(aes(fill = congr), shape = 21, position = position_jitter(width = 0.01)) + scale_fill_gradient(low = "white", high = "blue") + guides(fill = "none")+ geom_density2d(data = myt2[myt2$congr == 1, ], n = 10, color = "yellow") + theme_grey()
mod_gam2 <- gam(congr ~ s(str, freq_MT, by = facet) + facet, data = myt2, family = "binomial")
mod_gam2 <- gam(congr ~ s(str, freq_MT, by = facet) + facet, data = myt2, family = "binomial")
# summary(mod_gam2)
new_data2 <-  myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data2$Predict_gam2 <- predict(mod_gam2, newdata = new_data2,type = "response" )
ggplot(new_data2, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam2)) + facet_wrap(~facet) + scale_fill_gradient(low = "white", high = "blue") + geom_point(data = myt2, aes(fill = congr), position = position_jitter(width = 0.01), shape = 21) + geom_density2d(data = myt2[myt2$congr == 1, ], n = 10, color = "yellow") + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n правильного \nопределения")
mod_gam2 <- gam(congr ~ s(str, freq_MT, by = facet) + facet, data = myt2, family = "binomial")
new_data2 <-  myt2 %>% group_by(facet) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data2$Predict_gam2 <- predict(mod_gam2, newdata = new_data2,type = "response" )
ggplot(new_data2, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam2)) + facet_wrap(~facet) + scale_fill_gradient(low = "white", high = "blue") + geom_point(data = myt2, aes(fill = congr), position = position_jitter(width = 0.01), shape = 21) + geom_density2d(data = myt2[myt2$congr == 1, ], n = 10, color = "yellow") + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n правильного \nопределения")
ggplot(new_data2, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam2)) + facet_wrap(~facet) + scale_fill_gradient(low = "white", high = "blue") + geom_point(data = myt2, aes(fill = congr), position = position_jitter(width = 0.01), shape = 21) + geom_density2d(data = myt2[myt2$congr == 1, ], n = 10, color = "yellow") + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n правильного \nопределения по морфотипу")
ggplot(new_data2, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam2)) + facet_wrap(~facet) + scale_fill_gradient(low = "white", high = "blue") + geom_point(data = myt2, aes(fill = congr), position = position_jitter(width = 0.05), shape = 21) + geom_density2d(data = myt2[myt2$congr == 1, ], n = 10, color = "yellow") + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n правильного \nопределения по морфотипу")
library(lme4)
library(ggplot2)
library(reshape2)
library(sjstats)
library(dplyr)
library(car)
library(doBy)
library(pROC)
library(betareg)
library(knitr)
myt <- read.table("data_salinity3.csv", header = T, sep = ",")
myt
myt <- read.table("data_salinity3.csv", header = T, sep = ";")
myt
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp <- factor(myt$Sp)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2 <- myt[!is.na(myt$ind), ]
# Вводим обозначения для морфотипов
myt2$morph <- ifelse(myt2$ind == 1, "T_m", "E_m")
myt2$morph <- factor(myt2$morph)
#Оставляем только данные, на основе, которых строится модель
myt3 <- myt2[myt2$dataset == "testing", ]
myt2 <- myt2[myt2$dataset == "training", ]
myt2$congr <- ifelse((myt2$ind == 1 & myt2$Sp == "M.trossulus") | (myt2$ind == 0 & myt2$Sp == "M.edulis"), 1, 0   )
# Частота M.trossulus в популяции, вычисленная как срденее значение structure
freq_MT <- summaryBy( str ~ pop, data = myt2)
names(freq_MT) <- c("pop", "freq_MT")
myt2 <- merge(myt2, freq_MT)
myt2$Sp2 <- ifelse(myt2$Sp == "M.trossulus", 1, 0)
myt2$Location <- paste(myt2$sea,"_", myt2$sal_place, sep = "") #Перемменная для кодирования четырех выделов
myt3$Location <- paste(myt3$sea,"_", myt3$sal_place, sep = "") #Перемменная для кодирования четырех выделов
prop_T_MT <- summaryBy(Sp2 + ind  ~ pop + sea + sal_place, data = myt2, keep.names = T)
probs_calc_3 <- function(variable = "Location", place = "white_normal", P_MT = 0.5) {
n <- which(names(myt2) == variable)
d <- myt2[myt2[,n] == place, ]
dd <- melt(table(d$Sp, d$morph))
freq_dd <- dcast(data = dd, formula = Var2 ~ Var1)
P_T_MT <- round(with(data = freq_dd, M.trossulus[2] /(M.trossulus[2] + M.trossulus[1])), 2)
P_T_ME <- round(with(data = freq_dd, M.edulis[2] /(M.edulis[2] + M.edulis[1])), 2)
# P_ME <- round(with(data = freq_dd, sum(M.edulis) /(sum(freq_dd[,-1]))), 2)
P_E_ME <- round(with(data = freq_dd, M.edulis[1] /(M.edulis[1] + M.edulis[2])), 2)
P_E_MT <- round(with(data = freq_dd, M.trossulus[1] /(M.trossulus[1] + M.trossulus[2])), 2)
# P_MT <- round(with(data = freq_dd, sum(M.trossulus) /(sum(freq_dd[,-1]))), 2)
P_MT_T <- (P_T_MT*P_MT)/(P_T_MT*P_MT + P_T_ME*(1-P_MT))
P_ME_E <- (P_E_ME*(1-P_MT))/(P_E_ME*(1-P_MT) + P_E_MT*P_MT)
c(P_MT_T, P_ME_E)
}
freq_calc2 <- function(df = myt2, pop=NULL, variable = "Location", place = "barents_fresh"){
require(dplyr)
n <- which(names(df) == variable)
d <- df[df[,n] == place, ]
if(!is.null(pop)) d <- df[df[,n] == place & df$pop == pop, ]
if(is.null(place)) d <- df[df$pop == pop, ]
dd <- melt(table(d$Sp, d$morph))
freq_dd <- dcast(data = dd, formula = Var2 ~ Var1)
#Вероятность встретить M,trossulus среди Т морфотипа оценка условной веротяности P_MT|T
P_MT_T <- freq_dd$M.trossulus[2]/(freq_dd$M.trossulus[2] + freq_dd$M.edulis[2])
#Вероятность встретить M.edulis среди E морфотипа
P_ME_E <- freq_dd$M.edulis[1]/(freq_dd$M.edulis[1] + freq_dd$M.trossulus[1])
#Вероятность встретить M.trossulus среди E морфотипа
P_MT_E <- freq_dd$M.trossulus[1]/(freq_dd$M.edulis[1] + freq_dd$M.trossulus[1])
#Вероятность встретить M.edulis среди T морфотипа
P_ME_T <- freq_dd$M.edulis[2]/(freq_dd$M.edulis[2] + freq_dd$M.trossulus[2])
#Вероятность встретить T морфотп среди M.trossulus морфотипа
P_T_MT <- freq_dd$M.trossulus[2]/(freq_dd$M.trossulus[2] + freq_dd$M.trossulus[1])
#Вероятность встретить E морфотп среди M.trossulus морфотипа
P_E_MT <- freq_dd$M.trossulus[1]/(freq_dd$M.trossulus[2] + freq_dd$M.trossulus[1])
#Вероятность встретить T морфотп среди M.edulis морфотипа
P_T_ME <- freq_dd$M.edulis[2]/(freq_dd$M.edulis[2] + freq_dd$M.edulis[1])
#Вероятность встретить E морфотп среди M.edlis морфотипа
P_E_ME <- freq_dd$M.edulis[1]/(freq_dd$M.edulis[2] + freq_dd$M.edulis[1])
#Вероятность встретить M.trossulus любого морфотипа
P_MT   <- sum(freq_dd$M.trossulus)/(sum(freq_dd$M.trossulus) + sum(freq_dd$M.edulis))
#Вероятность встретить M.edulis любого морфотипа
P_ME   <- sum(freq_dd$M.edulis)/(sum(freq_dd$M.trossulus) + sum(freq_dd$M.edulis))
#Вероятность встретить M.trossulus T морфотипа
P_MT_of_T   <- (freq_dd$M.trossulus[2])/(sum(freq_dd$M.trossulus) + sum(freq_dd$M.edulis))
#Вероятность встретить M.trossulus E морфотипа
P_MT_of_E   <- (freq_dd$M.trossulus[1])/(sum(freq_dd$M.trossulus) + sum(freq_dd$M.edulis))
#Вероятность встретить M.edulis T морфотипа
P_ME_of_T   <- (freq_dd$M.edulis[2])/(sum(freq_dd$M.trossulus) + sum(freq_dd$M.edulis))
#Вероятность встретить M.edulis E морфотипа
P_ME_of_E   <- (freq_dd$M.edulis[1])/(sum(freq_dd$M.trossulus) + sum(freq_dd$M.edulis))
#Вероятность встретить  E морфотип
P_E   <- sum(freq_dd[1, -1])/sum(freq_dd[,-1])
#Вероятность встретить  T морфотип
P_T   <- sum(freq_dd[2, -1])/sum(freq_dd[,-1])
props <- c(P_MT_T, P_ME_E, P_MT_E, P_ME_T, P_T_MT, P_E_MT, P_T_ME,  P_E_ME, P_MT, P_ME, P_MT_of_T, P_MT_of_E, P_ME_of_T, P_ME_of_E, P_E, P_T)
names(props) <- c("P_MT_T", "P_ME_E", "P_MT_E", "P_ME_T", "P_T_MT", "P_E_MT", "P_T_ME",  "P_E_ME", "P_MT", "P_ME", "P_MT_of_T", "P_MT_of_E", "P_ME_of_T", "P_ME_of_E", "P_E", "P_T")
props
}
pop_freq <- data.frame((myt2 %>% group_by(Location, pop) %>% summarize(sea = unique(sea), sal_place =unique(sal_place))),  P_MT_T = NA, P_ME_E = NA, P_MT_E = NA, P_ME_T = NA,     P_T_MT = NA,   P_E_MT = NA,  P_T_ME = NA,     P_E_ME = NA, P_MT = NA,  P_ME = NA,  P_MT_of_T = NA,  P_MT_of_E = NA,  P_ME_of_T=NA,  P_ME_of_E = NA, P_E =NA, P_T = NA)
i <- 1
for(pop in unique(pop_freq$pop)){
pop_freq[i,5:20] <- round(freq_calc2(df = myt2, place = NULL, pop = pop), 3)
i<-i+1
}
pop_freq
