# testing data set
myt3 <- myt2[myt2$dataset == "testing" | myt2$pop %in% c("kovda", "rya", "chupa", "umba_pil"),  ]
#modelling data set
myt2 <- myt2[! myt2$pop %in% unique(myt3$pop), ]
levels(myt2$Subset)
myt2_reduced <- myt2[myt2$Subset %in% c("WBL", "BH", "GOM", "BALT"), ]
myt2_reduced$Subset <- factor(myt2_reduced$Subset)
levels(myt2_reduced$Subset)
levels(myt2$Subset)
myt2_reduced <- myt2[myt2$Subset %in% c("WBL", "BH", "GOM", "BALT"), ]
myt2_reduced$Subset
myt2_reduced$Subset <- factor(myt2_reduced$Subset)
myt2_reduced$Subset
unique(myt2$Subset)
unique(myt2$Subset)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2 <- myt[!is.na(myt$ind), ]
myt2$Subset[myt2$sea == "barents" & myt2$sal_place == "fresh"] <- "WBL"
myt2$Subset[myt2$sea == "barents" & myt2$sal_place == "normal"] <- "BH"
myt2$Subset[myt2$sea == "white" & myt2$sal_place == "normal"] <- "WBL"
myt2$Subset[myt2$sea == "white" & myt2$sal_place == "fresh"] <- "WBL"
myt2$Subset[myt2$sea == "Baltic"] <- "BALT"
myt2$Subset[myt2$sea == "GOM"] <- "GOM"
myt2$Subset[myt2$sea == "Norway"] <- "NORW"
myt2$Subset[myt2$sea == "Scotland"] <- "SCOT"
unique(myt2$Subset)
myt2$Subset <- factor(myt2$Subset, levels = c("WBL", "BH", "NORW", "BALT", "SCOT", "GOM" ))
unique(myt2$Subset)
levels(myt2$Subset)
myt2$Sp [myt2$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt2$Sp [myt2$str <= 0.5] <- "M.edulis"
myt2$Sp <- factor(myt2$Sp)
# Вводим обозначения для морфотипов
myt2$morph <- ifelse(myt2$ind == 1, "T_m", "E_m")
myt2$morph <- factor(myt2$morph)
# Бинарное обозначение видов
myt2$Sp2 <- ifelse(myt2$Sp == "M.trossulus", 1, 0)
#Correct identification
myt2$congr <- ifelse((myt2$ind == 1 & myt2$Sp == "M.trossulus") | (myt2$ind == 0 & myt2$Sp == "M.edulis"), 1, 0   )
freq_MT <- myt2 %>% group_by(pop) %>% summarise(freq_MT = mean(Sp2))
myt2 <- merge(myt2, freq_MT)
Prop_T <- myt2 %>% group_by(pop) %>% summarise(Prop_T = mean(ind))
myt2 <- merge(myt2, Prop_T)
# testing data set
myt3 <- myt2[myt2$dataset == "testing" | myt2$pop %in% c("kovda", "rya", "chupa", "umba_pil"),  ]
unique(myt3$pop)
#modelling data set
myt2 <- myt2[! myt2$pop %in% unique(myt3$pop), ]
unique(myt2$Subset)
myt2_reduced <- myt2[myt2$Subset %in% c("WBL", "BH", "GOM", "BALT"), ]
unique(myt2_reduced$Subset)
myt2_reduced$Subset <- factor(myt2_reduced$Subset, levels = c("WBL",  "BH",   "GOM",  "BALT"))
levels(myt2_reduced$Subset)
Model_4_full_geogr <- glmer(congr ~ morph * freq_MT * Subset + (1 | pop), data = myt2_reduced, family = binomial(link = "logit"), control=glmerControl(optimizer = "optimx", calc.derivs = FALSE, optCtrl = list(method = "nlminb", starttests = FALSE, kkt = FALSE)))
Model_4_full_geogr <- glmer(congr ~ morph * freq_MT * Subset + (1 | pop), data = myt2_reduced, family = binomial(link = "logit"))
library("optimx")
Model_4_full_geogr <- glmer(congr ~ morph * freq_MT * Subset + (1 | pop), data = myt2_reduced, family = binomial(link = "logit"), control=glmerControl(optimizer = "optimx", calc.derivs = FALSE, optCtrl = list(method = "nlminb", starttests = FALSE, kkt = FALSE)))
overdisp_fun(Model_4_full_geogr)
summary(Model_4_full_geogr)
r.squaredGLMM(Model_4_final)
drop1(Model_4_full_geogr)
Model_4_final <- Model_4_full_geogr
new_data4 <- myt2_reduced %>% group_by(Subset, morph) %>% do(data.frame(freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
# Предсказанные значеня в шкале вероятностей
new_data4$fit <- predict(Model_4_final, newdata = new_data4, type = "response", re.form = NA)
# Предсказанные значеня в шкале логитов
new_data4$fit_eta <- predict(Model_4_final, newdata = new_data4, re.form = NA)
# Вычисление доверительного инеравала
formula(Model_4_final)
X <- model.matrix(  ~ morph * freq_MT * Subset, data = new_data4) #Модельная матрица для визуализации
# Ошибки в шкале логитов
new_data4$se_eta <- sqrt(diag(X %*% vcov(Model_4_final) %*% t(X)))
new_data4$lwr <- logit_back(new_data4$fit_eta - 1.96 * new_data4$se_eta)
new_data4$upr <- logit_back(new_data4$fit_eta + 1.96 * new_data4$se_eta)
Pl_mod4 <- ggplot(new_data4, aes(x = freq_MT)) +
geom_ribbon(aes(ymin = lwr, ymax = upr, group = morph), alpha = 0.1)  +
geom_line(aes(y = fit, color = morph), size=1, linetype = 2) +
geom_rug(data = myt2_reduced, inherit.aes = FALSE,  aes(x = freq_MT), size = 0.1) +
scale_color_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("blue", "red"))  +
xlim(0,1)  +
facet_wrap( ~ Subset)
Pl_mod4
pr_value_M <- myt2 %>% group_by(Subset, pop) %>% summarise(freq_MT = mean(freq_MT), N_T = sum(ind == 1),  N_T_MT = sum(Sp2 == 1 & ind == 1), N_E_MT = sum(Sp2 == 1 & ind == 0), N_E = sum(ind == 0), N_E_ME = sum(Sp2 == 0 & ind == 0), N_T_ME = sum(Sp2 == 0 & ind == 1))
pr_value_M$PMT_T <- with(pr_value_M, N_T_MT / N_T)
pr_value_M$PMT_E <- with(pr_value_M, N_E_MT / N_T)
pr_value_M$PME_E <- with(pr_value_M, N_E_ME / N_E)
pr_value_M$PME_T <- with(pr_value_M, N_T_ME / N_E)
Pl_mod4_with_initial_data <- Pl_mod4 + geom_segment(data = pr_value_M, aes(x = freq_MT, y = PME_E, xend = freq_MT, yend = PMT_T), color="darkgrey") +
geom_hline(data = pr_value_M, aes(yintercept=0.5), color="black") +
geom_point(data = pr_value_M, aes(y = PME_E), fill = "white", shape = 21) +
geom_point(data = pr_value_M, aes(y = PMT_T), fill = "black", shape = 21) +
labs(y =  "Proportions of correct species \n identification by morphotypes", x = "Proportion of M. trossulus", fill = "")+
ylim(0,1) +
xlim(0,1) +
theme_bw()
Pl_mod4_with_initial_data
Model_4_final_diag <- fortify(Model_4_final)
ggplot(Model_4_final_diag, aes(x = .fitted, y = .scresid)) + geom_point() + geom_smooth()
ggplot(Model_4_final_diag, aes(x = myt2_reduced$size, y = .scresid)) + geom_point() + geom_smooth()
ggplot(Model_4_final_diag, aes(x = myt2_reduced$size, y = .scresid)) + geom_point() + geom_smooth() + facet_wrap(~Subset)
ptop_T_MT <- myt2_reduced %>% group_by(Subset, pop) %>% summarize(Prop_T = mean(Prop_T), MT = sum(Sp2), N = n())
Model_5_full <- glm(cbind(MT, (N-MT)) ~  Prop_T * Subset, data = ptop_T_MT, family = binomial(link = "logit"))
Model_5_final <- Model_5_full
new_data5 <- myt2_reduced %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(Prop_T) ) %>% group_by(Subset) %>%  do(data.frame(Prop_T = seq(min(.$Prop_T), max(.$Prop_T), length.out = 10)))
predicted5 <- predict(Model_5_final, newdata = new_data5,  type="response", se.fit = T)
new_data5$fit <- predicted5$fit
new_data5$SE <- predicted5$se.fit
Pl_mod5 <- ggplot(new_data5, aes(x = Prop_T, y = fit)) + geom_line(linetype = 2, color = "red", size = 1) + facet_wrap(~Subset) + geom_ribbon(aes(ymin = fit - 1.96*SE, ymax = fit + 1.96*SE), alpha = 0.1) + xlim(0, 1) + ylim(0, 1) +  geom_rug(data = myt2, inherit.aes = FALSE,  aes(x = Prop_T), size = 0.1) + geom_abline()
Pl_mod5
init_data_Model_5 <- myt2 %>% group_by(Subset, pop) %>% summarise(Prop_T = mean(morph == "T_m"),  freq_MT = mean(Sp == "M.trossulus"), N = n())
Pl_mod5_with_initial_data <- Pl_mod5 + geom_point(data = init_data_Model_5, aes( y = freq_MT), shape = 21 ) + scale_fill_continuous(low = "white", high = "black") + labs(x = "Proportion of mussels with T-morphotype", y = "Proportion of M.trossulus \n") + theme_bw()
Pl_mod5_with_initial_data
Model_5_final_diag <- fortify(Model_5_final)
Model_5_final_diag$pop <- ptop_T_MT$pop
Model_5_final_diag[order(Model_5_final_diag$.cooksd, decreasing = T), c("pop", ".cooksd")]
qplot(y =ptop_T_MT$pop, x = Model_5_final_diag$.cooksd)
ggplot(Model_5_final_diag, aes(x = .fitted, y = .stdresid)) + geom_point() + geom_smooth()
myt2_WBL <- myt2[myt2$Subset == "WBL", ]
myt2_WBL
ggplot(myt2_WBL, aes(x = freq_MT, y = str, fill = morph)) + geom_point(shape = 21)
ggplot(myt2_WBL, aes(x = freq_MT, y = str, fill = morph)) + geom_point(shape = 21) + scale_fill_manual(values = c("white", "black"))
ggplot(myt2_WBL, aes(x = freq_MT, y = str, fill = morph)) + geom_point(shape = 21, position = position_jitter(width = 0.05, height = 0.05)) + scale_fill_manual(values = c("white", "black"))
ggplot(myt2_WBL, aes(x = freq_MT, y = str, fill = morph)) + geom_point(shape = 21, position = position_jitter(width = 0.01, height = 0.01)) + scale_fill_manual(values = c("white", "black"))
ggplot(myt2_WBL, aes(x = freq_MT, y = str, fill = morph)) + geom_point(shape = 21, position = position_jitter(width = 0.01, height = 0.01)) + scale_fill_manual(values = c("white", "black")) + theme(legend.position = "bottom")
ggplot(myt2_WBL, aes(x = freq_MT, y = str, fill = morph)) + geom_point(shape = 21, position = position_jitter(width = 0.01, height = 0.01)) + scale_fill_manual(values = c("white", "black")) + theme(legend.position = "bottom") + labs(x = "Frequency of M. trossulus", y = "Individual q-value"  )
Mod_GAM_1 <- gam(ind ~ s(freq_MT, str), data = myt2_WBL, family = "binomial")
new_gam_data <- expand.grid(freq_MT = seq(0, 1, 0.01), ind = seq(0, 1, 0.01))
new_gam_data$Predict_gam <- predict(Mod_GAM_1, newdata = new_gam_data, type = "response")
new_gam_data <- expand.grid(freq_MT = seq(0, 1, 0.01), str = seq(0, 1, 0.01))
new_gam_data$Predict_gam <- predict(Mod_GAM_1, newdata = new_gam_data, type = "response")
ggplot(myt2_WBL, aes(x = freq_MT, y = str, fill = morph)) + geom_tile(data = new_gam_data, aes(fill = Predict_gam))
ggplot(myt2_WBL, aes(x = freq_MT, y = str, color = morph)) + geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +  scale_fill_gradient(high = "red", low = "yellow")
ggplot(myt2_WBL, aes(x = freq_MT, y = str, color = morph)) + geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +  scale_fill_gradient(high = "red", low = "yellow") + geom_point(shape = 21, position = position_jitter(width = 0.01, height = 0.01)) + scale_fill_manual(values = c("white", "black")) + theme(legend.position = "bottom") + labs(x = "Frequency of M. trossulus", y = "Individual q-value"  )
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) + geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +  scale_fill_gradient(high = "red", low = "yellow") + geom_point(aes(color = morph), shape = 21, position = position_jitter(width = 0.01, height = 0.01)) + theme(legend.position = "bottom") + labs(x = "Frequency of M. trossulus", y = "Individual q-value"  )
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
scale_fill_gradient(high = "red", low = "yellow") +
geom_point(aes(fill = morph), shape = 21, position = position_jitter(width = 0.01, height = 0.01)) +
theme(legend.position = "bottom") +
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  )
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
scale_fill_gradient(high = "red", low = "yellow") +
geom_point(aes(color = morph), position = position_jitter(width = 0.01, height = 0.01)) +
theme(legend.position = "bottom") +
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  )
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
scale_fill_gradient(high = "red", low = "yellow") +
geom_point(aes(color = morph), position = position_jitter(width = 0.01, height = 0.01)) +
scale_color_manual(values = c("black", "white"))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
scale_fill_gradient(high = "red", low = "yellow") +
geom_point(aes(color = morph), position = position_jitter(width = 0.01, height = 0.01)) +
scale_color_manual(values = c("white", "black"))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
scale_fill_gradient(high = "red", low = "yellow") +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
scale_fill_manual(values = c("white", "black"))+
geom_point(aes(fill = morph), shape = 21, position = position_jitter(width = 0.01, height = 0.01)) +
theme(legend.position = "bottom") +
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  )
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
scale_fill_gradient(high = "red", low = "yellow") +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
scale_fill_manual(values = c("white", "black"))+
geom_point(aes(fill = morph), shape = 21, position = position_jitter(width = 0.01, height = 0.01))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
scale_fill_gradient(high = "red", low = "yellow") +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
scale_color_manual(values = c("blue", "black"))+
geom_point(aes(fill = morph), shape = 21, position = position_jitter(width = 0.01, height = 0.01))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
scale_fill_gradient(high = "red", low = "yellow") +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
scale_color_manual(values = c("blue", "black"))+
geom_point(aes(color = morph), shape = 21, position = position_jitter(width = 0.01, height = 0.01))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
scale_fill_gradient(high = "red", low = "yellow") +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
scale_color_manual(values = c("blue", "black"))+
geom_point(aes(color = morph), position = position_jitter(width = 0.01, height = 0.01))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
scale_fill_gradient(high = "red", low = "yellow") +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(fill = morph), shape = 21,  position = position_jitter(width = 0.01, height = 0.01))+
scale_fill_manual(values = c("blue", "black"))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
scale_fill_gradient(high = "red", low = "yellow") +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(fill = morph), shape = 21,  position = position_jitter(width = 0.01, height = 0.01))
source('D:/Text/Article/Articles_in_progress/Morphological marker fo Mytilus edulis  Mytilus trossulus identification/R_calc_2018/all geographical data processing.R', encoding = 'UTF-8', echo=TRUE)
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
scale_fill_gradient(high = "red", low = "yellow") +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(fill = morph), shape = 21,  position = position_jitter(width = 0.01, height = 0.01))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(fill = morph), shape = 21,  position = position_jitter(width = 0.01, height = 0.01))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(fill = morph), shape = 21,  position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "yellow")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(color = morph), shape = 21,  position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "yellow")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(fill = morph), shape = 21,  position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "yellow")+
scale_fill_manual(values = c("blue", "black"))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(color = morph), shape = 21,  position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "yellow")+
scale_color_manual(values = c("blue", "black"))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(color = morph), shape = 21,  position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "yellow")+
scale_color_manual(values = c("blue", "black"))+
theme(legend.position = "bottom") +
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  )
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(color = morph), shape = 21,  position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "yellow")+
scale_color_manual(values = c("blue", "black"))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  )
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(color = morph), shape = 21,  position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "white")+
scale_color_manual(values = c("blue", "black"))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  )
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(color = morph), shape = 21,  position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "white")+
scale_color_manual(values = c("blue", "black"))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  ) + geom_density2d()
Mod_GAM_1 <- gam(ind ~ s(freq_MT, str, k =10), data = myt2_WBL, family = "binomial")
new_gam_data <- expand.grid(freq_MT = seq(0, 1, 0.01), str = seq(0, 1, 0.01))
new_gam_data$Predict_gam <- predict(Mod_GAM_1, newdata = new_gam_data, type = "response")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(color = morph), shape = 21,  position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "white")+
scale_color_manual(values = c("blue", "black"))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  ) + geom_density2d()
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(color = morph), shape = 21,  position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "white")+
scale_color_manual(values = c("blue", "black"))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  ) +
geom_density2d(color = "plack")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(color = morph), shape = 21,  position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "white")+
scale_color_manual(values = c("blue", "black"))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  ) +
geom_density2d(color = "black")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(shape = morph, color = morph),  position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "white")+
scale_color_manual(values = c("blue", "black"))+
scale_shape_manual(values = c(16, 11))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  ) +
geom_density2d(color = "black")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(shape = morph, color = morph),  position = position_jitter(width = 0.01, height = 0.01), size = 1) +
scale_fill_gradient(high = "red", low = "white")+
scale_color_manual(values = c("blue", "black"))+
scale_shape_manual(values = c(16, 11))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  ) +
geom_density2d(color = "black")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(shape = morph, color = morph),  position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "white")+
scale_color_manual(values = c("blue", "black"))+
scale_shape_manual(values = c(16, 11))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  ) +
geom_density2d(color = "black")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(shape = morph, color = morph), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "white")+
scale_color_manual(values = c("blue", "black"))+
scale_shape_manual(values = c(16, 11))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  ) +
geom_density2d(color = "black")
Mod_GAM_1 <- gam(ind ~ s(freq_MT, str, k = 20), data = myt2_WBL, family = "binomial")
new_gam_data <- expand.grid(freq_MT = seq(0, 1, 0.01), str = seq(0, 1, 0.01))
new_gam_data$Predict_gam <- predict(Mod_GAM_1, newdata = new_gam_data, type = "response")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(shape = morph, color = morph), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "white")+
scale_color_manual(values = c("blue", "black"))+
scale_shape_manual(values = c(16, 11))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  ) +
geom_density2d(color = "black")
Mod_GAM_1 <- gam(ind ~ s(freq_MT, str), data = myt2_WBL, family = "binomial")
new_gam_data <- expand.grid(freq_MT = seq(0, 1, 0.01), str = seq(0, 1, 0.01))
new_gam_data$Predict_gam <- predict(Mod_GAM_1, newdata = new_gam_data, type = "response")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data, aes(fill = Predict_gam)) +
geom_point(aes(shape = morph, color = morph), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "red", low = "white")+
scale_color_manual(values = c("blue", "black"))+
scale_shape_manual(values = c(16, 11))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  ) +
geom_density2d(color = "black")
Mod_GAM_2 <- gam(congr ~ s(freq_MT, str), data = myt2_WBL, family = "binomial")
new_gam_data <- expand.grid(freq_MT = seq(0, 1, 0.01), str = seq(0, 1, 0.01))
new_gam_data2 <- expand.grid(freq_MT = seq(0, 1, 0.01), str = seq(0, 1, 0.01))
new_gam_data2$Predict_gam2 <- predict(Mod_GAM_2, newdata = new_gam_data, type = "response")
Mod_GAM_2 <- gam(congr ~ s(freq_MT, str), data = myt2_WBL, family = "binomial")
new_gam_data2 <- expand.grid(freq_MT = seq(0, 1, 0.01), str = seq(0, 1, 0.01))
new_gam_data2$Predict_gam2 <- predict(Mod_GAM_2, newdata = new_gam_data2, type = "response")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2)) +
geom_point(aes(color = congr), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2)) +
geom_point(aes(color = congr), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white") +
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  ) +
geom_density2d(color = "black")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2)) +
geom_point(aes(color = congr), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white") +
scale_colr_gradient(high = "blue", low = "white")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2)) +
geom_point(aes(color = congr), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white") +
scale_colr_manual(high = "blue", low = "white")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2)) +
geom_point(aes(color = congr), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white") +
scale_color_manual(high = "blue", low = "white")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2)) +
geom_point(aes(color = congr), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white") +
scale_color_manual(values = c("blue", "white"))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2)) +
geom_point(aes(color = congr), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white") +
scale_color_manual(values = c("blue", "white"))
ggplot(aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2)) +
geom_point(data = myt2_WBL, aes(color = congr), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white") +
scale_color_manual(values = c("blue", "white"))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2)) +
geom_point(aes(color = congr), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white") +
scale_color_manual(values = c("blue", "white"))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2)) +
geom_point(aes(color = congr), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white") +
scale_color_manual(values = c("blue", "white"))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2)) +
geom_point(aes(color = factor(congr) ), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white") +
scale_color_manual(values = c("blue", "white"))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2)) +
geom_point(aes(color = factor(congr) ), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white") +
scale_color_manual(values = c("black", "white"))
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2)) +
geom_point(aes(color = factor(congr) ), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white") +
scale_color_manual(values = c("black", "white"))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  ) +
geom_density2d(data = myt2_WBL[myt2_WBL$congr == 1,], color = "black")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2^2)) +
geom_point(aes(color = factor(congr) ), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white") +
scale_color_manual(values = c("black", "white"))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  ) +
geom_density2d(data = myt2_WBL[myt2_WBL$congr == 1,], color = "black")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2^4)) +
geom_point(aes(color = factor(congr) ), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white") +
scale_color_manual(values = c("black", "white"))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  ) +
geom_density2d(data = myt2_WBL[myt2_WBL$congr == 1,], color = "black")
ggplot(myt2_WBL, aes(x = freq_MT, y = str)) +
geom_tile(data = new_gam_data2, aes(fill = Predict_gam2)) +
geom_point(aes(color = factor(congr) ), size = 1, position = position_jitter(width = 0.01, height = 0.01)) +
scale_fill_gradient(high = "blue", low = "white") +
scale_color_manual(values = c("black", "white"))+
theme(legend.position = "bottom") +
theme_bw()+
labs(x = "Frequency of M. trossulus", y = "Individual q-value"  ) +
geom_density2d(data = myt2_WBL[myt2_WBL$congr == 1,], color = "black")
Mod_X <- glmer(ind ~ size + (1|pop), data = myt2[myt2$Subset %in% c("W", "BL", "BH"), ], family = "binomial")
Mod_X_rs <- glmer(ind ~ size + (1 + size|pop), data = myt2[myt2$Subset %in% c("W", "BL", "BH"), ], family = "binomial")
AIC(Mod_X, Mod_X_rs)
Mod_X <- glmer(ind ~ (1|pop), data = myt2[myt2$Subset %in% c("W", "BL", "BH"), ], family = "binomial")
Mod_X_rs <- glmer(ind ~ (1 + size|pop), data = myt2[myt2$Subset %in% c("W", "BL", "BH"), ], family = "binomial")
AIC(Mod_X, Mod_X_rs)
Mod_X <- glmer(ind ~ size + (1|pop), data = myt2[myt2$Subset %in% c("W", "BL", "BH"), ], family = "binomial")
Mod_X <- glmer(ind ~ size + (1|pop), data = myt2[myt2$Subset %in% c("W", "BL", "BH"), ], family = "binomial")
Mod_X_rs <- glmer(ind ~ (1 + size|pop), data = myt2[myt2$Subset %in% c("W", "BL", "BH"), ], family = "binomial")
AIC(Mod_X, Mod_X_rs)
Mod_X_rs
Mod_X <- glmer(ind ~ size + (1|Subset/pop), data = myt2[myt2$Subset %in% c("W", "BL", "BH"), ], family = "binomial")
Mod_X <- glmer(ind ~ size + (1|pop), data = myt2[myt2$Subset %in% c("W", "BL", "BH"), ], family = "binomial")
Mod_X_rs <- glmer(ind ~ size + (1 + size|pop), data = myt2[myt2$Subset %in% c("W", "BL", "BH"), ], family = "binomial")
AIC(Mod_X, Mod_X_rs)
summary(Mod_X)
r.squaredGLMM(Mod_X)
r.squaredGLMM(Mod_X_rs)
new_data_size <- myt2[myt2$Subset %in% c("W", "BL", "BH"), ] %>% group_by(pop) %>% do(data.frame(size = seq(min(.$size), max(.$size), length.out = 100)))
new_data_size
new_data_size$Predict <- predict(Mod_X_rs, newdata = new_data_size, type = "response")
ggplot(new_data_size, aes(x = size, y = Predict)) + geom_line()
ggplot(new_data_size, aes(x = size, y = Predict, group = pop)) + geom_line()
myt_X <- myt2[myt2$Subset %in% c("W", "BL", "BH"), ]
unique(myt_X$pop)
myt_X <- myt[myt$Subset %in% c("W", "BL", "BH"), ]
unique(myt_X$pop)
myt_X <- myt2[myt2$Subset %in% c("WBL", "BH"), ]
unique(myt_X$pop)
myt_X <- myt2[myt2$Subset %in% c("WBL", "BH"), ]
unique(myt_X$pop)
Mod_X <- glmer(ind ~ size + (1|pop), data = myt_X, family = "binomial")
Mod_X_rs <- glmer(ind ~ size + (1 + size|pop), data = myt_X, family = "binomial")
AIC(Mod_X, Mod_X_rs)
summary(Mod_X_rs)
r.squaredGLMM(Mod_X_rs)
new_data_size <- myt2[myt2$Subset %in% c("W", "BL", "BH"), ] %>% group_by(pop) %>% do(data.frame(size = seq(min(.$size), max(.$size), length.out = 100)))
new_data_size$Predict <- predict(Mod_X_rs, newdata = new_data_size, type = "response")
ggplot(new_data_size, aes(x = size, y = Predict, group = pop)) + geom_line()
new_data_size <- myt_X %>% group_by(pop) %>% do(data.frame(size = seq(min(.$size), max(.$size), length.out = 100)))
myt_X
new_data_size <- myt_X %>% group_by(pop) %>% do(data.frame(size = seq(min(.$size), max(.$size), length.out = 100)))
new_data_size <- myt_X[!is.na(myt_X$size), ] %>% group_by(pop) %>% do(data.frame(size = seq(min(.$size), max(.$size), length.out = 100)))
new_data_size$Predict <- predict(Mod_X_rs, newdata = new_data_size, type = "response")
ggplot(new_data_size, aes(x = size, y = Predict, group = pop)) + geom_line()
new_data_size <- myt_X[!is.na(myt_X$size), ] %>% group_by(pop) %>% do(data.frame(size = seq(min(.$size), max(.$size), length.out = 100)))
new_data_size$Predict <- predict(Mod_X_rs, newdata = new_data_size, type = "response")
ggplot(new_data_size, aes(x = size, y = Predict, group = pop)) + geom_line()
r.squaredGLMM(Mod_X_rs)
ggplot(new_data_size, aes(x = size, y = Predict, group = pop)) + geom_line() + facet_wrap(~Subset)
Mod_X <- glmer(ind ~ size*Subset + (1|pop), data = myt_X, family = "binomial")
Mod_X_rs <- glmer(ind ~ sizesize*Subset + (1 + size|pop), data = myt_X, family = "binomial")
Mod_X_rs <- glmer(ind ~ size*Subset + (1 + size|pop), data = myt_X, family = "binomial")
AIC(Mod_X, Mod_X_rs)
r.squaredGLMM(Mod_X_rs)
new_data_size <- myt_X[!is.na(myt_X$size), ] %>% group_by(Subset, pop) %>% do(data.frame(size = seq(min(.$size), max(.$size), length.out = 100)))
new_data_size$Predict <- predict(Mod_X_rs, newdata = new_data_size, type = "response")
ggplot(new_data_size, aes(x = size, y = Predict, group = pop)) + geom_line() + facet_wrap(~Subset)
