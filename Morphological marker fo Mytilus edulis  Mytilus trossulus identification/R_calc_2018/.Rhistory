PT
warnings()
PT <- df_selected %>% summarise(PT = mean(ind == 1))
PT
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
Ptros_Eq3
warnings()
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
PT <- df_selected %>% summarise(PT = mean(ind == 1))
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
Ptros_Eq3
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1))
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
perm_pairs$Goodness[i] <-  PT$PT - Ptros_Eq3
}
perm_pairs
}
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1))
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
perm_pairs$Goodness[i] <-  PT$PT - Ptros_Eq3
}
perm_pairs
}
mixed_data <- myt2_all[myt2_all$Subset %in% c("WBL"), ]
n_pop <- length(unique(mixed_data$pop))
n_possible_pairs <- (n_pop^2 - n_pop)/2
n_pop
n_possible_pairs
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "loess") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure")
Pl_teor_empir_Eq3
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1))
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
perm_pairs$Goodness[i] <-  1/(PT$PT - Ptros_Eq3)^2
}
perm_pairs
}
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1))
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
perm_pairs$Goodness[i] <-  1/(PT$PT - Ptros_Eq3)^2
}
perm_pairs
}
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1))
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
perm_pairs$Goodness[i] <-  1/(PT$PT - Ptros_Eq3)^2
}
perm_pairs
}
mixed_data <- myt2_all[myt2_all$Subset %in% c("WBL"), ]
n_pop <- length(unique(mixed_data$pop))
n_possible_pairs <- (n_pop^2 - n_pop)/2
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "loess") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure")
Pl_teor_empir_Eq3
perms_Eq3(df = mixed_data)
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1))
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
perm_pairs$Goodness[i] <-  (PT$PT - Ptros_Eq3)^2
}
perm_pairs
}
mixed_data <- myt2_all[myt2_all$Subset %in% c("WBL"), ]
n_pop <- length(unique(mixed_data$pop))
n_possible_pairs <- (n_pop^2 - n_pop)/2
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "loess") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure")
Pl_teor_empir_Eq3
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "gam") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure")
Pl_teor_empir_Eq3
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1))
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
perm_pairs$Goodness[i] <-  (PT$PT - Ptros_Eq3)
}
perm_pairs
}
mixed_data <- myt2_all[myt2_all$Subset %in% c("WBL"), ]
n_pop <- length(unique(mixed_data$pop))
n_possible_pairs <- (n_pop^2 - n_pop)/2
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "gam") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure")
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "gam") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure")
Pl_teor_empir_Eq3
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "loess") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure")
Pl_teor_empir_Eq3
PT <- df_selected %>% summarise(PT = mean(ind == 1), Ptros = mean(Sp == "M.trossulus"))
PT
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1), Ptros = mean(Sp == "M.trossulus"))
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
perm_pairs$Goodness[i] <-  (PT$Ptros - Ptros_Eq3)
}
perm_pairs
}
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1), Ptros = mean(Sp == "M.trossulus"))
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
perm_pairs$Goodness[i] <-  (PT$Ptros - Ptros_Eq3)
}
perm_pairs
}
mixed_data <- myt2_all[myt2_all$Subset %in% c("WBL"), ]
n_pop <- length(unique(mixed_data$pop))
n_possible_pairs <- (n_pop^2 - n_pop)/2
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "loess") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure")
Pl_teor_empir_Eq3
df_selected
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
donat(df_selected)
PT$PT
Eq3(PT$PT, donat(df_selected))
Ptros_Eq3
PT$Ptros
PT
c(perm_pairs$First[i], perm_pairs$Second[i])
perm_pairs
PT <- df_selected %>% summarise(PT = mean(ind == 1), Ptros = mean(Sp == "M.trossulus"))
PT
perms_Eq3(df = mixed_data)
mixed_data <- myt2_all[myt2_all$Subset %in% c("GOM"), ]
mixed_data <- myt2_all[myt2_all$Subset %in% c("GOM"), ]
n_pop <- length(unique(mixed_data$pop))
n_possible_pairs <- (n_pop^2 - n_pop)/2
n_pop
n_possible_pairs
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "loess") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure")
Pl_teor_empir_Eq3
mixed_data <- myt2_all[myt2_all$Subset %in% c("BH"), ]
n_pop <- length(unique(mixed_data$pop))
n_pop
n_possible_pairs <- (n_pop^2 - n_pop)/2
n_possible_pairs
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "loess") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure")
Pl_teor_empir_Eq3
perm_pairs
perm_pairs$Ptros[i] <- PT$Ptros
perm_pairs$PT[i] <- PT$PT
perm_pairs$Ptros[i] <- PT$Ptros
perm_pairs$Ptros_Eq3[i] <- Ptros_Eq3
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1), Ptros = mean(Sp == "M.trossulus"))
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
perm_pairs$PT[i] <- PT$PT
perm_pairs$Ptros[i] <- PT$Ptros
perm_pairs$Ptros_Eq3[i] <- Ptros_Eq3
perm_pairs$Goodness[i] <- perm_pairs$Ptros[i]  - perm_pairs$Ptros_Eq3[i]
}
perm_pairs
}
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1), Ptros = mean(Sp == "M.trossulus"))
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
perm_pairs$PT[i] <- PT$PT
perm_pairs$Ptros[i] <- PT$Ptros
perm_pairs$Ptros_Eq3[i] <- Ptros_Eq3
perm_pairs$Goodness[i] <- perm_pairs$Ptros[i]  - perm_pairs$Ptros_Eq3[i]
}
perm_pairs
}
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1), Ptros = mean(Sp == "M.trossulus"))
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
perm_pairs$PT[i] <- PT$PT
perm_pairs$Ptros[i] <- PT$Ptros
perm_pairs$Ptros_Eq3[i] <- Ptros_Eq3
perm_pairs$Goodness[i] <- perm_pairs$Ptros[i]  - perm_pairs$Ptros_Eq3[i]
}
perm_pairs
}
perms_Eq3(df = mixed_data)
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1), Ptros = mean(Sp == "M.trossulus"))
Ptros_Eq3 <- Eq3(PT$PT, donat(df_selected))
perm_pairs$PT[i] <- PT$PT
perm_pairs$Ptros[i] <- PT$Ptros
perm_pairs$Ptros_Eq3[i] <- Ptros_Eq3
perm_pairs$Goodness[i] <- perm_pairs$Ptros[i]  - perm_pairs$Ptros_Eq3[i]
}
perm_pairs
}
df_selected
donat(df_selected)
don <- donat(df_selected)
don
don
don
Ptros_Eq3 <-  (PT$PT - P_T_edu)/ ((P_T_tros) -  P_T_edu)
Ptros_Eq3 <-  (PT$PT - P_T_edu)/ ((P_T_tros) -  P_T_edu)
P_T_edu <- don[2]
P_T_tros <- don[1]
Ptros_Eq3 <-  (PT$PT - P_T_edu)/ ((P_T_tros) -  P_T_edu)
Ptros_Eq3 <- ifelse(Ptros <0 | Ptros >1 , NA, Ptros_Eq3)
Ptros_Eq3 <- ifelse(Ptros_Eq3 <0 | Ptros_Eq3 >1 , NA, Ptros_Eq3)
Ptros_Eq3 <- ifelse(Ptros_Eq3 <0 | Ptros_Eq3 >1 , NA, Ptros_Eq3)
Ptros_Eq3
perm_pairs$PT[i] <- PT$PT
perm_pairs$Ptros[i] <- PT$Ptros
perm_pairs$Ptros_Eq3[i] <- Ptros_Eq3
perm_pairs$Goodness[i] <- perm_pairs$Ptros[i]  - perm_pairs$Ptros_Eq3[i]
perm_pairs
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1), Ptros = mean(Sp == "M.trossulus"))
don <- donat(df_selected)
P_T_edu <- don[2]
P_T_tros <- don[1]
Ptros_Eq3 <-  (PT$PT - P_T_edu)/ ((P_T_tros) -  P_T_edu)
Ptros_Eq3 <- ifelse(Ptros_Eq3 <0 | Ptros_Eq3 >1 , NA, Ptros_Eq3)
perm_pairs$PT[i] <- PT$PT
perm_pairs$Ptros[i] <- PT$Ptros
perm_pairs$Ptros_Eq3[i] <- Ptros_Eq3
perm_pairs$Goodness[i] <- perm_pairs$Ptros[i]  - perm_pairs$Ptros_Eq3[i]
}
perm_pairs
}
mixed_data <- myt2_all[myt2_all$Subset %in% c("BH"), ]
mixed_data <- myt2_all[myt2_all$Subset %in% c("WBL"), ]
mixed_data
n_pop <- length(unique(mixed_data$pop))
n_possible_pairs <- (n_pop^2 - n_pop)/2
n_possible_pairs
perms_Eq3(df = mixed_data)
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1), Ptros = mean(Sp == "M.trossulus"))
don <- donat(df_selected)
P_T_edu <- don[2]
P_T_tros <- don[1]
Ptros_Eq3 <-  (PT$PT - P_T_edu)/ ((P_T_tros) -  P_T_edu)
Ptros_Eq3 <- ifelse(Ptros_Eq3 <0 | Ptros_Eq3 >1 , NA, Ptros_Eq3)
perm_pairs$PT[i] <- PT$PT
perm_pairs$Ptros[i] <- PT$Ptros
perm_pairs$Ptros_Eq3[i] <- Ptros_Eq3
perm_pairs$Goodness[i] <- perm_pairs$PT[i]  - perm_pairs$Ptros_Eq3[i]
}
perm_pairs
}
perms_Eq3 <- function(df = myt2[myt2$Subset == "W", ],...) {
require(dplyr)
df$pop <- as.character(df$pop)
perm_pairs <- expand.grid(First = unique(df$pop), Second = unique(df$pop))
perm_pairs <- perm_pairs[perm_pairs$First != perm_pairs$Second,]
perm_pairs <- perm_pairs[perm_pairs$Second != perm_pairs$First,]
perm_pairs$First <- as.character(perm_pairs$First)
perm_pairs$Second <- as.character(perm_pairs$Second)
perm_pairs$Delta <- NA
for(i in 1:nrow(perm_pairs)){
df_selected <- df[df$pop %in% c(perm_pairs$First[i], perm_pairs$Second[i]),]
means <- df_selected %>% group_by(pop) %>% summarise(freq_MT = mean(freq_MT))
perm_pairs$Delta[i] <-
min(c(means$freq_MT[1],means$freq_MT[2])) *(1 - max(c(means$freq_MT[1],means$freq_MT[2]))) +
max(c(means$freq_MT[1],means$freq_MT[2])) *(1 - min(c(means$freq_MT[1],means$freq_MT[2])))
PT <- df_selected %>% summarise(PT = mean(ind == 1), Ptros = mean(Sp == "M.trossulus"))
don <- donat(df_selected)
P_T_edu <- don[2]
P_T_tros <- don[1]
Ptros_Eq3 <-  (PT$PT - P_T_edu)/ ((P_T_tros) -  P_T_edu)
Ptros_Eq3 <- ifelse(Ptros_Eq3 <0 | Ptros_Eq3 >1 , NA, Ptros_Eq3)
perm_pairs$PT[i] <- PT$PT
perm_pairs$Ptros[i] <- PT$Ptros
perm_pairs$Ptros_Eq3[i] <- Ptros_Eq3
perm_pairs$Goodness[i] <- perm_pairs$PT[i]  - perm_pairs$Ptros_Eq3[i]
}
perm_pairs
}
mixed_data <- myt2_all[myt2_all$Subset %in% c("WBL"), ]
n_pop <- length(unique(mixed_data$pop))
n_possible_pairs <- (n_pop^2 - n_pop)/2
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "loess") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure")
Pl_teor_empir_Eq3
mixed_data <- myt2_all[myt2_all$Subset %in% c("BH"), ]
n_pop <- length(unique(mixed_data$pop))
n_possible_pairs <- (n_pop^2 - n_pop)/2
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "loess") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure")
Pl_teor_empir_Eq3
mixed_data <- myt2_all[myt2_all$Subset %in% c("GOM"), ]
n_pop <- length(unique(mixed_data$pop))
n_possible_pairs <- (n_pop^2 - n_pop)/2
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "loess") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure")
Pl_teor_empir_Eq3
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "loess") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure") + ylim(-1,1)
Pl_teor_empir_Eq3
mixed_data <- myt2_all[myt2_all$Subset %in% c("WBL"), ]
n_pop <- length(unique(mixed_data$pop))
n_possible_pairs <- (n_pop^2 - n_pop)/2
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "loess") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure") + ylim(-1,1)
Pl_teor_empir_Eq3
mixed_data <- myt2_all[myt2_all$Subset %in% c("BALT"), ]
n_pop <- length(unique(mixed_data$pop))
n_possible_pairs <- (n_pop^2 - n_pop)/2
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "loess") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure") + ylim(-1,1)
Pl_teor_empir_Eq3
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "loess") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure") + ylim(-1,1) + xlim(0,1)
Pl_teor_empir_Eq3
mixed_data <- myt2_all[myt2_all$Subset %in% c("NORW"), ]
n_pop <- length(unique(mixed_data$pop))
n_possible_pairs <- (n_pop^2 - n_pop)/2
Pl_teor_empir_Eq3 <- ggplot(perms_Eq3(df = mixed_data), aes(x = Delta, y = Goodness)) + geom_point(size = 0.1) + geom_smooth(se = F, method = "loess") + labs(y = "Goodness \n") + ggtitle("Calibration on the base of genetic structure") + ylim(-1,1) + xlim(0,1)
Pl_teor_empir_Eq3
WBL
