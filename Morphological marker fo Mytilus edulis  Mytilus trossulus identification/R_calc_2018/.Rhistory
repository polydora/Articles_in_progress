myt_overseas <- myt[myt$dataset == "overseas", ]
myt_overseas
myt <- read.table("data_salinity3.csv", header = T, sep = ",")
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp <- factor(myt$Sp)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2_all <- myt[!is.na(myt$ind), ]
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "normal"] <- "BH"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "normal"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "Baltic"] <- "BALT"
myt2_all$Subset[myt2_all$sea == "GOM"] <- "GOM"
myt2_all$Subset[myt2_all$sea == "Norway"] <- "NORW"
myt2_all$Subset[myt2_all$sea == "Scotland"] <- "SCOT"
myt2_all$Subset <- factor(myt2_all$Subset, levels = c("WSBL", "BH", "NORW", "BALT", "SCOT", "GOM" ))
unique(myt2_all$Subset)
myt2 <- myt2_all
# Вводим обозначения для морфотипов
myt2$morph <- ifelse(myt2$ind == 1, "T_m", "E_m")
myt2$morph <- factor(myt2$morph)
myt2$Sp2 <- ifelse(myt2$Sp == "M.trossulus", 1, 0)
#Correct identification
myt2$congr <- ifelse((myt2$ind == 1 & myt2$Sp == "M.trossulus") | (myt2$ind == 0 & myt2$Sp == "M.edulis"), 1, 0   )
freq_MT <- summaryBy( str ~ pop, data = myt2)
names(freq_MT) <- c("pop", "freq_MT")
myt2 <- merge(myt2, freq_MT)
theme_set(theme_bw())
Pl_base <- ggplot(myt2, aes(x = freq_MT, y = str)) + scale_fill_gradient(low = "yellow", high = "red") + guides(fill = "none") + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure") + facet_wrap(~Subset)
Pl_base + geom_point(aes(fill = ind), shape = 21)
Для большей наглядности и избежания оверплоттинга точек добавим небольшой случайный разброс.
```{r}
Pl_base + geom_point(aes(fill = ind), shape = 21)
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01))
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01)) + geom_density2d(n = 20)
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01))
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01)) + geom_density2d(n = 20)
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01)) + geom_density2d()
Pl_base <- ggplot(myt2, aes(x = freq_MT, y = str)) + scale_fill_gradient(low = "yellow", high = "red") + guides(fill = "none") + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure")
Pl_base + geom_point(aes(fill = ind), shape = 21)
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01))
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01)) + geom_density2d()
mod_gam <- gam(ind ~ s(str, freq_MT, by = Subset) + Subset, data = myt2, family = "binomial")
summary(mod_gam)
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
mod_gam <- gamm(ind ~ s(str, freq_MT), random = list(Subset=~1), data = myt2, family = "binomial")
summary(mod_gam)
mod_gam <- gamm(ind ~ s(str, freq_MT), random = list(Subset/pop=~1), data = myt2, family = "binomial")
mod_gam <- gamm(ind ~ s(str, freq_MT), random = list(Subset = ~1, pop = ~1), data = myt2, family = "binomial")
summary(mod_gam)
new_data <-  myt2 %>%  do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data$Predict_gam <- predict(mod_gam$gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) +  scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
myt2 <- myt2_all %>% filter(Subset %in%  c("WSBL", "BH", "BALT", "GOM"))
# Вводим обозначения для морфотипов
myt2$morph <- ifelse(myt2$ind == 1, "T_m", "E_m")
myt2$morph <- factor(myt2$morph)
library(lme4)
library(ggplot2)
library(reshape2)
library(sjstats)
library(dplyr)
library(car)
library(doBy)
library(pROC)
library(betareg)
library(lmtest)
library(broom)
library(mgcv)
myt <- read.table("data_salinity3.csv", header = T, sep = ",")
myt_overseas <- myt[myt$dataset == "overseas", ]
myt <- myt[myt$dataset != "overseas", ]
# str(myt)
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp <- factor(myt$Sp)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2_all <- myt[!is.na(myt$ind), ]
### Объединяем популяции в данных Сары #####
# myt2_all$pop2 <- myt2_all$pop
#
# myt2_all$pop[myt2_all$pop %in% c("CBCP", "CBSC")] <- "CB"
#
# myt2_all$pop[myt2_all$pop %in% c("MDRE",   "MDRW")] <- "MDR"
# Подразделяем данные на сабсеты
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "normal"] <- "BH"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "normal"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "Baltic"] <- "BALT"
myt2_all$Subset[myt2_all$sea == "GOM"] <- "GOM"
myt2_all$Subset[myt2_all$sea == "Norway"] <- "NORW"
myt2_all$Subset[myt2_all$sea == "Scotland"] <- "SCOT"
myt2_all$Subset <- factor(myt2_all$Subset, levels = c("WSBL", "BH", "NORW", "BALT", "SCOT", "GOM" ))
myt2 <- myt2_all %>% filter(Subset %in%  c("WSBL", "BH", "BALT", "GOM"))
# Вводим обозначения для морфотипов
myt2$morph <- ifelse(myt2$ind == 1, "T_m", "E_m")
myt2$morph <- factor(myt2$morph)
# Бинарное обозначение видов
myt2$Sp2 <- ifelse(myt2$Sp == "M.trossulus", 1, 0)
#Correct identification
myt2$congr <- ifelse((myt2$ind == 1 & myt2$Sp == "M.trossulus") | (myt2$ind == 0 & myt2$Sp == "M.edulis"), 1, 0   )
# Частота M.trossulus в популяции, вычисленная как срденее значение structure
freq_MT <- summaryBy( str ~ pop, data = myt2)
names(freq_MT) <- c("pop", "freq_MT")
myt2 <- merge(myt2, freq_MT)
theme_set(theme_bw())
Pl_base <- ggplot(myt2, aes(x = freq_MT, y = str)) + scale_fill_gradient(low = "yellow", high = "red") + guides(fill = "none") + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure") + facet_wrap(~Subset)
Pl_base + geom_point(aes(fill = ind), shape = 21)
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01))
myt <- read.table("data_salinity3.csv", header = T, sep = ",")
myt_overseas <- myt[myt$dataset == "overseas", ]
myt <- myt[myt$dataset != "overseas", ]
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp <- factor(myt$Sp)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2_all <- myt[!is.na(myt$ind), ]
myt2_all
unique(myt2_all$Subset)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2_all <- myt[!is.na(myt$ind), ]
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "normal"] <- "BH"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "normal"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "Baltic"] <- "BALT"
myt2_all$Subset[myt2_all$sea == "GOM"] <- "GOM"
myt2_all$Subset[myt2_all$sea == "Norway"] <- "NORW"
myt2_all$Subset[myt2_all$sea == "Scotland"] <- "SCOT"
myt2_all$Subset <- factor(myt2_all$Subset, levels = c("WSBL", "BH", "NORW", "BALT", "SCOT", "GOM" ))
unique(myt2_all$Subset)
myt <- read.table("data_salinity3.csv", header = T, sep = ",")
myt_overseas <- myt[myt$dataset == "overseas", ]
myt <- myt[myt$dataset != "overseas", ]
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp <- factor(myt$Sp)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2_all <- myt[!is.na(myt$ind), ]
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "normal"] <- "BH"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "normal"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "Baltic"] <- "BALT"
myt2_all$Subset[myt2_all$sea == "GOM"] <- "GOM"
myt2_all$Subset[myt2_all$sea == "Norway"] <- "NORW"
myt2_all$Subset[myt2_all$sea == "Scotland"] <- "SCOT"
myt2_all$Subset <- factor(myt2_all$Subset, levels = c("WSBL", "BH", "NORW", "BALT", "SCOT", "GOM" ))
unique(myt2_all$Subset)
myt <- read.table("data_salinity3.csv", header = T, sep = ",")
unique(myt$Subset)
myt <- read.table("data_salinity3.csv", header = T, sep = ",")
myt_overseas <- myt[myt$dataset == "overseas", ]
myt <- myt[myt$dataset != "overseas", ]
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp <- factor(myt$Sp)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2_all <- myt[!is.na(myt$ind), ]
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "normal"] <- "BH"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "normal"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "Baltic"]
myt2_all$Subset[myt2_all$sea == "Baltic"] <- "BALT"
myt2_all$Subset[myt2_all$sea == "Baltic"]
myt
myt <- read.table("data_salinity3.csv", header = T, sep = ",")
#
# myt_overseas <- myt[myt$dataset == "overseas", ]
#
# myt <- myt[myt$dataset != "overseas", ]
# str(myt)
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp <- factor(myt$Sp)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2_all <- myt[!is.na(myt$ind), ]
### Объединяем популяции в данных Сары #####
# myt2_all$pop2 <- myt2_all$pop
#
# myt2_all$pop[myt2_all$pop %in% c("CBCP", "CBSC")] <- "CB"
#
# myt2_all$pop[myt2_all$pop %in% c("MDRE",   "MDRW")] <- "MDR"
# Подразделяем данные на сабсеты
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "normal"] <- "BH"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "normal"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "Baltic"] <- "BALT"
myt2_all$Subset[myt2_all$sea == "GOM"] <- "GOM"
myt2_all$Subset[myt2_all$sea == "Norway"] <- "NORW"
myt2_all$Subset[myt2_all$sea == "Scotland"] <- "SCOT"
myt2_all$Subset <- factor(myt2_all$Subset, levels = c("WSBL", "BH", "NORW", "BALT", "SCOT", "GOM" ))
myt2 <- myt2_all
# Вводим обозначения для морфотипов
myt2$morph <- ifelse(myt2$ind == 1, "T_m", "E_m")
myt2$morph <- factor(myt2$morph)
# Бинарное обозначение видов
myt2$Sp2 <- ifelse(myt2$Sp == "M.trossulus", 1, 0)
#Correct identification
myt2$congr <- ifelse((myt2$ind == 1 & myt2$Sp == "M.trossulus") | (myt2$ind == 0 & myt2$Sp == "M.edulis"), 1, 0   )
# Частота M.trossulus в популяции, вычисленная как срденее значение structure
freq_MT <- summaryBy( str ~ pop, data = myt2)
names(freq_MT) <- c("pop", "freq_MT")
myt2 <- merge(myt2, freq_MT)
myt2
unique(myt2$Subset)
myt2_all$Subset <- factor(myt2_all$Subset, levels = c("WSBL", "BH", "BALT", "GOM" ))
myt2 <- myt2_all %>% filter(Subset %in% c("WSBL", "BH", "BALT", "GOM" ))
# Вводим обозначения для морфотипов
myt2$morph <- ifelse(myt2$ind == 1, "T_m", "E_m")
unique(myt2$Subset)
library(lme4)
library(ggplot2)
library(reshape2)
library(sjstats)
library(dplyr)
library(car)
library(doBy)
library(pROC)
library(betareg)
library(lmtest)
library(broom)
library(mgcv)
myt <- read.table("data_salinity3.csv", header = T, sep = ",")
#
# myt_overseas <- myt[myt$dataset == "overseas", ]
#
# myt <- myt[myt$dataset != "overseas", ]
# str(myt)
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp <- factor(myt$Sp)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2_all <- myt[!is.na(myt$ind), ]
### Объединяем популяции в данных Сары #####
# myt2_all$pop2 <- myt2_all$pop
#
# myt2_all$pop[myt2_all$pop %in% c("CBCP", "CBSC")] <- "CB"
#
# myt2_all$pop[myt2_all$pop %in% c("MDRE",   "MDRW")] <- "MDR"
# Подразделяем данные на сабсеты
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "normal"] <- "BH"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "normal"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "Baltic"] <- "BALT"
myt2_all$Subset[myt2_all$sea == "GOM"] <- "GOM"
myt2_all$Subset[myt2_all$sea == "Norway"] <- "NORW"
myt2_all$Subset[myt2_all$sea == "Scotland"] <- "SCOT"
myt2_all$Subset <- factor(myt2_all$Subset, levels = c("WSBL", "BH", "NORW", "BALT", "SCOT", "GOM" ))
myt2 <- myt2_all %>% filter(Subset %in% c("WSBL", "BH", "BALT", "GOM" ))
# Вводим обозначения для морфотипов
myt2$morph <- ifelse(myt2$ind == 1, "T_m", "E_m")
myt2$morph <- factor(myt2$morph)
# Бинарное обозначение видов
myt2$Sp2 <- ifelse(myt2$Sp == "M.trossulus", 1, 0)
#Correct identification
myt2$congr <- ifelse((myt2$ind == 1 & myt2$Sp == "M.trossulus") | (myt2$ind == 0 & myt2$Sp == "M.edulis"), 1, 0   )
# Частота M.trossulus в популяции, вычисленная как срденее значение structure
freq_MT <- summaryBy( str ~ pop, data = myt2)
names(freq_MT) <- c("pop", "freq_MT")
myt2 <- merge(myt2, freq_MT)
theme_set(theme_bw())
Pl_base <- ggplot(myt2, aes(x = freq_MT, y = str)) + scale_fill_gradient(low = "yellow", high = "red") + guides(fill = "none") + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure") + facet_wrap(~Subset)
Pl_base + geom_point(aes(fill = ind), shape = 21)
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01))
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01)) + geom_density2d(n = 20)
Pl_base <- ggplot(myt2, aes(x = freq_MT, y = str)) + scale_fill_gradient(low = "yellow", high = "red") + guides(fill = "none") + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure") + facet_wrap(~Subset) + geom_density2d(n = 20)
Pl_base + geom_point(aes(fill = ind), shape = 21)
Pl_base <- ggplot(myt2, aes(x = freq_MT, y = str)) + scale_fill_gradient(low = "yellow", high = "red") + guides(fill = "none") + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure") + facet_wrap(~Subset) + geom_density2d()
Pl_base + geom_point(aes(fill = ind), shape = 21)
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, cache = TRUE, warning = FALSE, message = FALSE)
library(knitr)
# Chunk 2
library(lme4)
library(ggplot2)
library(reshape2)
library(sjstats)
library(dplyr)
library(car)
library(doBy)
library(pROC)
library(betareg)
library(lmtest)
library(broom)
library(mgcv)
myt <- read.table("data_salinity3.csv", header = T, sep = ",")
#
# myt_overseas <- myt[myt$dataset == "overseas", ]
#
# myt <- myt[myt$dataset != "overseas", ]
# str(myt)
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp <- factor(myt$Sp)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2_all <- myt[!is.na(myt$ind), ]
### Объединяем популяции в данных Сары #####
# myt2_all$pop2 <- myt2_all$pop
#
# myt2_all$pop[myt2_all$pop %in% c("CBCP", "CBSC")] <- "CB"
#
# myt2_all$pop[myt2_all$pop %in% c("MDRE",   "MDRW")] <- "MDR"
# Подразделяем данные на сабсеты
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "normal"] <- "BH"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "normal"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "Baltic"] <- "BALT"
myt2_all$Subset[myt2_all$sea == "GOM"] <- "GOM"
myt2_all$Subset[myt2_all$sea == "Norway"] <- "NORW"
myt2_all$Subset[myt2_all$sea == "Scotland"] <- "SCOT"
myt2_all$Subset <- factor(myt2_all$Subset, levels = c("WSBL", "BH", "NORW", "BALT", "SCOT", "GOM" ))
myt2 <- myt2_all %>% filter(Subset %in% c("WSBL", "BH", "BALT", "GOM" ))
# Вводим обозначения для морфотипов
myt2$morph <- ifelse(myt2$ind == 1, "T_m", "E_m")
myt2$morph <- factor(myt2$morph)
# Бинарное обозначение видов
myt2$Sp2 <- ifelse(myt2$Sp == "M.trossulus", 1, 0)
#Correct identification
myt2$congr <- ifelse((myt2$ind == 1 & myt2$Sp == "M.trossulus") | (myt2$ind == 0 & myt2$Sp == "M.edulis"), 1, 0   )
# Частота M.trossulus в популяции, вычисленная как срденее значение structure
freq_MT <- summaryBy( str ~ pop, data = myt2)
names(freq_MT) <- c("pop", "freq_MT")
myt2 <- merge(myt2, freq_MT)
theme_set(theme_bw())
Pl_base <- ggplot(myt2, aes(x = freq_MT, y = str)) + scale_fill_gradient(low = "yellow", high = "red") + guides(fill = "none") + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure") + facet_wrap(~Subset)
# + geom_density2d()
Pl_base + geom_point(aes(fill = ind), shape = 21)
# Chunk 3
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01))
# Chunk 4
Pl_base + geom_point(aes(fill = ind), shape = 21, position = position_jitter(width = 0.01))
mod_gam <- gam(ind ~ s(str, freq_MT, by = Subset) + Subset, data = myt2, family = "binomial")
summary(mod_gam)
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20) + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
mod_gam <- gam(ind ~ s(str, freq_MT, by = Subset, bs = "tp") + Subset, data = myt2, family = "binomial")
summary(mod_gam)
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
mod_gam <- gam(ind ~ s(str, freq_MT, by = Subset, bs = "tp", k = 10) + Subset, data = myt2, family = "binomial")
summary(mod_gam)
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
mod_gam <- gam(ind ~ s(str, freq_MT, by = Subset, bs = "tp", k = 30) + Subset, data = myt2, family = "binomial")
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
mod_gam <- gam(ind ~ s(str, freq_MT, by = Subset, bs = "tp", k = 10) + Subset, data = myt2, family = "binomial")
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 100)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), by = 0.05)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 100), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), by = 0.10)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = seq(min(.$str), max(.$str), by = 0.1), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), by = 0.10)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = 0, 1, by = 0.1), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), by = 0.10)))
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = seq(0, 1, by = 0.05), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), by = 0.10)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = seq(0, 1, by = 0.1), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), by = 0.1)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = seq(0, 1, by = 0.1), freq_MT = seq(min(.$freq_MT), max(.$freq_MT) + 0.1, by = 0.1)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "black") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
mod_gam <- gam(ind ~ s(str, freq_MT, by = Subset, bs = "tp") + Subset, data = myt2, family = "binomial")
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = seq(0, 1, by = 0.1), freq_MT = seq(min(.$freq_MT), max(.$freq_MT) + 0.1, by = 0.1)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
mod_gam <- gam(ind ~ s(str, freq_MT, by = Subset, bs = "tp", k = 15) + Subset, data = myt2, family = "binomial")
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = seq(0, 1, by = 0.1), freq_MT = seq(min(.$freq_MT), max(.$freq_MT) + 0.1, by = 0.1)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
mod_gam <- gam(ind ~ s(str, freq_MT, by = Subset, bs = "tp", k = 10) + Subset, data = myt2, family = "binomial")
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = seq(0, 1, by = 0.1), freq_MT = seq(min(.$freq_MT), max(.$freq_MT) + 0.1, by = 0.1)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data,type = "response" )
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset, ncol = 1) + scale_fill_gradient(low = "yellow", high = "red") + geom_density2d(data = myt2, n = 20)  + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset, ncol = 1) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
ggplot(new_data, aes(x = freq_MT, y = str)) + geom_raster(aes(fill = Predict_gam)) + facet_wrap(~Subset, ncol = 1) + scale_fill_gradient(low = "yellow", high = "red") + geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21, alpha = 0.2) + theme_bw() + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure", fill = "Вероятность \n встретить Т-морфотип")
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, cache = TRUE, warning = FALSE, message = FALSE)
library(knitr)
# Chunk 2
library(lme4)
library(ggplot2)
library(reshape2)
library(sjstats)
library(dplyr)
library(car)
library(doBy)
library(pROC)
library(betareg)
library(lmtest)
library(broom)
library(mgcv)
theme_set(theme_bw())
myt <- read.table("data_salinity3.csv", header = T, sep = ",")
#
# myt_overseas <- myt[myt$dataset == "overseas", ]
#
# myt <- myt[myt$dataset != "overseas", ]
# str(myt)
myt$Sp [myt$str > 0.5] <- "M.trossulus" #Лучше обозначать так!
myt$Sp [myt$str <= 0.5] <- "M.edulis"
myt$Sp <- factor(myt$Sp)
# Оставляем только мидий, у которых есть оценка морфотипа
myt2_all <- myt[!is.na(myt$ind), ]
### Объединяем популяции в данных Сары #####
# myt2_all$pop2 <- myt2_all$pop
#
# myt2_all$pop[myt2_all$pop %in% c("CBCP", "CBSC")] <- "CB"
#
# myt2_all$pop[myt2_all$pop %in% c("MDRE",   "MDRW")] <- "MDR"
# Подразделяем данные на сабсеты
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "barents" & myt2_all$sal_place == "normal"] <- "BH"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "normal"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "white" & myt2_all$sal_place == "fresh"] <- "WSBL"
myt2_all$Subset[myt2_all$sea == "Baltic"] <- "BALT"
myt2_all$Subset[myt2_all$sea == "GOM"] <- "GOM"
myt2_all$Subset[myt2_all$sea == "Norway"] <- "NORW"
myt2_all$Subset[myt2_all$sea == "Scotland"] <- "SCOT"
myt2_all$Subset <- factor(myt2_all$Subset, levels = c("WSBL", "BH", "NORW", "BALT", "SCOT", "GOM" ))
myt2_all$morph <- ifelse(myt2_all$ind == 1, "T_m", "E_m")
myt2_all$morph <- factor(myt2_all$morph)
# Бинарное обозначение видов
myt2_all$Sp2 <- ifelse(myt2_all$Sp == "M.trossulus", 1, 0)
#Correct identification
myt2_all$congr <- ifelse((myt2_all$ind == 1 & myt2_all$Sp == "M.trossulus") | (myt2_all$ind == 0 & myt2_all$Sp == "M.edulis"), 1, 0   )
myt2 <- myt2_all %>% filter(Subset %in% c("WSBL", "BH", "BALT", "GOM"))
# Вводим обозначения для морфотипов
# Частота M.trossulus в популяции, вычисленная как срденее значение structure
freq_MT <- summaryBy( str ~ pop, data = myt2)
names(freq_MT) <- c("pop", "freq_MT")
myt2 <- merge(myt2, freq_MT)
theme_set(theme_bw())
Pl_base <- ggplot(myt2, aes(x = freq_MT, y = str)) + scale_fill_gradient(low = "yellow", high = "red") + guides(fill = "none") + labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure") + facet_wrap(~Subset)
# + geom_density2d()
# Pl_base + geom_point(aes(fill = ind), shape = 21)
# Chunk 3
mod_gam <- gam(ind ~ s(str, freq_MT, by = Subset, bs = "tp", k = 10) + Subset, data = myt2, family = "binomial")
# summary(mod_gam)
# Chunk 4
myt2_WSBL <- myt2 %>% filter(Subset == "WSBL")
myt2_BH <- myt2 %>% filter(Subset == "BH")
myt2_BALT <- myt2 %>% filter(Subset == "BALT")
myt2_GOM <- myt2 %>% filter(Subset == "GOM")
new_data <-  myt2 %>% group_by(Subset) %>% do(expand.grid(str = seq(min(.$str), max(.$str), length.out = 20), freq_MT = seq(min(.$freq_MT), max(.$freq_MT), length.out = 20)))
new_data$Predict_gam <- predict(mod_gam, newdata = new_data, type = "response" )
Pl_mod_gam <-
ggplot(new_data, aes(x = freq_MT, y = str)) +
geom_raster(aes(fill = Predict_gam)) +
facet_wrap(~Subset, ncol = 1) +
scale_fill_gradient(low = "cornflowerblue", high = "red") +
theme_bw() +
labs(x = "Prevalence (proportion of M.trossulus)", y = "Structure score", fill = "Probability of\nТ-morphotype \npresence") +
geom_density_2d(data = myt2_WSBL, color = "white")+
geom_density_2d(data = myt2_BH, color = "white")+
geom_density_2d(data = myt2_BALT, color = "white")+
geom_density_2d(data = myt2_GOM, color = "white", n = 5) +
theme(panel.grid = element_blank())+
geom_point(data = myt2, aes(fill = ind), position = position_jitter(width = 0.01), shape = 21, size = 1) +
theme(legend.position = "left")
# Chunk 5
prop_T <- myt2 %>%  mutate(str_class = ntile(str, 5)) %>% group_by(Subset, str_class) %>% summarise(str_mean = mean(str), Prop_T = mean(ind))
Pl_hist <-
ggplot(myt2, aes(x = str)) +
geom_histogram(binwidth = 0.1, color = "black", aes(fill = morph)) +
facet_wrap(~Subset, ncol = 1, scales = "free_y") +
scale_fill_manual(values = c("cornflowerblue", "red" )) +
theme_bw() +
theme(panel.grid = element_blank()) +
guides(fill = "none") +
labs(x = "Structure score", y = "Count")+ coord_flip()
# +
#   geom_point(data = prop_T, aes(x = str_mean, y = Prop_T))
Pl_hist_2 <-
ggplot(myt2_all[myt2_all$Subset %in% c("NORW", "SCOT"), ], aes(x = str)) +
geom_histogram(binwidth = 0.1, color = "black", aes(fill = morph)) +
facet_wrap(~Subset, ncol = 1, scales = "free_y") +
scale_fill_manual(values = c("cornflowerblue", "red" )) +
theme_bw() +
theme(panel.grid = element_blank()) +
guides(fill = "none") +
labs(x = "Structure score", y = "Count") + coord_flip()
Pl_hist_3 <- ggplot(myt2_all[myt2_all$Subset %in% c("NORW", "SCOT"), ], aes(x = str)) + facet_wrap( ~ Subset, ncol = 1) + geom_blank() + theme(strip.background = element_blank(), panel.border = element_blank(), axis.text = element_blank(), strip.text = element_blank(), axis.ticks = element_blank(), panel.grid = element_blank(), axis.title = element_blank())
# plot_grid(Pl_hist_3, Pl_hist_2, rel_widths = c(2, 1))
library(cowplot)
library(patchwork)
plot_grid(Pl_mod_gam, Pl_hist_3, Pl_hist, Pl_hist_2, ncol = 2, labels = c("a", "b"), rel_widths = c(2, 1))
