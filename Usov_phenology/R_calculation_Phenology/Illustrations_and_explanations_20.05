---
title: "Иллюстрации к статье"
author: "Вадим Хайтов"
date:
output: html_document
---

```{r setup, include=FALSE }
library(knitr)
opts_chunk$set(echo = FALSE, cache = TRUE, message = FALSE, warning = FALSE) 
library(ggplot2)
theme_set(theme_bw())
```

<style type="text/css">

body{ /* Normal  */
      font-size: 18px;
  }
td {  /* Table  */
  font-size: 10px;
}
h1.title {
  font-size: 38px;
  color: DarkRed;
}
h1 { /* Header 1 */
  font-size: 28px;
  color: DarkBlue;
}
h2 { /* Header 2 */
    font-size: 22px;
  color: DarkBlue;
}
h3 { /* Header 3 */
  font-size: 18px;
  font-family: "Times New Roman", Times, serif;
  color: DarkBlue;
}
code.r{ /* Code block */
    font-size: 12px;
}
pre { /* Code block - determines code spacing between lines */
    font-size: 14px;
}
</style>

```{r}
library(ggplot2)

library(dplyr)

library(reshape2)

library(vegan)

theme_set(theme_bw())

# library(cowplot)

library(gridExtra)



# первичные фенологические данные

phen_acartia <- read.csv("data/Phenological_tables/Acartia_phenology.csv", header = TRUE)

phen_calanus <- read.csv("data/Phenological_tables/Calanus_phenology.csv", header = TRUE)

phen_centropages <- read.csv("data/Phenological_tables/Centropages_phenology.csv", header = TRUE)

phen_microsetella <- read.csv("data/Phenological_tables/Microsetella_phenology.csv", header = TRUE)

phen_oithona <- read.csv("data/Phenological_tables/Oithona_phenology.csv", header = TRUE)

phen_pseudocalanus <- read.csv("data/Phenological_tables/Pseudocalanus_phenology.csv", header = TRUE)

phen_temora <- read.csv("data/Phenological_tables/Temora_phenology.csv", header = TRUE)

# phen_triconia <- read.csv("data/Phenological_tables/Triconia_phenology.csv", header = TRUE)


year_exclude <- c(1961, 1962)

phen_all <- rbind(phen_acartia, phen_calanus, phen_centropages, phen_microsetella,phen_oithona, phen_pseudocalanus,  phen_temora)


phen_all <- phen_all[!(phen_all$Year %in% year_exclude), ]


median_peak <- phen_all %>% group_by(Species) %>% summarise(Median_peak = median(Days_perc_50))


phen_all$Species <- factor(phen_all$Species, levels = median_peak$Species[order(median_peak$Median_peak)], ordered = TRUE)

# Новые имена для переменных

names(phen_all) <- c("Year", "Begin", "Middle", "End", "Peak", "Species")

# phen_all <- phen_all[phen_all$Species != "Triconia", ]
```




```{r}

Abundance <- read.csv("data/abundance.csv", header = TRUE) # Данные по обилию видов, усреденнные по всему столбу воды за март-сентябрь.

env <- read.csv("data/env_gap_filled_short.csv", header = TRUE)  #Данные по средовым показателям



```

## Рисунок с датами ключевых событий


```{r}
phen_all$Species <- factor(phen_all$Species, levels = c("Pseudocalanus", "Calanus", "Microsetella", "Oithona",  "Centropages", "Acartia", "Temora"))


phen_all_melt <- melt(phen_all, id.vars = c("Species", "Year"), variable.name = "Event", value.name = "Julian")

phen_all_melt$Event <-factor(phen_all_melt$Event, levels = c("Begin", "Middle", "Peak", "End")) 

# Pl_begin <- ggplot(phen_all, aes(x = Species, y = Begin)) + geom_boxplot() + ggtitle("The date of  start") + labs(x = "Species", y = "Julian day") + theme(axis.text.x = element_text(angle = 90)) + ylim(50, 350)
# 
# # Pl_peak <- ggplot(phen_all, aes(x = Species, y = Peak)) + geom_boxplot() + ggtitle("The date of abundance peak") + labs(x = "Species", y = "") + theme(axis.text.x = element_text(angle = 90))+ ylim(50, 350)
# 
# 
# 
# Pl_middle <-  ggplot(phen_all, aes(x = Species, y = Middle)) + geom_boxplot() + ggtitle("The date of  middle") + theme(axis.text.x = element_text(angle = 90)) + ylim(50, 350)
# 
# 
# 
# Pl_end <-  ggplot(phen_all, aes(x = Species, y = End)) + geom_boxplot() + ggtitle("The date of  end") + theme(axis.text.x = element_text(angle = 90)) + ylim(50, 350)

# 
# 
# ggplot(phen_all, aes(x = Species, y = End)) + geom_boxplot() + ggtitle("Дата окончания")

# plot_grid(Pl_begin, Pl_peak, ncol = 2)

# grid.arrange(Pl_begin, Pl_middle, Pl_end, ncol = 3)


ggplot(phen_all_melt, aes(x = Species, y = Julian, fill = Event)) + geom_boxplot() + labs(x = "Species", y = "Julian day") + theme(axis.text.x = element_text(angle = 90)) + ylim(50, 365) + scale_fill_manual(values = c("white", "gray90", "gray70", "gray50"))

```

Так, мне кажется, лучше смотрится.


## Риcунок с датами "климатических" событий 


```{r}

column_name <- c("Year", "TPD", "SpSD", "SuSD", "SuFD", "ICD", "SuSDPY", "SuDurPY", "SuFDPY",     "SpT", "SuT", "SpTPY", "SuTPY", "NAO", "NAOPY", "AOI", "AOIPY"  )

names(env) <- column_name 
env_print <- env

env_print[ , which(names(env) %in% c("TPD", "SpSD", "SuSD", "SuFD", "ICD", "SuSDPY", "SuDurPY", "SuFDPY"))] <- round(env_print[ , which(names(env) %in% c("TPD", "SpSD", "SuSD", "SuFD", "ICD", "SuSDPY", "SuDurPY", "SuFDPY"))], 0)

env_print[ , which(names(env) %in% c("SpT", "SuT", "SpTPY", "SuTPY"))] <- round(env_print[ , which(names(env) %in% c("SpT", "SuT", "SpTPY", "SuTPY"))], 1)

env_print[ , which(names(env) %in% c("NAO", "NAOPY"))] <- round(env_print[ , which(names(env) %in% c("NAO", "NAOPY"))], 3)


env_print_short <- env_print[ , which(names(env) %in% c("TPD", "SpSD", "SuSD", "SuFD", "ICD"))]


env_print_short_melt <- melt(env_print_short, variable.name = "Event", value.name = "Day")

env_print_short_melt$Event <- factor(env_print_short_melt$Event, levels = c("ICD","SpSD", "SuSD", "TPD", "SuFD" ))

Env_plot1 <- ggplot(env_print_short_melt, aes(x = Event, y = Day)) + geom_boxplot() + ylim(0, 365) + labs(x = "Fenological event", "Julian day") + ggtitle("Date of fenological events")


Env_plot1


```

Обозначения:

- ICD -- Ice clear date     
- SpSD -- Spring start date (the day when the water temperature overcomes 3 Celsium degrees)     
- SuSD -- Summer start date (the day when the water temperature overcomes 5 Celsium degrees)     
- TPD -- The date when the highest water temperaure was observed. 
- SuFD -- The date of summer finnish  


## Многолетние изменения фенологических показателей и обилия видов.


```{r}

phen_all_melt_short <- phen_all_melt[phen_all_melt$Event %in% c("Begin", "End"),]

Pl_phen <- ggplot(phen_all_melt_short, aes(x = Year, y = Julian)) + geom_point(color = "gray") + facet_grid(Species ~ Event) + ylim(0, 365) + geom_smooth(method = "lm", se = FALSE) + scale_x_continuous(breaks = seq(min(phen_all$Year), max(phen_all$Year), 10)) + theme(axis.text.x = element_text(angle = 90)) + labs(y = "Julian day")  +  theme(strip.text = element_blank()) 





# Строим Графики динамики численности 

Abundance_melt <- melt(Abundance, id.vars = "Year", variable.name = "Species", value.name = "N")
Abundance_melt$Species <- gsub("_N", "", Abundance_melt[, 2]) 



Abundance_melt$Species <- factor(Abundance_melt$Species, levels = c("Pseudocalanus", "Calanus", "Microsetella", "Oithona",  "Centropages", "Acartia", "Temora"))


# Abundance_melt$Log_N <- log(Abundance_melt$N)

Abundance_melt <- Abundance_melt[Abundance_melt$Year %in% 1963:2018, ]

Pl_abund <- ggplot(Abundance_melt, aes(x = Year, y = N)) + geom_line() + geom_smooth(method = "lm", se = FALSE) + facet_grid(Species ~ ., scales = "free_y")   + labs(y = "N") + scale_x_continuous(breaks = seq(min(phen_all$Year), max(phen_all$Year), 10)) + theme(axis.text.x = element_text(angle = 90)) +  theme(strip.text = element_text(size = 5), strip.background.y = element_blank()) + theme(aspect.ratio = 0.4) + labs(y = "Abundance")





# Вычисляем парамтеры линейных моделей для связи дат ключевых показателей с годом

fitted_models_Begin = phen_all %>% group_by(Species) %>% do(model = lm(Begin ~ Year, data = .))
fitted_models_Peak = phen_all %>% group_by(Species) %>% do(model = lm(Peak ~ Year, data = .))
fitted_models_Meadle = phen_all %>% group_by(Species) %>% do(model = lm(Middle ~ Year, data = .))
fitted_models_End = phen_all %>% group_by(Species) %>% do(model = lm(End ~ Year, data = .))

fitted_models_Abund = Abundance_melt%>% group_by(Species) %>% do(model = lm(N ~ Year, data = .))



library(broom)
theme_set(theme_bw())

model_print_Begin <- fitted_models_Begin %>% tidy(model)
model_print_Peak <- fitted_models_Peak %>% tidy(model)
model_print_Meadle <- fitted_models_Meadle %>% tidy(model)
model_print_End <- fitted_models_End %>% tidy(model)


model_print_Abund <- fitted_models_Abund %>% tidy(model)



model_print_short_Begin <- model_print_Begin[model_print_Begin$term == "Year", c(1,3)]
model_print_short_Peak <- model_print_Peak[model_print_Peak$term == "Year", c(1,3)]
model_print_short_Meadle <- model_print_Meadle[model_print_Meadle$term == "Year", c(1,3)]
model_print_short_End <- model_print_End[model_print_End$term == "Year", c(1,3)]

model_print_short_Abund <- model_print_Abund[model_print_Abund$term == "Year", c(1,3)]

# Создаем датафрем с угловыми коэффициентми для регрессии дат начала и дат конца vs Year


model_print_short_Begin$Event <- "Begin"
model_print_short_End$Event <- "End"

slopes_event <- rbind(model_print_short_Begin, model_print_short_End)
slopes_event$estimate <- formatC(round(slopes_event$estimate, 2), digits = 2, format = "f")

slopes_Abund <-  model_print_short_Abund
slopes_Abund$estimate <- formatC (round(slopes_Abund$estimate, 1), digits = 2, format = "f")



#Оценка статистической значимости с помощью мантеловской корреляции

years <- 1963:2018
trend_dist <- dist(years)



p_values_Begin <- phen_all[,c("Species","Begin")] %>% group_by(Species) %>% do(data.frame (Mantel_P_value = formatC(round(mantel(dist(x =.), trend_dist,  permutations = 9999)$signif, 3), digits = 3, format = "f")))

p_values_Begin$Event = "Begin"

p_values_End <- phen_all[,c("Species","End")] %>% group_by(Species) %>% do(data.frame (Mantel_P_value = formatC(round(mantel(dist(x =.), trend_dist,  permutations = 9999)$signif, 3), digits = 3, format = "f")))

p_values_End$Event = "End"

p_values_event <- rbind(p_values_Begin, p_values_End) 

# Вводим поправку  Benjamini & Hochberg (1995) для множественных сравнений

p_values_event$Mantel_P_value_adj [p_values_event$Event == "Begin"] <- round(p.adjust(p_values_event$Mantel_P_value [p_values_event$Event == "Begin"], method = "BH"), 3)

p_values_event$Mantel_P_value_adj [p_values_event$Event == "End"] <- round(p.adjust(p_values_event$Mantel_P_value [p_values_event$Event == "End"], method = "BH"), 3)



slopes_event <- merge(slopes_event, p_values_event, by = c("Species", "Event"))

slopes_event$label <- with(slopes_event, paste(estimate, ", p = ", Mantel_P_value_adj, sep = ""))




p_values_Abund <- Abundance_melt[,c("Species","N")] %>% group_by(Species) %>% do(data.frame (Mantel_P_value = formatC(round(mantel(dist(x =.), trend_dist,  permutations = 9999)$signif, 3), digits=3, format = "f")))


slopes_Abund2 <- merge(slopes_Abund, p_values_Abund)

slopes_Abund2$Mantel_P_value_adj <- round(p.adjust(slopes_Abund2$Mantel_P_value, method = "BH"), 3)


slopes_Abund2$label <- with(slopes_Abund2, paste(estimate, ", p = ", Mantel_P_value_adj, sep = ""))


Y <- Abundance_melt %>% group_by(Species) %>% summarise(max = max(N))

slopes_Abund3 <- merge(slopes_Abund2, Y, by = "Species") 

slopes_Abund3$Species <- factor(slopes_Abund3$Species, levels = c("Pseudocalanus", "Calanus", "Microsetella", "Oithona",  "Centropages", "Acartia", "Temora"))




# Комбинируем рисунки на одну панель

Pl_phen2 <- Pl_phen + geom_text(data = slopes_event, aes(label = label, x = 1963, y = 365), size = 2, hjust = "inward")

Pl_abund2 <- Pl_abund + geom_text(data = slopes_Abund3, aes(label = label, x = 1963, y = max + 0.05*max), size = 2, hjust = "inward")





library(ggpubr)
figure <- ggarrange(Pl_phen2, Pl_abund2, ncol = 2,  align = "h",  widths = c(1.7, 1), labels = c("A", "B"))
# annotate_figure(figure, top = text_grob(label = c("The date of begin and end of presence in samples"), hjust = c(0, 0)))

# grid.arrange(Pl_phen, Pl_abund, ncol = 2)

figure
```

<!-- ```{r} -->
<!-- ggplot(phen_all, aes(x = Year, y = Middle)) + geom_point(color = "gray") + facet_wrap( ~ Species, scales = "free_y", ncol = 4) + geom_smooth(method = "lm", se = FALSE, color = "black") + scale_x_continuous(breaks = seq(min(phen_all$Year), max(phen_all$Year), 10)) + theme(axis.text.x = element_text(angle = 90)) + ggtitle("The date of middle") + labs(y = "Julian day") -->
<!-- ``` -->



<!-- ```{r} -->
<!-- ggplot(phen_all, aes(x = Year, y = End)) + geom_point(color = "gray") + facet_wrap( ~ Species, scales = "free_y", ncol = 4) + geom_smooth(method = "lm", se = FALSE, color = "black") + scale_x_continuous(breaks = seq(min(phen_all$Year), max(phen_all$Year), 10)) + theme(axis.text.x = element_text(angle = 90)) + ggtitle("The date of end") + labs(y = "Julian day") -->
<!-- ``` -->


<!-- Подумайте, может этот рисунок пустить в параллель с динамикой обилия. То есть одна колонка -- это динамика одного какого-то фенологического показателя (например, начала), а вторая колнка -- это динамика обилия. Таку картинку сделать очень просто.  -->

<!-- Для опсания же многолетних трендов каждого из фенологических показателей можно рпивести следующу таблицу, содержащую угловые коэффициенты линейных моделей, описывающих изменение даты ключевых событий в зависимости от года. -->

<!-- **Важно!** Поскольку данные временные, то неизбежна проблема автокрреляции остатков. Поэтому оценка достоверности происходит с помощью теста Матела. Но! Для этого анализа берется не каждый отдельно фенологический показатель, а полная фенологическая матрица, которая сравнивается с градиентной модельной матрицей. То есть, дается оценка статистической значимости наличия тренда во всей феноологической матрице. Так, по-моему, корректнее, хотя и сложно для объяснения. -->

Таблицу, впрчем, можно оставить тоже. В ней самое ценное - это оценка значимости тренда во всей фенологческой матрце в целом. Может, действительно, ну ее эту таблицу и оставить тлько рсунок, который верху.


```{r}





model_print_short_all = data.frame(Species = model_print_short_Begin$Species,
           Slope_Begin = model_print_short_Begin$estimate,
           Slope_Peak = model_print_short_Peak$estimate,
           Slope_Meadle = model_print_short_Meadle$estimate,
           Slope_End = model_print_short_End$estimate)

model_print_short_all[, 2:5] <- round(model_print_short_all[, 2:5], 2)


# Оценка статистической значимости


mantel_trend <- function(df){
years <- 1963:2018
trend_dist <- dist(years)
df <- df[,2:5]
dist_df <- dist(df)
mantel_test <- mantel(dist_df, trend_dist, permutations = 9999)
p_value <- mantel_test$signif
p_value
}

p_values <- phen_all %>% group_by(Species) %>% do(data.frame (Mantel_P_value = mantel_trend(df =.)))

model_print_short_all$Mantel_p <- p_values$Mantel_P_value


options(knitr.kable.NA = '')


kable(model_print_short_all, caption = "Slope terms of linear models fitted and Mantel test p-value for comaprison of phenologiacal matrix of each species with gradient model-matrix")
```




## Факторы, определяющие сдвиги в фенологии сообщества копепод

```{r}

phen_melt <- melt(phen_all, id.vars = c("Year", "Species"))

phenol <- dcast(phen_melt, formula = Year ~ Species  + variable, value.var = "value" ) 

log_abundance <- log(Abundance[!(Abundance$Year %in% year_exclude),-1])

env2 <- env[!(env$Year %in% year_exclude), -1 ]

```



### Результаты ССА 

Здесь все без изменений

```{r}

env_abund <- cbind(env2, log_abundance)


row.names(phenol) <- phenol$Year  


phen_cca_0 <- cca(phenol[, -1] ~ 1, data =  env_abund)

phen_cca <- cca(phenol[, -1] ~ ., data =  env_abund)

phen_cca_reduced <- ordistep(phen_cca, trace = FALSE, direction = "backward", scope = formula(phen_cca_0), permutations = how(nperm = 9999))


```


```{r}
Total_inertia <- summary(phen_cca_reduced)$ tot.chi
Constr_inertia <- summary(phen_cca_reduced)$constr.chi
Unconstr_inertia <- summary(phen_cca_reduced)$unconst.chi

constr_proporion <- Constr_inertia/Total_inertia

CCA1_importance <- summary(phen_cca_reduced)$cont$ importance [2, 1]
CCA2_importance <- summary(phen_cca_reduced)$cont$ importance [2, 2]


```

Полученная модель (при учете всех канонических корреспондентных осей)  объясняет `r round(constr_proporion*100, 1)`% суммарной изменчивости. При этом на первую и вторую оси приходится `r round(CCA1_importance*100, 1)` и `r round(CCA2_importance*100, 1)`% соответственно (то есть приведенная на рисунке ординация отражает `r round(CCA1_importance*100 + CCA2_importance*100, 1)`% общей изменчивости.





### Оценка значимости модели


```{r}
anova_phen_cca_reduced <- tidy(anova(phen_cca_reduced, permutations = 9999))

anova_phen_cca_reduced_axis <- tidy(anova(phen_cca_reduced, by = "axis", permutations = 9999))

anova_phen_cca_reduced_margin <- tidy(anova(phen_cca_reduced, by = "margin", permutations = 9999))

kable(anova_phen_cca_reduced, caption = "Permutation significance test of the CCA model")

kable(anova_phen_cca_reduced, caption = "Permutation significance test of CCA constrained axis")

kable(anova_phen_cca_reduced_margin, caption = "Permutation significance test of each terms included in the CCA model")


```




### Картинка, визуализирующая модель ССА

```{r}
# phen_cca_reduced <- cca(phenol[, -1] ~ Su_start + Su_start_1 + Su_duration_1 + N_Acartia + N_Calanus+ N_Microsetella + N_Oithona , data = env_abund)


# plot(phen_cca_reduced, scaling = "sites")



library(ggvegan)
library(ggrepel)
theme_set(theme_bw())

gg_phen_cca_reduced <- fortify(phen_cca_reduced, scaling = "symmetric")



points <- data.frame(Label = gg_phen_cca_reduced[gg_phen_cca_reduced$Score == "species",  ]$Label)

points$Num <- 1:nrow(points)

points$CCA1 <- gg_phen_cca_reduced[gg_phen_cca_reduced$Score == "species",  ]$CCA1
points$CCA2 <- gg_phen_cca_reduced[gg_phen_cca_reduced$Score == "species",  ]$CCA2

q_cca1 <- quantile(points$CCA1, probs = c(0.25, 0.75)) #границы квартилей

q_cca2 <- quantile(points$CCA2, probs = c(0.25, 0.75)) #границы квартилей

points$CCA_quart <- ifelse(points$CCA1 <= q_cca1[1] | points$CCA1 >= q_cca1[2] | points$CCA2 <= q_cca2[1]|points$CCA2 >= q_cca2[2], "high", "low")

points$CCA_quart_num <- ifelse(points$CCA1 <= q_cca1[1]|points$CCA1 >= q_cca1[2]|points$CCA2 <= q_cca2[1]|points$CCA2 >= q_cca2[2], points$Num, NA)




ggplot(gg_phen_cca_reduced[gg_phen_cca_reduced$Score == "species", ],  aes(x = CCA1, y = CCA2))  +
   geom_point(shape = 21, fill = "yellow", aes(size = points$CCA_quart)) + scale_size_manual(values = c(5, 1)) + 
  geom_segment(data = gg_phen_cca_reduced[gg_phen_cca_reduced$Score == "biplot",  ], aes(x = 0, y = 0, xend = CCA1, yend = CCA2), arrow = arrow(type = "closed", length = unit(0.02, "native")), size = 0.5, color = "blue") +
  geom_text_repel(data = gg_phen_cca_reduced[gg_phen_cca_reduced$Score == "biplot",  ], aes(x =  CCA1, y = CCA2, label = Label), size = 4) +
  geom_text_repel (aes(label = points$CCA_quart_num), size = 3, min.segment.length = 1) +
     labs(x = "CCA1", y = "СCA2") + guides(size = "none")




```




<!-- ```{r, fig.align='center'} -->

<!-- Pl <- autoplot(phen_cca_reduced, layers = c("species", "biplot"))  -->


<!-- Pl + geom_point(data = points, aes(x = CCA1, y = CCA2, size = CCA1_quart), color = "gray", alpha = 0.8) + geom_point(data = points, aes(x = CCA1, y = CCA2, size = CCA2_quart), color = "gray", alpha = 0.8) + scale_size_manual(values = c(4, 1)) + geom_text_repel(data = points, aes(x =  CCA1, y = CCA2, label = points$CCA_quart_num), size = 3) + theme(legend.position = "bottom")  -->


<!-- Pl + geom_text_repel(data = points, aes(x =  CCA1, y = CCA2, label = points$CCA_quart_num), size = 3) + theme(legend.position = "bottom")  -->


<!-- Pl + geom_text_repel(data = gg_phen_cca_reduced[gg_phen_cca_reduced$Score == "species",  ], aes(x =  CCA1, y = CCA2, label = points$Num), size = 3) + theme(legend.position = "bottom")  -->

<!-- ``` -->



Обозначения фенологических характеристик приведены в следующей таблице.



```{r}

points_print <- points[!is.na(points$CCA_quart_num), ]

points_print_out <-  data.frame(Label = points_print$Label[1:14], Num = points_print$Num[1:14], Label = points_print$Label[15:28], Num = points_print$Num[15:28])

kable(points_print_out, col.names = rep(c("Phenological Event", "Label"), 2), align = "rcrc")

```

## Многолетние изенения факторов, значимых для фенологии (вошедших в финальную модель)

Коллеги, может, чтобы не ломать голову, дать в приложении все данные по факторам в виде вот такой таблицы.



```{r}

kable(env_print, caption = "Vlues of environmental parameters included in the analysis. JD - Julian days; CD - Celsius degree", col.names = column_name, format = "pandoc")
```

А после таблицы дать все графики разом и из текста статьи сослаться на электронное приложение, где будут даны графики. В принципе, можно дать  эти графики и в теле статьи.

```{r}

env_print_melt <- melt(env_print, id.vars = "Year", variable.name = "Parameter" )

theme_set(theme_bw())

ggplot(env_print_melt, aes(x = Year, y = value)) + geom_point(color = "gray") + geom_smooth(method = "lm", se = FALSE) + facet_wrap(~ Parameter, ncol = 3, scales = "free_y") + theme(strip.text = element_text(size = 5))




# Pl_t3 <- ggplot(env, aes(x = Year, y = t_3)) + geom_point() + geom_smooth(method = "lm", se = FALSE) + labs(y="Julian day") + ggtitle("Spring beginning \ndate")

# Pl_Ice_clear_G <- ggplot(env, aes(x = Year, y = Ice_clear_G)) + geom_point() + geom_smooth(method = "lm", se = FALSE) + labs(y="Julian day") + ggtitle("Ice melting \ndate")
# 
# Pl_Su_end_1 <- ggplot(env, aes(x = Year, y = Su_end_1)) + geom_point() + geom_smooth(method = "lm", se = FALSE)+ labs(y="Julian day") + ggtitle("Summer end date \nin the previous year")
# 
# 
# library(gridExtra)
# 
# grid.arrange(Pl_t3, Pl_Ice_clear_G, Pl_Su_end_1, ncol=3)

```

<!-- Мне кажется, что не стоит убирать "Summer end date for the previus year". Все-таки это значимый предктор.  -->

<!-- А вот что, на мой взгляд, правильно было бы сделать, так это рисовать это графики не в виде точечной диаграммы, а вот как-то так. Это все-таки, процесс. -->


<!-- ```{r} -->

<!-- grid.arrange(Pl_t3 + geom_line(), Pl_Ice_clear_G+ geom_line(), Pl_Su_end_1+ geom_line(), ncol=3) -->

<!-- ``` -->




<!-- ## Зависимость обилия видов от параметров среды -->

<!-- ```{r} -->

<!-- abund_cca_0 <- cca(log_abundance ~ 1, data =  env[-c(1:2),-1]) -->

<!-- abund_cca <- cca(log_abundance ~ ., data =  env[-c(1:2),-1]) -->


<!-- abund_cca_reduced <- ordistep(abund_cca, trace = FALSE, direction = "backward", scope = formula(abund_cca_0), permutations = how(nperm = 9999)) -->
<!-- #  -->
<!-- # anova(abund_cca_reduced) -->
<!-- #  -->
<!-- # anova(abund_cca_reduced, by = "axis") -->
<!-- #  -->
<!-- # anova(abund_cca_reduced, by = "margin") -->

<!-- # autoplot(abund_cca_reduced, layers = c("species", "biplot")) -->

<!-- plot(abund_cca_reduced, scaling =  "symmetric", display = c("sp", "bp")) -->

<!-- ``` -->

<!-- Из этой картинки мы вытянем связь обилия со средовыми показателями, но не с фенологией каждого вида. Связь обилия данного вида с его фенологией придется анализировать отдельно.  -->

<!-- Важно, наверное, в этой картинке только то, что обилиле от средовых показателей зависит сильно только у Microstella, Temora и Centropages. Именно у этих видов и выявляется связь с фенологией (См. ниже). -->









<!-- ## Многолетняя динамика обилия видов  и ее связь с фенологическими показателями -->

<!-- С этой картинкой есть несколько проблем. -->
<!-- Ее, конечно, лучше изображать не в виде точечного графика, а в виде обычного графика значений средних. На него можно нанести аппроксимацию  loess-овской   регрессией, которая сглаживает имеющиеся графики. Я это переделал на первом рисунке.  Но эта линия вообще-то не о чем. Если хочется вытаскивать какие-то тренды, то надо делать SSA (ну или что-то другое подобное). Так ли это нужно? В принципе, это интересно - разложить динамику на составляющие. Однако это потребует в статье довольно много всего еще (может это лучше оставить на отдельную статью?). -->

<!-- ```{r} -->
<!-- Abundance_melt <- melt(Abundance, id.vars = "Year") -->
<!-- Abundance_melt$variable <- gsub("_N", "", Abundance_melt[, 2])  -->
<!-- names(Abundance_melt)[2] <- "Species" -->
<!-- Abundance_melt$Species <- factor(Abundance_melt$Species, levels = c("Pseudocalanus", "Calanus", "Microsetella", "Oithona",  "Centropages", "Acartia", "Temora")) -->

<!-- Abundance_melt$Log_N <- log(Abundance_melt$value) -->

<!-- Abundance_melt <- Abundance_melt[Abundance_melt$Year %in% 1963:2018, ] -->

<!-- ggplot(Abundance_melt, aes(x = Year, y = Log_N)) + geom_line() + facet_wrap(~Species, scales = "free", ncol = 4) + geom_smooth(method = "loess") + xlim(1963, 2018) + labs(y = "log(N)") -->


<!-- ``` -->


<!-- Если хочется просто понять убывает или возрастет численность за 50 лет то надо, на мой взгляд, вписать линейный тренд (т.е. обычную линейную регрессию), но вот только проблемой будет оценка статистической значимости этой регрессионной модели. -->

<!-- Статистическую же значимость линейного тренда оценивать мантеловской корреляцией, как я это предлагал в прошлый раз, можно, но есть проблема: мы не знаем что это за тренд (смешивется межгодовой тренд, как таковой, с трендом, определяющимся многолетними сдвигами фенологии). Здесь, увы, придется делать довольно много непростого анализа. -->



<!-- ### Второй вариант рисунка и анализа для связи численности и фенлогии -->

<!-- Лучше приводить максимально первичную картинку. -->

<!-- ```{r} -->
<!-- ggplot(Abundance_melt, aes(x = Year, y = Log_N)) + geom_line() + facet_wrap(~Species, scales = "free", ncol = 4) + geom_smooth(method = "lm", se = FALSE) + xlim(1963, 2018) + labs(y = "log(N)") -->

<!-- ``` -->
<!-- ```{r} -->

<!-- mantel_trend_2 <- function(df){ -->
<!-- library(vegan) -->
<!-- years <- 1963:2018 -->
<!-- trend_dist <- dist(years) -->
<!-- df2 <- as.data.frame(df[,4]) -->
<!-- dist_df <- dist(df2) -->
<!-- mantel_test <- mantel(dist_df, trend_dist, permutations = 9999) -->
<!-- p_value <- mantel_test$signif  -->
<!-- p_value -->
<!-- } -->


<!-- p_values_abund <- Abundance_melt %>% group_by(Species) %>% do(data.frame (Mantel_P_value = mantel_trend_2(df =.))) -->


<!-- kable(p_values_abund, caption = "Mantel test p-value for comaprison of copepod abundance dynamics with gradient model-matrix") -->
<!-- ``` -->


<!-- Из этих данных следует, что некоторый тренд есть только в динамике Calanus, Microsetella, Acartia и Temora. -->



## Связь обилия вида  и его  фенологических показателей 

Здесь все описанные ранее проблемы не решены. Поэтому оставляю пока все, как было.

----------------------


В качестве фенологического показателя оказывающего влияние на обилие взята дата начала. 

```{r}


theme_set(theme_bw())

Pl_pseudocal <- ggplot(phenol, aes(x = phenol$Pseudocalanus_Begin , y = env_abund$Pseudocalanus_N)) + geom_point() + geom_smooth(method = "lm") + labs(x ="The date of appearence start", y = "log(N)") + ggtitle("Pseudocalanus")

Pl_cal <- ggplot(phenol, aes(x = phenol$Calanus_Begin , y = env_abund$Calanus_N)) + geom_point() + geom_smooth(method = "lm") + labs(x ="The date of appearence start", y = "log(N)") + ggtitle("Calanus")

Pl_micros <- ggplot(phenol, aes(x = phenol$Microsetella_Begin , y = env_abund$Microsetella_N)) + geom_point() + geom_smooth(method = "lm") + labs(x ="The date of appearence start", y = "log(N)") + ggtitle("Microsetella")

Pl_oit <-  ggplot(phenol, aes(x = phenol$Oithona_Begin , y = env_abund$Oithona_N)) + geom_point() + geom_smooth(method = "lm") + labs(x ="The date of appearence start", y = "log(N)") + ggtitle("Oithona")

Pl_centr <- ggplot(phenol, aes(x = phenol$Centropages_Begin , y = env_abund$Centropages_N)) + geom_point() + geom_smooth(method = "lm") + labs(x ="The date of appearence start", y = "log(N)") + ggtitle("Centropages")

Pl_acart <- ggplot(phenol, aes(x = phenol$Acartia_Begin , y = env_abund$Acartia_N)) + geom_point() + geom_smooth(method = "lm") + labs(x ="The date of appearence start", y = "log(N)") + ggtitle("Acartia")


Pl_temor <- ggplot(phenol, aes(x = phenol$Temora_Begin , y = env_abund$Temora_N)) + geom_point() + geom_smooth(method = "lm")  + labs(x ="The date of appearence start", y = "log(N)") + ggtitle("Temora")



grid.arrange(Pl_pseudocal, Pl_cal, Pl_micros, Pl_oit, Pl_centr, Pl_acart,  Pl_temor, ncol = 3)


```


Для оценки значимости связей мешает все та же автокоррелированность данных (и она там много где есть и достаточно высокая, расскжу ниже). На рисунке сверху я нарисовал доверительные интервалы как для обычной регрессии, что неправильно. Приведенный ранее подход, основанный на мантеловской корреляции с градиентной матрицей, здесь не годится. Здесь придется заниматься подбором оптимальной модели, включающей поправку на автокорреляцию. Занятие это не очень простое. 

Для каждого вида придется построить персональную модель, описывающую связь с датой начала появления в планктоне  и годом, но с включением моделирования структуры остатков. 

То есть модель, в общем, будет иметь вот такой вид

$$
Log(N)_s = b_0 + b_1Begin_s + b_2Year_s + \varepsilon_s
$$

Но придется проверить несколько моделей-кандидатов, для которых будут в модель включены несколько разных способов моделирования автокорреляции остатков (несколько разных автокорреляционных функций). Подробнее про это можно прочитать у Zuur et al, 2009 (chapter 6.1), там разбирается очень похожая история.


Вот что получается. Ниже выводятся результаты подбора моделей с разными автокорреляцинными функциями, информация про которые выведена в каждом из случаев.

### Для Acartia

```{r}

Abundance_phen <- merge(Abundance_melt, phen_all, by = c("Year", "Species"))

Abundance_phen$Log_N <- log(Abundance_phen$N + 1)

library(nlme)

species = "Acartia"

Mod_1 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ])

Mod_2 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corCompSymm(form = ~ Year))

Mod_3 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corAR1(form = ~ 1 | Year))

Mod_4_1 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 1, q = 0))

Mod_4_2 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA( p = 2, q = 0))

Mod_4_3 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 3, q = 0))

Mod_4_4 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 1))

Mod_4_5 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 2))

Mod_4_6 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 3))


# AIC(Mod_1, Mod_2, Mod_3, Mod_4_1, Mod_4_2, Mod_4_4, Mod_4_5)


# E_Mod_1 <- resid(Mod_1, type = "normalized")
# acf(E_Mod_1)
# 
# acf(Abundance_phen$Log_N[Abundance_phen$Species == species])

# E_Mod_winner <- resid(Mod_4_1, type = "normalized")
# acf(E_Mod_winner)


summary(Mod_4_1)

```

Здесь пршлось вставить в модель функцию оисывающую автокорреляцию первого порядка. 

У данного вида НЕ будет статистически значимой связи с фенологией. Кроме того, у этой твари есть какие-то автокорреляции высоких порядков, что свидетельствует о наличии каких-то долговременных циклов  (период около 4 лет, может больше). 
Однако у данного вида наблюдается многолетний тренд сокращения обилия, не связанный со сдвигами в фенологии. 

На мой взгляд, эту всю бодягу с долговременными процессами лучше оставить на следующий этап работ с материалом, так как есть еще несколько видов с очень подозрительной динамикой, в которой могут существовать долговременные циклы, которые могут быть следствием каких-то внутривидовых или межвидовых отношений.



### Для Calanus

```{r}

species = "Calanus"

Mod_1 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ])

Mod_2 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corCompSymm(form = ~ Year))

Mod_3 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corAR1(form = ~ 1 | Year))

Mod_4_1 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 1, q = 0))

Mod_4_2 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA( p = 2, q = 0))

Mod_4_3 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 3, q = 0))

Mod_4_4 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 1))

Mod_4_5 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 2))

Mod_4_6 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 3))


# AIC(Mod_1, Mod_2, Mod_3, Mod_4_1, Mod_4_2, Mod_4_3,  Mod_4_4, Mod_4_5, Mod_4_6)

# 
# E_Mod_1 <- resid(Mod_1, type = "normalized")
# acf(E_Mod_1)
# 
# acf(Abundance_phen$Log_N[Abundance_phen$Species == species])

# E_Mod_winner <- resid(Mod_4_1, type = "normalized")
# acf(E_Mod_winner)


summary(Mod_4_1)

```

Здесь пршлось вставить в модель функцию оисывающую автокорреляцию первого порядка. 


У Calanus связь с фенологией НЕ будет статистически значимой. Нет и значимого многолетнего тренда к снижению численности.  

Кстати, у данного вида тоже есть какие-то долговременные циклы (с периодом 3-6 лет). 



### Для Centropages

```{r}

species = "Centropages"

Mod_1 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ])

Mod_2 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corCompSymm(form = ~ Year))

Mod_3 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corAR1(form = ~ 1 | Year))

Mod_4_1 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 1, q = 0))

Mod_4_2 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA( p = 2, q = 0))

Mod_4_3 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 3, q = 0))

Mod_4_4 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 1))

Mod_4_5 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 2))

Mod_4_6 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 3))


# AIC(Mod_1, Mod_2, Mod_3, Mod_4_1, Mod_4_2, Mod_4_3,  Mod_4_4, Mod_4_5, Mod_4_6)

# 
# E_Mod_1 <- resid(Mod_1, type = "normalized")
# acf(E_Mod_1)
# 
# acf(Abundance_phen$Log_N[Abundance_phen$Species == species])

# E_Mod_winner <- resid(Mod_4_1, type = "normalized")
# acf(E_Mod_winner)
# 

summary(Mod_1)

```

В этом случае, даже с поправкой Бонферрони, мы видим статистически значимую связь с фенологией. 

У этого вида явных следов автокорреляции не выявляется и вид демонстрирует какие-то очень простые межгодовые (случайные?) колебания численности. 
Никаких поправок на автокорреляцию вставлять не пришлось.





### Для Microsetella

```{r}

species = "Microsetella"

Mod_1 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ])

Mod_2 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corCompSymm(form = ~ Year))

Mod_3 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corAR1(form = ~ 1 | Year))

Mod_4_1 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 1, q = 0))

Mod_4_2 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA( p = 2, q = 0))

Mod_4_3 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 3, q = 0))

Mod_4_4 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 1))

Mod_4_5 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 2))

Mod_4_6 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 3))


# AIC(Mod_1, Mod_2, Mod_3, Mod_4_1, Mod_4_2, Mod_4_3,  Mod_4_4, Mod_4_5, Mod_4_6)

# 
# E_Mod_1 <- resid(Mod_1, type = "normalized")
# acf(E_Mod_1)
# 
# acf(Abundance_phen$Log_N[Abundance_phen$Species == species])
# E_Mod_winner <- resid(Mod_4_5, type = "normalized")
# acf(E_Mod_winner)
# 

summary(Mod_4_5)

```

У этого вида выявляется статистически значимая связь обилия со сроками фенологии. Но и здесь пришлось вводить непростую поправку на автокоррелированность. То есть здесь тоже есть существенные подозрения на наличие многолетних циклов (Вероятно с периодом около 3 лет).




### Для Oithona

```{r}

species = "Oithona"

Mod_1 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ])

Mod_2 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corCompSymm(form = ~ Year))

Mod_3 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corAR1(form = ~ 1 | Year))

Mod_4_1 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 1, q = 0))

Mod_4_2 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA( p = 2, q = 0))

Mod_4_3 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 3, q = 0))

Mod_4_4 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 1))

Mod_4_5 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 2))

Mod_4_6 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 3))


# AIC(Mod_1, Mod_2, Mod_3, Mod_4_1, Mod_4_2, Mod_4_3,  Mod_4_4, Mod_4_5, Mod_4_6)

# 
# E_Mod_1 <- resid(Mod_1, type = "normalized")
# acf(E_Mod_1)
# 
# acf(Abundance_phen$Log_N[Abundance_phen$Species == species])
# E_Mod_winner <- resid(Mod_4_5, type = "normalized")
# acf(E_Mod_winner)
# 

summary(Mod_1)

```

Никакой связи с фенологией. Никаких поправок на автокорреляцию вводить не пршлось. 





### Для Pseudocalanus

```{r}

species = "Pseudocalanus"

Mod_1 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ])

Mod_2 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corCompSymm(form = ~ Year))

Mod_3 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corAR1(form = ~ 1 | Year))

Mod_4_1 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 1, q = 0))

Mod_4_2 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA( p = 2, q = 0))

Mod_4_3 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 3, q = 0))

Mod_4_4 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 1))

Mod_4_5 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 2))

Mod_4_6 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 3))


# AIC(Mod_1, Mod_2, Mod_3, Mod_4_1, Mod_4_2, Mod_4_3,  Mod_4_4, Mod_4_5, Mod_4_6)

# 
# E_Mod_1 <- resid(Mod_1, type = "normalized")
# acf(E_Mod_1)
# 
# acf(Abundance_phen$Log_N[Abundance_phen$Species == species])
# E_Mod_winner <- resid(Mod_4_5, type = "normalized")
# acf(E_Mod_winner)
# 

summary(Mod_1)

```

Никакой связи с фенологией.  Никаких поправок на автокорреляцию вводить не пришлось.






### Для Temora

```{r}

species = "Temora"

Mod_1 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ])

Mod_2 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corCompSymm(form = ~ Year))

Mod_3 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corAR1(form = ~ 1 | Year))

Mod_4_1 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 1, q = 0))

Mod_4_2 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA( p = 2, q = 0))

Mod_4_3 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 3, q = 0))

Mod_4_4 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 1))

Mod_4_5 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 2))

Mod_4_6 <- gls(Log_N ~ Begin + Year, data = Abundance_phen[Abundance_phen$Species == species, ], correlation = corARMA(p = 0, q = 3))


# AIC(Mod_1, Mod_2, Mod_3, Mod_4_1, Mod_4_2, Mod_4_3,  Mod_4_4, Mod_4_5, Mod_4_6)

# 
# E_Mod_1 <- resid(Mod_1, type = "normalized")
# acf(E_Mod_1)
# 
# acf(Abundance_phen$Log_N[Abundance_phen$Species == species])
# E_Mod_winner <- resid(Mod_1, type = "normalized")
# acf(E_Mod_winner)
# 

summary(Mod_1)

```

Здесь все ОК! 
Никаких поправок на автокорреляцию вводить не пришлось.
Связь хорошая: Чем позднее вылезает в планктон, тем меньше численность.


=========================

Вот такой очень громоздкий анализ получается. Я сейчас еще немного пороюсь литературе, может найду рецепт, как это все упростить, но не факт, что выйдет. 




